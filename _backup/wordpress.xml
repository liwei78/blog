<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.2" created="2013-10-06 04:59" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>里克的自习室</title>
	<link>http://railser.cn</link>
	<description>关注Ruby和Rails的学习与开发</description>
	<pubDate>Sun, 06 Oct 2013 04:59:50 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://railser.cn</wp:base_site_url>
	<wp:base_blog_url>http://railser.cn</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>hi@liwei.me</wp:author_email><wp:author_display_name><![CDATA[里克]]></wp:author_display_name><wp:author_first_name><![CDATA[克]]></wp:author_first_name><wp:author_last_name><![CDATA[里]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>wangjiaopeng</wp:author_login><wp:author_email>wjp2013@gmail.com</wp:author_email><wp:author_display_name><![CDATA[2013]]></wp:author_display_name><wp:author_first_name><![CDATA[jiaopeng]]></wp:author_first_name><wp:author_last_name><![CDATA[wang]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>advanced-rails</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Advanced Rails]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>84</wp:term_id><wp:category_nicename>mac</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[apple mac]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>default</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[default]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>flexible-rails</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Flexible Rails]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>iphone</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[iPhone]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>movies</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[movies]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>123</wp:term_id><wp:category_nicename>openerp</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[openerp]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>others</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[others]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>tech</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[RailsNote]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>textmate</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[TextMate]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>translation</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[translation]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>%e6%9c%aa%e5%88%86%e7%b1%bb</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[未分类]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>activemessaging</wp:tag_slug><wp:tag_name><![CDATA[ActiveMessaging]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>activemq</wp:tag_slug><wp:tag_name><![CDATA[ActiveMQ]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>acts_as_taggable</wp:tag_slug><wp:tag_name><![CDATA[acts_as_taggable]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>adobe</wp:tag_slug><wp:tag_name><![CDATA[adobe]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>ajax</wp:tag_slug><wp:tag_name><![CDATA[ajax]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>amf</wp:tag_slug><wp:tag_name><![CDATA[amf]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>apache</wp:tag_slug><wp:tag_name><![CDATA[apache]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>api</wp:tag_slug><wp:tag_name><![CDATA[api]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>app</wp:tag_slug><wp:tag_name><![CDATA[app]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>atnotes</wp:tag_slug><wp:tag_name><![CDATA[ATnotes]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>attachment_fu</wp:tag_slug><wp:tag_name><![CDATA[attachment_fu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>agile-web-development-with-rails</wp:tag_slug><wp:tag_name><![CDATA[AWDWR]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>blog</wp:tag_slug><wp:tag_name><![CDATA[blog]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>book</wp:tag_slug><wp:tag_name><![CDATA[book]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>books</wp:tag_slug><wp:tag_name><![CDATA[books]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>capistrano</wp:tag_slug><wp:tag_name><![CDATA[capistrano]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>101</wp:term_id><wp:tag_slug>centos</wp:tag_slug><wp:tag_name><![CDATA[centos]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>114</wp:term_id><wp:tag_slug>cloud</wp:tag_slug><wp:tag_name><![CDATA[cloud]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>cms</wp:tag_slug><wp:tag_name><![CDATA[cms]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>co-op</wp:tag_slug><wp:tag_name><![CDATA[co-op]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>comsenz</wp:tag_slug><wp:tag_name><![CDATA[comsenz]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>crontab</wp:tag_slug><wp:tag_name><![CDATA[crontab]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>discuz</wp:tag_slug><wp:tag_name><![CDATA[discuz]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>ezadmin</wp:tag_slug><wp:tag_name><![CDATA[EZAdmin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>fckeditor</wp:tag_slug><wp:tag_name><![CDATA[fckeditor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>flash</wp:tag_slug><wp:tag_name><![CDATA[flash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>flashpaper</wp:tag_slug><wp:tag_name><![CDATA[flashpaper]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>flex</wp:tag_slug><wp:tag_name><![CDATA[flex]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>haml</wp:tag_slug><wp:tag_name><![CDATA[haml]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>icu4c</wp:tag_slug><wp:tag_name><![CDATA[icu4c]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>125</wp:term_id><wp:tag_slug>imagemagick</wp:tag_slug><wp:tag_name><![CDATA[imagemagick]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>95</wp:term_id><wp:tag_slug>ipad</wp:tag_slug><wp:tag_name><![CDATA[ipad]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>iphone-2</wp:tag_slug><wp:tag_name><![CDATA[iphone]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>jabber</wp:tag_slug><wp:tag_name><![CDATA[jabber]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>jobs</wp:tag_slug><wp:tag_name><![CDATA[jobs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>jquery</wp:tag_slug><wp:tag_name><![CDATA[jquery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>leslie</wp:tag_slug><wp:tag_name><![CDATA[Leslie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>107</wp:term_id><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>mac-2</wp:tag_slug><wp:tag_name><![CDATA[mac]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>mashup</wp:tag_slug><wp:tag_name><![CDATA[mashup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>mephisto</wp:tag_slug><wp:tag_name><![CDATA[mephisto]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>mini</wp:tag_slug><wp:tag_name><![CDATA[mini]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>modoer</wp:tag_slug><wp:tag_name><![CDATA[modoer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>movie</wp:tag_slug><wp:tag_name><![CDATA[movie]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>nginx</wp:tag_slug><wp:tag_name><![CDATA[nginx]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>124</wp:term_id><wp:tag_slug>ooor</wp:tag_slug><wp:tag_name><![CDATA[ooor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>openerp</wp:tag_slug><wp:tag_name><![CDATA[openerp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>opensocial</wp:tag_slug><wp:tag_name><![CDATA[opensocial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>oscar</wp:tag_slug><wp:tag_name><![CDATA[oscar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>106</wp:term_id><wp:tag_slug>passenger</wp:tag_slug><wp:tag_name><![CDATA[passenger]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>php</wp:tag_slug><wp:tag_name><![CDATA[php]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>plugin</wp:tag_slug><wp:tag_name><![CDATA[plugin]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>plugins</wp:tag_slug><wp:tag_name><![CDATA[plugins]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>r4r</wp:tag_slug><wp:tag_name><![CDATA[r4r]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>rails</wp:tag_slug><wp:tag_name><![CDATA[rails]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>93</wp:term_id><wp:tag_slug>rails3</wp:tag_slug><wp:tag_name><![CDATA[rails3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>100</wp:term_id><wp:tag_slug>rails31</wp:tag_slug><wp:tag_name><![CDATA[rails31]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>rdoc</wp:tag_slug><wp:tag_name><![CDATA[rdoc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>111</wp:term_id><wp:tag_slug>readline</wp:tag_slug><wp:tag_name><![CDATA[readline]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>redmine</wp:tag_slug><wp:tag_name><![CDATA[redmine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>remoting</wp:tag_slug><wp:tag_name><![CDATA[remoting]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>rest</wp:tag_slug><wp:tag_name><![CDATA[REST]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>rmagic</wp:tag_slug><wp:tag_name><![CDATA[rmagic]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>roa</wp:tag_slug><wp:tag_name><![CDATA[ROA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>rspec</wp:tag_slug><wp:tag_name><![CDATA[rspec]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>ruby</wp:tag_slug><wp:tag_name><![CDATA[ruby]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>rvm</wp:tag_slug><wp:tag_name><![CDATA[rvm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>97</wp:term_id><wp:tag_slug>sass</wp:tag_slug><wp:tag_name><![CDATA[sass]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>92</wp:term_id><wp:tag_slug>sbs</wp:tag_slug><wp:tag_name><![CDATA[sbs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>sns</wp:tag_slug><wp:tag_name><![CDATA[sns]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>software</wp:tag_slug><wp:tag_name><![CDATA[software]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>sql</wp:tag_slug><wp:tag_name><![CDATA[sql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>ssh</wp:tag_slug><wp:tag_name><![CDATA[ssh]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>stomp</wp:tag_slug><wp:tag_name><![CDATA[STOMP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>svn</wp:tag_slug><wp:tag_name><![CDATA[svn]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>textmate</wp:tag_slug><wp:tag_name><![CDATA[TextMate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>thermo</wp:tag_slug><wp:tag_name><![CDATA[thermo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>thickbox</wp:tag_slug><wp:tag_name><![CDATA[thickbox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>twitter</wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>uc</wp:tag_slug><wp:tag_name><![CDATA[uc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>ucenter</wp:tag_slug><wp:tag_name><![CDATA[ucenter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>uch</wp:tag_slug><wp:tag_name><![CDATA[uch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>uchome</wp:tag_slug><wp:tag_name><![CDATA[uchome]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>ui</wp:tag_slug><wp:tag_name><![CDATA[ui]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>validate</wp:tag_slug><wp:tag_name><![CDATA[validate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>weborb</wp:tag_slug><wp:tag_name><![CDATA[weborb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>whenever</wp:tag_slug><wp:tag_name><![CDATA[whenever]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>xmpp</wp:tag_slug><wp:tag_name><![CDATA[xmpp]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>xmpp4r</wp:tag_slug><wp:tag_name><![CDATA[xmpp4r]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>%e4%b8%80%e6%b1%bd%e5%ae%b6%e5%9b%ad</wp:tag_slug><wp:tag_name><![CDATA[一汽家园]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>%e4%b8%80%e8%90%8c</wp:tag_slug><wp:tag_name><![CDATA[一萌]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>sankuaishi</wp:tag_slug><wp:tag_name><![CDATA[三块石]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>%e4%b8%89%e5%9d%97%e7%9f%b3</wp:tag_slug><wp:tag_name><![CDATA[三块石]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>%e5%8e%86%e5%8f%b2</wp:tag_slug><wp:tag_name><![CDATA[历史]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>%e5%8f%b8%e9%a9%ac%e8%bf%81</wp:tag_slug><wp:tag_name><![CDATA[司马迁]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>%e6%90%9c%e7%b4%a2%e5%bc%95%e6%93%8e</wp:tag_slug><wp:tag_name><![CDATA[搜索引擎]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>diary</wp:tag_slug><wp:tag_name><![CDATA[日记]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>%e6%97%a5%e8%ae%b0</wp:tag_slug><wp:tag_name><![CDATA[日记]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>127</wp:term_id><wp:tag_slug>%e6%b5%8b%e8%af%95</wp:tag_slug><wp:tag_name><![CDATA[测试]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>%e6%b7%98%e5%ae%9d%e5%ae%a2</wp:tag_slug><wp:tag_name><![CDATA[淘宝客]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>%e7%94%b5%e5%ad%90%e7%83%9f</wp:tag_slug><wp:tag_name><![CDATA[电子烟]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>%e7%9b%9b%e5%a4%a7%e4%ba%91</wp:tag_slug><wp:tag_name><![CDATA[盛大云]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>%e7%a3%81%e7%96%97</wp:tag_slug><wp:tag_name><![CDATA[磁疗]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>%e7%a4%be%e5%8c%ba</wp:tag_slug><wp:tag_name><![CDATA[社区]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>%e7%a6%8f%e5%ba%b7</wp:tag_slug><wp:tag_name><![CDATA[福康]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>%e8%bf%9c%e7%ba%a2%e5%a4%96%e7%ba%bf</wp:tag_slug><wp:tag_name><![CDATA[远红外线]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>%e9%87%8d%e6%9e%84</wp:tag_slug><wp:tag_name><![CDATA[重构]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>sui-bi</wp:tag_slug><wp:tag_name><![CDATA[随笔]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>%e9%9a%8f%e7%ac%94</wp:tag_slug><wp:tag_name><![CDATA[随笔]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.5.2</generator>

	<item>
		<title>viewfile</title>
		<link>http://railser.cn/blog/welcome-to-zqcjr-org/viewfile</link>
		<pubDate>Sat, 03 Oct 2009 11:29:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/viewfile.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>423</wp:post_id>
		<wp:post_date>2009-10-03 19:29:36</wp:post_date>
		<wp:post_date_gmt>2009-10-03 11:29:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>viewfile</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>422</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/viewfile.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[viewfile.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"190";s:6:"height";s:2:"40";s:14:"hwstring_small";s:23:"height='26' width='128'";s:4:"file";s:12:"viewfile.gif";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"viewfile-150x40.gif";s:5:"width";s:3:"150";s:6:"height";s:2:"40";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DSC_0015</title>
		<link>http://railser.cn/blog/welcome-to-zqcjr-org/dsc_0015</link>
		<pubDate>Sun, 04 Oct 2009 03:14:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/DSC_0015.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>426</wp:post_id>
		<wp:post_date>2009-10-04 11:14:34</wp:post_date>
		<wp:post_date_gmt>2009-10-04 03:14:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc_0015</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>422</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/DSC_0015.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[DSC_0015.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"266";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:12:"DSC_0015.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"DSC_0015-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"DSC_0015-300x199.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DSC_0063</title>
		<link>http://railser.cn/blog/welcome-to-zqcjr-org/dsc_0063</link>
		<pubDate>Sun, 04 Oct 2009 03:16:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/DSC_0063.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>428</wp:post_id>
		<wp:post_date>2009-10-04 11:16:44</wp:post_date>
		<wp:post_date_gmt>2009-10-04 03:16:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc_0063</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>422</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/DSC_0063.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[DSC_0063.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"266";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:12:"DSC_0063.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"DSC_0063-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"DSC_0063-300x199.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>参加联想青年公益创业计划比赛现场</title>
		<link>http://railser.cn/blog/i-am-fine-and-busy/dsc_0332</link>
		<pubDate>Tue, 08 Dec 2009 12:43:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/DSC_0332.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>433</wp:post_id>
		<wp:post_date>2009-12-08 20:43:17</wp:post_date>
		<wp:post_date_gmt>2009-12-08 12:43:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc_0332</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>432</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/DSC_0332.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[DSC_0332.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"266";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:12:"DSC_0332.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"DSC_0332-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"DSC_0332-300x199.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>美工雪儿</title>
		<link>http://railser.cn/blog/i-am-fine-and-busy/img0131a</link>
		<pubDate>Tue, 08 Dec 2009 12:46:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/IMG0131A.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2009-12-08 20:46:05</wp:post_date>
		<wp:post_date_gmt>2009-12-08 12:46:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>img0131a</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>432</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/IMG0131A.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[IMG0131A.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"400";s:6:"height";s:3:"300";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:12:"IMG0131A.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"IMG0131A-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"IMG0131A-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>T2hHJcXXRXXXXXXXXX_!!26761329.jpg_620x10000</title>
		<link>http://railser.cn/blog/i-am-mac-now/t2hhjcxxrxxxxxxxxx_26761329-jpg_620x10000</link>
		<pubDate>Fri, 30 Apr 2010 07:07:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/T2hHJcXXRXXXXXXXXX_26761329.jpg_620x10000.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date>2010-04-30 15:07:41</wp:post_date>
		<wp:post_date_gmt>2010-04-30 07:07:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>t2hhjcxxrxxxxxxxxx_26761329-jpg_620x10000</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>440</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/T2hHJcXXRXXXXXXXXX_26761329.jpg_620x10000.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[T2hHJcXXRXXXXXXXXX_26761329.jpg_620x10000.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"620";s:6:"height";s:3:"620";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:45:"T2hHJcXXRXXXXXXXXX_26761329.jpg_620x10000.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:53:"T2hHJcXXRXXXXXXXXX_26761329.jpg_620x10000-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:53:"T2hHJcXXRXXXXXXXXX_26761329.jpg_620x10000-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>T1HNBsXlxlXXXBc6_b_094607.jpg_310x310</title>
		<link>http://railser.cn/blog/i-am-mac-now/t1hnbsxlxlxxxbc6_b_094607-jpg_310x310</link>
		<pubDate>Fri, 30 Apr 2010 07:12:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/T1HNBsXlxlXXXBc6_b_094607.jpg_310x310.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>443</wp:post_id>
		<wp:post_date>2010-04-30 15:12:27</wp:post_date>
		<wp:post_date_gmt>2010-04-30 07:12:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>t1hnbsxlxlxxxbc6_b_094607-jpg_310x310</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>440</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/T1HNBsXlxlXXXBc6_b_094607.jpg_310x310.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[T1HNBsXlxlXXXBc6_b_094607.jpg_310x310.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"310";s:6:"height";s:3:"310";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:41:"T1HNBsXlxlXXXBc6_b_094607.jpg_310x310.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"T1HNBsXlxlXXXBc6_b_094607.jpg_310x310-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"T1HNBsXlxlXXXBc6_b_094607.jpg_310x310-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2010-04-30 下午03.18.45</title>
		<link>http://railser.cn/blog/i-am-mac-now/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2010-04-30-%e4%b8%8b%e5%8d%8803-18-45</link>
		<pubDate>Fri, 30 Apr 2010 07:20:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2010-04-30-下午03.18.45.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2010-04-30 15:20:34</wp:post_date>
		<wp:post_date_gmt>2010-04-30 07:20:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2010-04-30-%e4%b8%8b%e5%8d%8803-18-45</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>440</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2010-04-30-下午03.18.45.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2010-04-30-下午03.18.45.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"338";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:42:"屏幕快照-2010-04-30-下午03.18.45.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:50:"屏幕快照-2010-04-30-下午03.18.45-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:50:"屏幕快照-2010-04-30-下午03.18.45-300x169.png";s:5:"width";s:3:"300";s:6:"height";s:3:"169";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>screen</title>
		<link>http://railser.cn/blog/i-am-mac-now/screen</link>
		<pubDate>Fri, 30 Apr 2010 07:23:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/screen.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date>2010-04-30 15:23:35</wp:post_date>
		<wp:post_date_gmt>2010-04-30 07:23:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screen</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>440</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/screen.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[screen.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"338";s:14:"hwstring_small";s:23:"height='72' width='128'";s:4:"file";s:10:"screen.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"screen-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"screen-300x169.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"169";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DSC03408</title>
		<link>http://railser.cn/blog/mac-mini%e5%88%b0%e5%ba%95%e6%9c%89%e5%a4%9amini%ef%bc%9f%ef%bc%9f/dsc03408</link>
		<pubDate>Fri, 30 Apr 2010 11:08:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/DSC03408.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>448</wp:post_id>
		<wp:post_date>2010-04-30 19:08:04</wp:post_date>
		<wp:post_date_gmt>2010-04-30 11:08:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc03408</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>447</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/DSC03408.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[DSC03408.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"450";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:12:"DSC03408.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"DSC03408-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"DSC03408-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DSC03405</title>
		<link>http://railser.cn/blog/mac-mini%e5%88%b0%e5%ba%95%e6%9c%89%e5%a4%9amini%ef%bc%9f%ef%bc%9f/dsc03405</link>
		<pubDate>Fri, 30 Apr 2010 11:08:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/DSC03405.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>449</wp:post_id>
		<wp:post_date>2010-04-30 19:08:06</wp:post_date>
		<wp:post_date_gmt>2010-04-30 11:08:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dsc03405</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>447</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/DSC03405.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[DSC03405.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"450";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:12:"DSC03405.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"DSC03405-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"DSC03405-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mac short cut key</title>
		<link>http://railser.cn/blog/mac-with-normal-keyboard/mac-short-cut-key</link>
		<pubDate>Sat, 01 May 2010 08:13:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/mac-short-cut-key.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2010-05-01 16:13:49</wp:post_date>
		<wp:post_date_gmt>2010-05-01 08:13:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac-short-cut-key</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>451</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/mac-short-cut-key.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[mac-short-cut-key.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"306";s:6:"height";s:3:"134";s:14:"hwstring_small";s:23:"height='56' width='128'";s:4:"file";s:21:"mac-short-cut-key.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"mac-short-cut-key-150x134.png";s:5:"width";s:3:"150";s:6:"height";s:3:"134";}s:6:"medium";a:3:{s:4:"file";s:29:"mac-short-cut-key-300x131.png";s:5:"width";s:3:"300";s:6:"height";s:3:"131";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mac keyboard</title>
		<link>http://railser.cn/blog/mac-with-normal-keyboard/mac-keyboard</link>
		<pubDate>Sat, 01 May 2010 08:24:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/mac-keyboard.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2010-05-01 16:24:11</wp:post_date>
		<wp:post_date_gmt>2010-05-01 08:24:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac-keyboard</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>451</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/mac-keyboard.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[mac-keyboard.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"729";s:6:"height";s:3:"350";s:14:"hwstring_small";s:23:"height='61' width='127'";s:4:"file";s:16:"mac-keyboard.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"mac-keyboard-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"mac-keyboard-300x144.png";s:5:"width";s:3:"300";s:6:"height";s:3:"144";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1</title>
		<link>http://railser.cn/blog/hash-invert/attachment/1</link>
		<pubDate>Thu, 05 Aug 2010 03:07:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>468</wp:post_id>
		<wp:post_date>2010-08-05 11:07:43</wp:post_date>
		<wp:post_date_gmt>2010-08-05 03:07:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>464</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"485";s:6:"height";s:2:"74";s:14:"hwstring_small";s:23:"height='19' width='128'";s:4:"file";s:5:"1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:12:"1-150x74.png";s:5:"width";s:3:"150";s:6:"height";s:2:"74";}s:6:"medium";a:3:{s:4:"file";s:12:"1-300x45.png";s:5:"width";s:3:"300";s:6:"height";s:2:"45";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2</title>
		<link>http://railser.cn/blog/hash-invert/attachment/2</link>
		<pubDate>Thu, 05 Aug 2010 03:07:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>469</wp:post_id>
		<wp:post_date>2010-08-05 11:07:46</wp:post_date>
		<wp:post_date_gmt>2010-08-05 03:07:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>464</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"485";s:6:"height";s:2:"61";s:14:"hwstring_small";s:23:"height='16' width='128'";s:4:"file";s:5:"2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:12:"2-150x61.png";s:5:"width";s:3:"150";s:6:"height";s:2:"61";}s:6:"medium";a:3:{s:4:"file";s:12:"2-300x37.png";s:5:"width";s:3:"300";s:6:"height";s:2:"37";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3</title>
		<link>http://railser.cn/blog/hash-invert/attachment/3</link>
		<pubDate>Thu, 05 Aug 2010 03:07:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date>2010-08-05 11:07:47</wp:post_date>
		<wp:post_date_gmt>2010-08-05 03:07:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>464</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/3.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"741";s:6:"height";s:2:"72";s:14:"hwstring_small";s:23:"height='12' width='128'";s:4:"file";s:5:"3.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:12:"3-150x72.png";s:5:"width";s:3:"150";s:6:"height";s:2:"72";}s:6:"medium";a:3:{s:4:"file";s:12:"3-300x29.png";s:5:"width";s:3:"300";s:6:"height";s:2:"29";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4</title>
		<link>http://railser.cn/blog/hash-invert/attachment/4</link>
		<pubDate>Thu, 05 Aug 2010 03:11:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2010-08-05 11:11:18</wp:post_date>
		<wp:post_date_gmt>2010-08-05 03:11:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>464</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/4.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"379";s:6:"height";s:2:"20";s:14:"hwstring_small";s:22:"height='6' width='128'";s:4:"file";s:5:"4.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:12:"4-150x20.png";s:5:"width";s:3:"150";s:6:"height";s:2:"20";}s:6:"medium";a:3:{s:4:"file";s:12:"4-300x15.png";s:5:"width";s:3:"300";s:6:"height";s:2:"15";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>合影</title>
		<link>http://railser.cn/?attachment_id=524</link>
		<pubDate>Tue, 09 Nov 2010 04:22:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P091110_12.16.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>524</wp:post_id>
		<wp:post_date>2010-11-09 12:22:02</wp:post_date>
		<wp:post_date_gmt>2010-11-09 04:22:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P091110_12.16.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P091110_12.16.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:17:"P091110_12.16.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"P091110_12.16-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"P091110_12.16-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:26:"P091110_12.16-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1289304978";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/?attachment_id=525</link>
		<pubDate>Tue, 09 Nov 2010 04:24:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P091110_12.16_01.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>525</wp:post_id>
		<wp:post_date>2010-11-09 12:24:09</wp:post_date>
		<wp:post_date_gmt>2010-11-09 04:24:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P091110_12.16_01.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P091110_12.16_01.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"P091110_12.16_01.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"P091110_12.16_01-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"P091110_12.16_01-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:29:"P091110_12.16_01-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1289304996";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>bad</title>
		<link>http://railser.cn/blog/bad-of-douban-fm-ui-design/bad</link>
		<pubDate>Thu, 16 Dec 2010 05:39:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/bad.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>562</wp:post_id>
		<wp:post_date>2010-12-16 13:39:49</wp:post_date>
		<wp:post_date_gmt>2010-12-16 05:39:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bad</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>561</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/bad.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[bad.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"417";s:6:"height";s:3:"271";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:7:"bad.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:15:"bad-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:15:"bad-300x194.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"194";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pause</title>
		<link>http://railser.cn/blog/bad-of-douban-fm-ui-design/pause</link>
		<pubDate>Thu, 16 Dec 2010 05:48:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/pause.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>563</wp:post_id>
		<wp:post_date>2010-12-16 13:48:41</wp:post_date>
		<wp:post_date_gmt>2010-12-16 05:48:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pause</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>561</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/pause.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[pause.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"415";s:6:"height";s:3:"266";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:9:"pause.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:17:"pause-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:17:"pause-300x192.png";s:5:"width";s:3:"300";s:6:"height";s:3:"192";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2011-03-20 11.08.28</title>
		<link>http://railser.cn/blog/redmine-plugin-dev-note/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-20-11-08-28</link>
		<pubDate>Sun, 20 Mar 2011 15:11:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2011-03-20-11.08.28.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>592</wp:post_id>
		<wp:post_date>2011-03-20 23:11:19</wp:post_date>
		<wp:post_date_gmt>2011-03-20 15:11:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-20-11-08-28</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>591</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2011-03-20-11.08.28.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2011-03-20-11.08.28.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1249";s:6:"height";s:3:"806";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:36:"屏幕快照-2011-03-20-11.08.28.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2011-03-20-11.08.28-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2011-03-20-11.08.28-300x193.png";s:5:"width";s:3:"300";s:6:"height";s:3:"193";}s:5:"large";a:3:{s:4:"file";s:45:"屏幕快照-2011-03-20-11.08.28-1024x660.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"660";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2011-03-29 10.10.25</title>
		<link>http://railser.cn/blog/redmine-plugin-dev-note/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-29-10-10-25</link>
		<pubDate>Tue, 29 Mar 2011 02:11:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-10.10.25.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>595</wp:post_id>
		<wp:post_date>2011-03-29 10:11:46</wp:post_date>
		<wp:post_date_gmt>2011-03-29 02:11:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-29-10-10-25</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>591</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-10.10.25.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2011-03-29-10.10.25.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"859";s:6:"height";s:3:"303";s:14:"hwstring_small";s:23:"height='45' width='128'";s:4:"file";s:36:"屏幕快照-2011-03-29-10.10.25.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2011-03-29-10.10.25-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2011-03-29-10.10.25-300x105.png";s:5:"width";s:3:"300";s:6:"height";s:3:"105";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2011-03-29 11.23.49</title>
		<link>http://railser.cn/blog/redmine-plugin-dev-note/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-29-11-23-49</link>
		<pubDate>Tue, 29 Mar 2011 03:24:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-11.23.49.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>596</wp:post_id>
		<wp:post_date>2011-03-29 11:24:16</wp:post_date>
		<wp:post_date_gmt>2011-03-29 03:24:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-29-11-23-49</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>591</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-11.23.49.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2011-03-29-11.23.49.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"314";s:6:"height";s:2:"49";s:14:"hwstring_small";s:23:"height='19' width='128'";s:4:"file";s:36:"屏幕快照-2011-03-29-11.23.49.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"屏幕快照-2011-03-29-11.23.49-150x49.png";s:5:"width";s:3:"150";s:6:"height";s:2:"49";}s:6:"medium";a:3:{s:4:"file";s:43:"屏幕快照-2011-03-29-11.23.49-300x46.png";s:5:"width";s:3:"300";s:6:"height";s:2:"46";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2011-03-29 11.40.53</title>
		<link>http://railser.cn/blog/redmine-plugin-dev-note/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-29-11-40-53</link>
		<pubDate>Tue, 29 Mar 2011 03:41:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-11.40.53.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>597</wp:post_id>
		<wp:post_date>2011-03-29 11:41:30</wp:post_date>
		<wp:post_date_gmt>2011-03-29 03:41:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2011-03-29-11-40-53</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>591</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-11.40.53.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2011-03-29-11.40.53.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"705";s:6:"height";s:3:"140";s:14:"hwstring_small";s:23:"height='25' width='128'";s:4:"file";s:36:"屏幕快照-2011-03-29-11.40.53.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2011-03-29-11.40.53-150x140.png";s:5:"width";s:3:"150";s:6:"height";s:3:"140";}s:6:"medium";a:3:{s:4:"file";s:43:"屏幕快照-2011-03-29-11.40.53-300x59.png";s:5:"width";s:3:"300";s:6:"height";s:2:"59";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pm_sound</title>
		<link>http://railser.cn/blog/discuz72-pm_sound/pm_sound</link>
		<pubDate>Tue, 23 Aug 2011 07:33:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/pm_sound.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>650</wp:post_id>
		<wp:post_date>2011-08-23 15:33:18</wp:post_date>
		<wp:post_date_gmt>2011-08-23 07:33:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pm_sound</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>648</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/pm_sound.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[pm_sound.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>01200000007181115881009551065</title>
		<link>http://railser.cn/blog/man-on-rails/attachment/01200000007181115881009551065</link>
		<pubDate>Mon, 04 Jun 2012 06:32:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/01200000007181115881009551065.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date>2012-06-04 14:32:18</wp:post_date>
		<wp:post_date_gmt>2012-06-04 06:32:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>01200000007181115881009551065</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>663</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/01200000007181115881009551065.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[01200000007181115881009551065.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"430";s:6:"height";s:3:"281";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:33:"01200000007181115881009551065.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:41:"01200000007181115881009551065-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:41:"01200000007181115881009551065-300x196.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"196";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1282236489274</title>
		<link>http://railser.cn/blog/man-on-rails/attachment/1282236489274</link>
		<pubDate>Mon, 04 Jun 2012 06:54:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/1282236489274.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>669</wp:post_id>
		<wp:post_date>2012-06-04 14:54:59</wp:post_date>
		<wp:post_date_gmt>2012-06-04 06:54:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1282236489274</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>663</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/1282236489274.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[1282236489274.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"602";s:14:"hwstring_small";s:22:"height='96' width='79'";s:4:"file";s:17:"1282236489274.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"1282236489274-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"1282236489274-249x300.jpg";s:5:"width";s:3:"249";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-06 11.20.14</title>
		<link>http://railser.cn/blog/rails-dev-board/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-06-11-20-14</link>
		<pubDate>Wed, 06 Jun 2012 03:20:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-06-11.20.14.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>675</wp:post_id>
		<wp:post_date>2012-06-06 11:20:50</wp:post_date>
		<wp:post_date_gmt>2012-06-06 03:20:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-06-11-20-14</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>674</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-06-11.20.14.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-06-11.20.14.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"951";s:6:"height";s:3:"320";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-06-11.20.14.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-06-11.20.14-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-06-11.20.14-300x100.png";s:5:"width";s:3:"300";s:6:"height";s:3:"100";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-05 09.54.49</title>
		<link>http://railser.cn/blog/cms-part-i/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-05-09-54-49</link>
		<pubDate>Sat, 09 Jun 2012 15:08:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-09.54.49.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2012-06-09 23:08:39</wp:post_date>
		<wp:post_date_gmt>2012-06-09 15:08:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-05-09-54-49</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-09.54.49.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-05-09.54.49.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"617";s:6:"height";s:3:"372";s:14:"hwstring_small";s:23:"height='77' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-05-09.54.49.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-05-09.54.49-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-05-09.54.49-300x180.png";s:5:"width";s:3:"300";s:6:"height";s:3:"180";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-05 10.10.58</title>
		<link>http://railser.cn/blog/cms-part-i/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-05-10-10-58</link>
		<pubDate>Sat, 09 Jun 2012 15:08:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-10.10.58.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>682</wp:post_id>
		<wp:post_date>2012-06-09 23:08:43</wp:post_date>
		<wp:post_date_gmt>2012-06-09 15:08:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-05-10-10-58</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-10.10.58.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-05-10.10.58.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1359";s:6:"height";s:3:"706";s:14:"hwstring_small";s:23:"height='66' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-05-10.10.58.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-05-10.10.58-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-05-10.10.58-300x155.png";s:5:"width";s:3:"300";s:6:"height";s:3:"155";}s:5:"large";a:3:{s:4:"file";s:45:"屏幕快照-2012-06-05-10.10.58-1024x531.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"531";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-09 11.15.55</title>
		<link>http://railser.cn/blog/cms-part-i/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-15-55</link>
		<pubDate>Sat, 09 Jun 2012 15:16:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.15.55.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>683</wp:post_id>
		<wp:post_date>2012-06-09 23:16:36</wp:post_date>
		<wp:post_date_gmt>2012-06-09 15:16:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-15-55</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.15.55.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-09-11.15.55.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1219";s:6:"height";s:3:"563";s:14:"hwstring_small";s:23:"height='59' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-09-11.15.55.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.15.55-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.15.55-300x138.png";s:5:"width";s:3:"300";s:6:"height";s:3:"138";}s:5:"large";a:3:{s:4:"file";s:45:"屏幕快照-2012-06-09-11.15.55-1024x472.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"472";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-09 11.19.44</title>
		<link>http://railser.cn/blog/cms-part-i/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-19-44</link>
		<pubDate>Sat, 09 Jun 2012 15:20:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.19.44.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>684</wp:post_id>
		<wp:post_date>2012-06-09 23:20:12</wp:post_date>
		<wp:post_date_gmt>2012-06-09 15:20:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-19-44</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.19.44.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-09-11.19.44.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1282";s:6:"height";s:3:"964";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-09-11.19.44.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.19.44-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.19.44-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:45:"屏幕快照-2012-06-09-11.19.44-1024x769.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"769";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-09 11.23.45</title>
		<link>http://railser.cn/blog/cms-part-i/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-23-45</link>
		<pubDate>Sat, 09 Jun 2012 15:24:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.23.45.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>685</wp:post_id>
		<wp:post_date>2012-06-09 23:24:24</wp:post_date>
		<wp:post_date_gmt>2012-06-09 15:24:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-23-45</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.23.45.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-09-11.23.45.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1290";s:6:"height";s:3:"936";s:14:"hwstring_small";s:23:"height='92' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-09-11.23.45.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.23.45-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.23.45-300x217.png";s:5:"width";s:3:"300";s:6:"height";s:3:"217";}s:5:"large";a:3:{s:4:"file";s:45:"屏幕快照-2012-06-09-11.23.45-1024x742.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"742";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-09 11.47.26</title>
		<link>http://railser.cn/blog/cms-part-i/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-47-26</link>
		<pubDate>Sat, 09 Jun 2012 15:49:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.47.26.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>686</wp:post_id>
		<wp:post_date>2012-06-09 23:49:11</wp:post_date>
		<wp:post_date_gmt>2012-06-09 15:49:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-09-11-47-26</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>678</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.47.26.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-09-11.47.26.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1024";s:6:"height";s:3:"467";s:14:"hwstring_small";s:23:"height='58' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-09-11.47.26.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.47.26-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-09-11.47.26-300x136.png";s:5:"width";s:3:"300";s:6:"height";s:3:"136";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>files5</title>
		<link>http://railser.cn/blog/cms-part-ii/files5</link>
		<pubDate>Sun, 10 Jun 2012 09:07:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/files5.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>693</wp:post_id>
		<wp:post_date>2012-06-10 17:07:33</wp:post_date>
		<wp:post_date_gmt>2012-06-10 09:07:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>files5</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>692</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/files5.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[files5.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"900";s:6:"height";s:3:"631";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:10:"files5.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"files5-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"files5-300x210.png";s:5:"width";s:3:"300";s:6:"height";s:3:"210";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-10 05.31.36</title>
		<link>http://railser.cn/blog/cms-part-ii/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-10-05-31-36</link>
		<pubDate>Sun, 10 Jun 2012 09:32:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-10-05.31.36.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>694</wp:post_id>
		<wp:post_date>2012-06-10 17:32:01</wp:post_date>
		<wp:post_date_gmt>2012-06-10 09:32:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-10-05-31-36</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>692</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-10-05.31.36.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-10-05.31.36.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"493";s:6:"height";s:3:"320";s:14:"hwstring_small";s:23:"height='83' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-10-05.31.36.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-10-05.31.36-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-10-05.31.36-300x194.png";s:5:"width";s:3:"300";s:6:"height";s:3:"194";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>QQ截图20120610192321</title>
		<link>http://railser.cn/blog/cms-part-ii/qq%e6%88%aa%e5%9b%be20120610192321</link>
		<pubDate>Sun, 10 Jun 2012 11:23:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/QQ截图20120610192321.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>699</wp:post_id>
		<wp:post_date>2012-06-10 19:23:43</wp:post_date>
		<wp:post_date_gmt>2012-06-10 11:23:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qq%e6%88%aa%e5%9b%be20120610192321</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>692</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/QQ截图20120610192321.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[QQ截图20120610192321.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1367";s:6:"height";s:3:"664";s:14:"hwstring_small";s:23:"height='62' width='128'";s:4:"file";s:26:"QQ截图20120610192321.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"QQ截图20120610192321-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"QQ截图20120610192321-300x145.png";s:5:"width";s:3:"300";s:6:"height";s:3:"145";}s:5:"large";a:3:{s:4:"file";s:35:"QQ截图20120610192321-1024x497.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"497";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-11 05.13.00</title>
		<link>http://railser.cn/?attachment_id=708</link>
		<pubDate>Mon, 11 Jun 2012 09:13:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-11-05.13.00.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date>2012-06-11 17:13:26</wp:post_date>
		<wp:post_date_gmt>2012-06-11 09:13:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-11-05-13-00</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/-2012-06-11-05.13.00-e1339406061801.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[-2012-06-11-05.13.00-e1339406061801.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"150";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:39:"-2012-06-11-05.13.00-e1339406061801.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-11-05.13.00-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-11-05.13.00-300x150.png";s:5:"width";s:3:"300";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_backup_sizes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";s:3:"864";s:6:"height";s:3:"433";s:4:"file";s:24:"-2012-06-11-05.13.00.png";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-13 02.03.21</title>
		<link>http://railser.cn/blog/cms-part-iii/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-13-02-03-21</link>
		<pubDate>Wed, 13 Jun 2012 06:04:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-13-02.03.21.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>712</wp:post_id>
		<wp:post_date>2012-06-13 14:04:48</wp:post_date>
		<wp:post_date_gmt>2012-06-13 06:04:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-13-02-03-21</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>706</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-13-02.03.21.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-13-02.03.21.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1558";s:6:"height";s:3:"923";s:14:"hwstring_small";s:23:"height='75' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-13-02.03.21.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-13-02.03.21-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-13-02.03.21-300x177.png";s:5:"width";s:3:"300";s:6:"height";s:3:"177";}s:5:"large";a:3:{s:4:"file";s:45:"屏幕快照-2012-06-13-02.03.21-1024x606.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"606";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ms_large</title>
		<link>http://railser.cn/blog/cms-part-iii/ms_large</link>
		<pubDate>Wed, 13 Jun 2012 07:50:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/ms_large.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>714</wp:post_id>
		<wp:post_date>2012-06-13 15:50:41</wp:post_date>
		<wp:post_date_gmt>2012-06-13 07:50:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ms_large</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>706</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/ms_large.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[ms_large.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"541";s:14:"hwstring_small";s:23:"height='86' width='128'";s:4:"file";s:12:"ms_large.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"ms_large-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"ms_large-300x202.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"202";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cc_large</title>
		<link>http://railser.cn/blog/cms-part-iii/cc_large</link>
		<pubDate>Wed, 13 Jun 2012 07:50:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/cc_large.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>715</wp:post_id>
		<wp:post_date>2012-06-13 15:50:48</wp:post_date>
		<wp:post_date_gmt>2012-06-13 07:50:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cc_large</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>706</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/cc_large.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[cc_large.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"831";s:14:"hwstring_small";s:22:"height='96' width='92'";s:4:"file";s:12:"cc_large.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"cc_large-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"cc_large-288x300.jpg";s:5:"width";s:3:"288";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ie_large</title>
		<link>http://railser.cn/blog/cms-part-iii/ie_large</link>
		<pubDate>Wed, 13 Jun 2012 07:50:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/ie_large.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>716</wp:post_id>
		<wp:post_date>2012-06-13 15:50:53</wp:post_date>
		<wp:post_date_gmt>2012-06-13 07:50:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie_large</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>706</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/ie_large.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[ie_large.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"800";s:6:"height";s:3:"467";s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:12:"ie_large.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"ie_large-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"ie_large-300x175.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"175";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-06-14 02.20.34</title>
		<link>http://railser.cn/blog/cms-part-iv/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-14-02-20-34</link>
		<pubDate>Thu, 14 Jun 2012 06:21:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-06-14-02.20.34.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date>2012-06-14 14:21:01</wp:post_date>
		<wp:post_date_gmt>2012-06-14 06:21:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-06-14-02-20-34</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>722</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-06-14-02.20.34.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-06-14-02.20.34.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1125";s:6:"height";s:3:"567";s:14:"hwstring_small";s:23:"height='64' width='128'";s:4:"file";s:36:"屏幕快照-2012-06-14-02.20.34.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-14-02.20.34-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-06-14-02.20.34-300x151.png";s:5:"width";s:3:"300";s:6:"height";s:3:"151";}s:5:"large";a:3:{s:4:"file";s:45:"屏幕快照-2012-06-14-02.20.34-1024x516.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"516";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>adva_cms_admin</title>
		<link>http://railser.cn/blog/cms-part-iv/adva_cms_admin</link>
		<pubDate>Thu, 14 Jun 2012 06:47:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/adva_cms_admin.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>730</wp:post_id>
		<wp:post_date>2012-06-14 14:47:43</wp:post_date>
		<wp:post_date_gmt>2012-06-14 06:47:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adva_cms_admin</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>722</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/adva_cms_admin.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[adva_cms_admin.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"921";s:6:"height";s:3:"579";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:18:"adva_cms_admin.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"adva_cms_admin-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"adva_cms_admin-300x188.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"188";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2008328153753877_2</title>
		<link>http://railser.cn/blog/cms-part-v/2008328153753877_2</link>
		<pubDate>Thu, 14 Jun 2012 12:50:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/2008328153753877_2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>738</wp:post_id>
		<wp:post_date>2012-06-14 20:50:24</wp:post_date>
		<wp:post_date_gmt>2012-06-14 12:50:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2008328153753877_2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>734</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/2008328153753877_2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2008328153753877_2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"333";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:22:"2008328153753877_2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"2008328153753877_2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:30:"2008328153753877_2-300x199.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"199";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2133640_101557004797_2</title>
		<link>http://railser.cn/blog/cms-part-v/2133640_101557004797_2</link>
		<pubDate>Thu, 14 Jun 2012 12:51:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/2133640_101557004797_2.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>739</wp:post_id>
		<wp:post_date>2012-06-14 20:51:04</wp:post_date>
		<wp:post_date_gmt>2012-06-14 12:51:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2133640_101557004797_2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>734</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/2133640_101557004797_2.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2133640_101557004797_2.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"479";s:14:"hwstring_small";s:23:"height='96' width='100'";s:4:"file";s:26:"2133640_101557004797_2.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"2133640_101557004797_2-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"2133640_101557004797_2-300x287.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"287";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>0140760085</title>
		<link>http://railser.cn/blog/cms-part-v/attachment/0140760085</link>
		<pubDate>Thu, 14 Jun 2012 14:34:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/0140760085.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2012-06-14 22:34:39</wp:post_date>
		<wp:post_date_gmt>2012-06-14 14:34:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>0140760085</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>734</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/0140760085.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[0140760085.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"600";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:14:"0140760085.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"0140760085-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"0140760085-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-09-02 03.01.26</title>
		<link>http://railser.cn/blog/donot-write-this-way-in-rails-query/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-09-02-03-01-26</link>
		<pubDate>Sun, 02 Sep 2012 07:04:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.01.26.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>767</wp:post_id>
		<wp:post_date>2012-09-02 15:04:20</wp:post_date>
		<wp:post_date_gmt>2012-09-02 07:04:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-09-02-03-01-26</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>765</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.01.26.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-09-02-03.01.26.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"520";s:6:"height";s:3:"270";s:14:"hwstring_small";s:23:"height='66' width='128'";s:4:"file";s:36:"屏幕快照-2012-09-02-03.01.26.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-09-02-03.01.26-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:44:"屏幕快照-2012-09-02-03.01.26-300x155.png";s:5:"width";s:3:"300";s:6:"height";s:3:"155";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-09-02 03.16.01</title>
		<link>http://railser.cn/blog/donot-write-this-way-in-rails-query/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-09-02-03-16-01</link>
		<pubDate>Sun, 02 Sep 2012 07:16:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.16.01.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>768</wp:post_id>
		<wp:post_date>2012-09-02 15:16:24</wp:post_date>
		<wp:post_date_gmt>2012-09-02 07:16:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-09-02-03-16-01</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>765</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.16.01.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-09-02-03.16.01.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1003";s:6:"height";s:3:"176";s:14:"hwstring_small";s:23:"height='22' width='128'";s:4:"file";s:36:"屏幕快照-2012-09-02-03.16.01.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-09-02-03.16.01-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"屏幕快照-2012-09-02-03.16.01-300x52.png";s:5:"width";s:3:"300";s:6:"height";s:2:"52";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>屏幕快照 2012-09-02 03.22.54</title>
		<link>http://railser.cn/blog/donot-write-this-way-in-rails-query/%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-09-02-03-22-54</link>
		<pubDate>Sun, 02 Sep 2012 07:23:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.22.54.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>770</wp:post_id>
		<wp:post_date>2012-09-02 15:23:17</wp:post_date>
		<wp:post_date_gmt>2012-09-02 07:23:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b1%8f%e5%b9%95%e5%bf%ab%e7%85%a7-2012-09-02-03-22-54</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>765</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.22.54.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[屏幕快照-2012-09-02-03.22.54.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"792";s:6:"height";s:3:"150";s:14:"hwstring_small";s:23:"height='24' width='128'";s:4:"file";s:36:"屏幕快照-2012-09-02-03.22.54.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"屏幕快照-2012-09-02-03.22.54-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"屏幕快照-2012-09-02-03.22.54-300x56.png";s:5:"width";s:3:"300";s:6:"height";s:2:"56";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>T1kNzrXkJrXXboK5A7_064841.jpg_b</title>
		<link>http://railser.cn/?attachment_id=775</link>
		<pubDate>Sun, 21 Oct 2012 06:41:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/T1kNzrXkJrXXboK5A7_064841.jpg_b.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>775</wp:post_id>
		<wp:post_date>2012-10-21 14:41:22</wp:post_date>
		<wp:post_date_gmt>2012-10-21 06:41:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>t1knzrxkjrxxbok5a7_064841-jpg_b</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/T1kNzrXkJrXXboK5A7_064841.jpg_b.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[T1kNzrXkJrXXboK5A7_064841.jpg_b.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"220";s:6:"height";s:3:"220";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:36:"T1kNzrXkJrXXboK5A7_064841.jpg_b.jpeg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:44:"T1kNzrXkJrXXboK5A7_064841.jpg_b-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-3</link>
		<pubDate>Thu, 25 Oct 2012 04:45:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_19.11_01.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>777</wp:post_id>
		<wp:post_date>2012-10-25 12:45:17</wp:post_date>
		<wp:post_date_gmt>2012-10-25 04:45:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_19.11_01.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_19.11_01.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"P241012_19.11_01.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"P241012_19.11_01-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"P241012_19.11_01-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:29:"P241012_19.11_01-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351105896";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-4</link>
		<pubDate>Thu, 25 Oct 2012 04:45:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_19.11.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>778</wp:post_id>
		<wp:post_date>2012-10-25 12:45:44</wp:post_date>
		<wp:post_date_gmt>2012-10-25 04:45:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_19.11.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_19.11.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:17:"P241012_19.11.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"P241012_19.11-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"P241012_19.11-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:26:"P241012_19.11-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351105886";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-5</link>
		<pubDate>Thu, 25 Oct 2012 04:46:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_19.12.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>779</wp:post_id>
		<wp:post_date>2012-10-25 12:46:03</wp:post_date>
		<wp:post_date_gmt>2012-10-25 04:46:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-5</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_19.12.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_19.12.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:17:"P241012_19.12.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"P241012_19.12-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"P241012_19.12-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:26:"P241012_19.12-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351105975";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-6</link>
		<pubDate>Thu, 25 Oct 2012 04:52:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_17.51_01.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>780</wp:post_id>
		<wp:post_date>2012-10-25 12:52:26</wp:post_date>
		<wp:post_date_gmt>2012-10-25 04:52:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-6</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_17.51_01.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_17.51_01.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"P241012_17.51_01.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"P241012_17.51_01-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"P241012_17.51_01-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:29:"P241012_17.51_01-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351101081";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-7</link>
		<pubDate>Thu, 25 Oct 2012 04:55:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_17.55_02.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>781</wp:post_id>
		<wp:post_date>2012-10-25 12:55:09</wp:post_date>
		<wp:post_date_gmt>2012-10-25 04:55:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-7</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_17.55_02.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_17.55_02.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"P241012_17.55_02.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"P241012_17.55_02-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"P241012_17.55_02-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:29:"P241012_17.55_02-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351101360";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-8</link>
		<pubDate>Thu, 25 Oct 2012 04:55:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_17.55.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>782</wp:post_id>
		<wp:post_date>2012-10-25 12:55:40</wp:post_date>
		<wp:post_date_gmt>2012-10-25 04:55:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-8</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_17.55.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_17.55.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:17:"P241012_17.55.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"P241012_17.55-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"P241012_17.55-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:26:"P241012_17.55-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351101302";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-9</link>
		<pubDate>Thu, 25 Oct 2012 04:56:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_19.05.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>783</wp:post_id>
		<wp:post_date>2012-10-25 12:56:09</wp:post_date>
		<wp:post_date_gmt>2012-10-25 04:56:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-9</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_19.05.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_19.05.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:17:"P241012_19.05.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:25:"P241012_19.05-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:25:"P241012_19.05-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:26:"P241012_19.05-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351105519";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>S</title>
		<link>http://railser.cn/blog/update-09-mac-mini/s-10</link>
		<pubDate>Thu, 25 Oct 2012 05:03:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/wp-content/uploads/P241012_17.55_01.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>784</wp:post_id>
		<wp:post_date>2012-10-25 13:03:40</wp:post_date>
		<wp:post_date_gmt>2012-10-25 05:03:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>s-10</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>776</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://railser.cn/wp-content/uploads/P241012_17.55_01.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[P241012_17.55_01.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1600";s:6:"height";s:4:"1200";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"P241012_17.55_01.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"P241012_17.55_01-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"P241012_17.55_01-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:29:"P241012_17.55_01-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:3:"2.8";s:6:"credit";s:0:"";s:6:"camera";s:5:"KP500";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1351101313";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"3.55";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:1:"S";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flex on Rails 开发中的validate校验</title>
		<link>http://railser.cn/?p=4</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

从这篇开始，将陆续的把自己学习《Flexible Rails Flex 3 on Rails 2》的总结整理上来。主要包括（暂定）：

一、validation in Flex on Rails：Flex on Rails 中的校验

二、Refactoring to Cairngorm：使用Cairngorm框架重构

三、Holding state on the client properly ：在客户端保持状态

四、Refactoring to RubyAMF ：使用RubyAMF重构

五、Rails on AIR

Flex on Rails开发的学习对我来说是个漫长的过程，因为目前毕竟不是主流开发手段，尤其又出现了很多<a href="http://advancedrails.com/" target="_blank">高级Rails应用的书</a>，还需要去看和学习，整理，所以这篇博客是一个提纲和开始，后面会一点点完善，也希望看到的朋友通过留言，帮助我加快整理的速度。

关于Flexible Rails : Flex 3 on Rails 2

<a href="http://railser.cn/wp-content/uploads/2007/10/armstrong_cover150.jpg" title="Flexible Rails"></a>
<p style="text-align: center"><a href="http://railser.cn/wp-content/uploads/2007/10/armstrong_cover150.jpg" title="Flexible Rails"><img src="http://railser.cn/wp-content/uploads/2007/10/armstrong_cover150.jpg" alt="Flexible Rails" /></a></p>
看到现在，这本书除了非常详细的讲了Flex  on Rails的开发外，还引用了很多的博客和文章，多数都值得去看一下，所以，这本书是在FOR 开发的精髓和目录，跟七十二章经的那本小册子目录一样，看需要三年，全学完需要三十年？？

而我们真的就只有一晚来学习了，呵呵。我估计今年应该会出一个FOR的重量级应用，不过我最较乌鸦，who知道呢。下面来简单的整理下 validation in Flex on Rails：Flex on Rails 中的校验 的笔记吧。
<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
一、预备知识

现在想想 <a href="http://railser.cn/archives/flex3-essential-training" target="_blank">《Flex3要点训练》视频系列</a> 里介绍的只是真的很受用，安全可以在第一次看FOR时跳过一些内容，或者更快的接受一些内容。而且感慨的是里面的英语讲解很易懂。

二、

资料：

<a href="http://labs.adobe.com/wiki/index.php/Cairngorm" target="_blank">Cairngorm</a>

<a href="http://www.adobe.com/devnet/flex/articles/cairngorm_pt1.html" target="_blank">Developing Flex RIAs with Cairngorm Microarchitecture – Part 1: Introducing Cairngorm</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date>2009-01-30 01:34:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flexible-rails-flex-3-on-rails-2-part-1</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[flex]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
	</item>
	<item>
		<title>TextMate快捷键收集</title>
		<link>http://railser.cn/?p=5</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=277</guid>
		<description></description>
		<content:encoded><![CDATA[请记得收藏本页，俺会更新这篇文章收集本Blog中出现的TextMate快捷键，但是有一些特殊用法没有记录在本文，所以还是请你花点时间给我们贡献一下PV，把相关文章全浏览一遍吧。
<ul>
	<li>Ctrl+Apple+N 创建一个新项目project</li>
	<li>Ctrl+Option+Apple+D 是否显示项目边栏</li>
	<li>Ctrl+Apple+S 保存项目</li>
	<li>Ctrl+Tab 在代码编辑窗口和文件边栏之间切换焦点</li>
	<li>Apple+T 跳转到指定文件</li>
	<li>Apple+数字键1-9 切换不同的代码编辑窗口</li>
	<li>Option+Apple+方向键左右 切换不同的代码编辑窗口</li>
	<li>Option+Apple+方向键上 切换不同扩展名但文件名相同的文件</li>
	<li>Ctrl+P 光标移动到上一行</li>
	<li>Ctrl+N 光标移动到下一行</li>
	<li>Ctrl+B 光标向左移动一个字符</li>
	<li>Ctrl+F 光标向右移动一个字符</li>
	<li>Ctrl+A 光标移动到该行开头</li>
	<li>Ctrl+E 光标移动到该行结尾</li>
	<li>Ctrl+V 光标移动到文档结尾</li>
	<li>Apple+L 跳转掉指定行</li>
	<li>Shift+Apple+T 跳转到某一方法</li>
	<li>Apple+F2 定义一个书签</li>
	<li>Option+Apple+B 显示或隐藏书签栏</li>
	<li>F2 切换书签</li>
	<li>Shift+F2 反向切换书签</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2009-01-30 01:34:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一份总结</title>
		<link>http://railser.cn/?p=6</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2009-01-30 01:34:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby for rails 摘录</title>
		<link>http://railser.cn/?p=8</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=310</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2009-01-30 01:34:53</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate的HTML快捷键</title>
		<link>http://railser.cn/?p=9</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li>选中文字后按 appli + I 是 em</li>
	<li>选中文字后按 appli + B 是 strong</li>
	<li>选中一行文字后按 shift ＋ctrl ＋W 是用一对标签包裹它 </li>
	<li>选中多行文字后按 shift ＋ctrl ＋ apple＋W 是用一组标签包裹各行</li>
	<li>选中文字后按 ctrl ＋ apple＋H 是用 h* 标签包裹它</li>
	<li>选中多行文字后按 ctrl ＋ apple＋L 是用列表标签包裹各行</li>
	<li>选中文字后按 ctrl ＋ apple＋B 是用块标签包裹它</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2009-01-30 01:34:54</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>信任，以及2008的回忆</title>
		<link>http://railser.cn/?p=10</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=408</guid>
		<description></description>
		<content:encoded><![CDATA[过完春节，才算09年的开始。

08年是一个内容丰富的一年，各种web应用在按照各自的进度一点点进化演变。静观其变吧。

08年，艳照，雪灾，地震，欧洲杯，奥运会，三鹿奶粉。

08年，李猪猪小朋友开始学说话，从简单的“啊？”，到昨天跟我说：“村长，你在干什么？”（来自喜羊羊与灰太狼的台词）。

为了李猪猪小朋友的健康成长，我放弃了一些工作机会。这个期间学到了一个关键词：信任。正是这些信任才让我坚持工作到了09年，又开始了新一年的规划。

这几天没办法开电脑，儿子看到鼠标灯亮着就要抢，为了小孩子的眼睛我就不开电脑了。没事的时候看看之前的几本书。那天看john Resig的精通javascript，后面介绍他担任非盈利组织的程序员。这使我突然想到自己也为心语协会工作了几年了，内容是维护网站，还讲过课，培训网站的管理员等等。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2009-06-30 04:48:18</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2009</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>谁是里克</title>
		<link>http://railser.cn/me</link>
		<pubDate>Fri, 19 Oct 2007 04:55:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/index.php/me</guid>
		<description></description>
		<content:encoded><![CDATA[个人简历 &amp; 开发经验：

<ul>
	<li>04年长春大学毕业，专业：会计学。大学第一学期，教c语言的老师说：我也有会计证，和你们的一样，可是我拿这个会计证用了4个月，你们要用4年。所以我开始自学计算机的东西。不过你知道自学和科班学是不一样的。</li>
	<li>05年创办锋线科技 有限公司，目的就是锻炼一下。</li>
	<li>06年公司注销，因为什么时间需要做什么事情。</li>
	<li>06年夏，看了一届开心的世界杯。</li>
	<li>06年世界杯结束，到一萌电子上班， 工作内容：web程序开发。先后经历了社会化搜索引擎deyeb的全部开发过程：asp -&gt; python/django -&gt; ruby/rails。主要完成web程序设计部分以及项目讲解。</li>
	<li>07年7月，转为兼职，继续学习ruby和rails，同时开发rails项目。</li>
	<li>完成<a href="http://www.sousouren.com">搜搜人</a>的demo设计</li>
	<li>参与完成<a href="http://www.xsgo.com">xsgo.com</a>开发，负责用户部分和支付宝在线支付</li>
	<li>完成<a href="http://www.4rails.cn">4rails.cn</a>的demo设计</li>
	<li><a href="http://pingguo.tv">苹果网</a>部署及维护</li>
	<li>完成<a href="http://www.xinyu.org">心语家园</a>的改版，并维护服务器</li>
	<li>08年底开始百草网sns社区开发</li>
	<li>2010年8月，百草网正式上线。</li>
	<li>2011年从事企业站制作，维护服务器，amazon aws，盛大云服务部署</li>
	<li>2012年初，经历一个失败的项目</li>
	<li>2012年6月，开始写作cms系列文章，看欧洲杯</li>
</ul>

真实中的里克
<blockquote>李伟：我的榜样是张朝阳

贾一　《中国青年报》记者　彭冰

中国共青团网　　www.gqt.org.cn　　 2006年04月13日

那不可能算是箭步如飞，不，那甚至不能算作“走”。远远地看，吉林长春市锋线科技有限公司总经理李伟就像蹲在地上，一下一下挪动着双腿，及至记者迎到了跟前，他仰起瘦削的脸，露出的却是自信而又乐观的笑容，“走，去我公司谈”。李伟带记者走进电梯间，几乎是坐在地上的他，高高向上举起手臂去够按钮，有人要帮忙的时候，他抢先按了下去，“我天天上下班，没问题的。”李伟说。

李伟是个残疾人，6岁的一场重病导致肌肉发育不全，不仅双腿无法站立，右手的3根手指也无法伸直。2000年，李伟考入长春大学特教学院会计专业。在校期间，他先后通过了国家计算机三级和英语四级考试，并发挥网络技术特长与某电台成功合作建立了“锋线体育网”，但毕业找工作时，他仍处处碰壁。

“即使有能力，可哪个单位愿意接纳一个残疾人？”在李伟感到迷惘的时候，国家出台了一项政策：残疾人可以向残联就业服务中心申请贷款。李伟决定创办一家属于自己的网络公司。2004年年底，李伟的贷款批下来了。在等待贷款的半年时间里，李伟与同班同学董燕喜结良缘，贷款到手后，做会计工作的董燕很快帮丈夫办理好了一切手续。

李伟的公司选址在长春市高科技开发区里著名的“高科技大厦”，他的理由是“这里交通便捷，且IT公司云集，在客户心中早已有了知名度”。他的公司至今仍很简单；两台组装电脑、一张办公桌、几把椅子。

“选址，对于一个初创的公司绝对重要。刚入‘江湖’，我有很多不懂的地方，邻居就成了老师；再者，成熟商业氛围所吸引来的人气，也为我创造了‘守株待兔，坐等客户’的便利条件。”李伟很是感慨。

2005年5月30日，长春市锋线科技有限公司终于正式挂牌。“我的榜样就是张朝阳。”李伟经常重复这句话。

虽说有了自己的地盘，可仅仅1．5万元的启动资金让李伟捉襟见肘。“自己在外面再怎么苦再怎么累，也绝不能开口向家里借钱。万一赔了，等于把家人拖下了水，代价太大”。李伟给自己定了一个原则。

创业之初，李伟的公司规模小、经验少，撞上门的客户往往一看李伟是个残疾人，谈都不谈便拂袖而去。靠朋友的介绍，他才有了第一个“活儿”，不过，因为请来的美工经验不足，第一单业务反映平平。而后断断续续也有客户上门，但公司都未有大起色。“那时候，看到有客户来，真是紧张极了，对人家有求必应。现在才明白，做生意不能太迁就客户，否则会让自己陷入谈判劣势，得寸土必争才行。”李伟苦笑，急于求成的心态，让他那时“赚的钱很少，出的力却很多”。

更大的一只拦路虎，紧接着跳出来。锋线公司对于李伟，是全部身家，但对于员工而言，不过是一只暂时的饭碗。李伟慢慢发现，员工的积极性越来越差，有人甚至整日待在公司聊QQ、打游戏。“只想着争取业务，完全忽略了‘人’的因素”，亡羊补牢，李伟开始抓管理，但为时已晚，人心已散，几个他认真培训过的员工纷纷“跳槽”，留下的人也心猿意马，对公司前景缺乏信心。

2005年10月，李伟辞退了所有员工，开始了“一个人的战争”。开支虽然减下来了，管理问题也不复存在，但“孤军奋战”的滋味并不好受。“难道一路艰辛走来，却要就此放弃？”冷静下来后，李伟想了很多：要想办好网络公司，没有好的技术团队，不行；对公司的期望值太高，眼高手低，不行；身为总经理，不懂管理，更是万万不行。“谁也不是天生就会，多问问同行，多看看书，我不信学不会。”思前想后，李伟决心继续干下去。

李伟的坚持没有白费，现在他的公司已走过最初的困境，进入了发展阶段。

2006年一开始，李伟就忙得不可开交。他告诉记者，他决定扬长避短，与另外一家网络公司合作，优势互补，共同发展。他说：“在创业的这段时间里，我每天都在学习，每天都有变化。积累的经验越多，自信便越多。我相信，有一天，我会成功。”</blockquote>
1、05年开公司的时候，记者采访时候的照片

2、这就是我当时的工作状态，至今都羡慕那个时候

<img src="http://railser.cn/wp-content/uploads/2008/02/2.jpg" alt="李伟" />

3、总有些人见到我后问我能不能坐椅子，我觉得很搞笑。

<img src="http://railser.cn/wp-content/uploads/2008/02/3.jpg" alt="李伟" />

4、虽然小心，可是还是滑到，拍照的记者马上跑了过来

<img src="http://railser.cn/wp-content/uploads/2008/02/4.jpg" alt="李伟" />

5、现在左腿膝盖还是不能特灵活的支撑身体，不过较以前几个月好了很多。那个时候身体是30年来最好的吧。

<a title="李伟" href="http://railser.cn/wp-content/uploads/2008/02/5.jpg"><img src="http://railser.cn/wp-content/uploads/2008/02/5.thumbnail.jpg" alt="李伟" /></a> <a title="6.jpg" href="http://railser.cn/wp-content/uploads/2008/02/6.jpg"><img src="http://railser.cn/wp-content/uploads/2008/02/6.thumbnail.jpg" alt="6.jpg" /></a> <a title="7.jpg" href="http://railser.cn/wp-content/uploads/2008/02/7.jpg"><img src="http://railser.cn/wp-content/uploads/2008/02/7.thumbnail.jpg" alt="7.jpg" /></a>

下面是05年守望都市的采访，很老，但是唯一保存下来的采访录像。感谢小肥羊。

<a href="http://www.tudou.com/programs/view/apraw23pbAk/">http://www.tudou.com/programs/view/apraw23pbAk/</a>

update：2012年6月11日下午]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2007-10-19 12:55:23</wp:post_date>
		<wp:post_date_gmt>2007-10-19 04:55:23</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>me</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>加入Railser.cn</title>
		<link>http://railser.cn/join</link>
		<pubDate>Tue, 18 Dec 2007 14:27:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/join</guid>
		<description></description>
		<content:encoded><![CDATA[感谢大家多年来对这个博客的关注。

如果你有web应用技术的博客，或者知道的高质量的博客，请在这里留言，让更多的人从中收益。

谢谢。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2007-12-18 22:27:44</wp:post_date>
		<wp:post_date_gmt>2007-12-18 14:27:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>join</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[李飞雄]]></wp:comment_author>
			<wp:comment_author_email>lfx_cool@yahoo.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.170.138.200</wp:comment_author_IP>
			<wp:comment_date>2009-07-16 08:52:53</wp:comment_date>
			<wp:comment_date_gmt>2009-07-16 08:52:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[厉害！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3641</wp:comment_id>
			<wp:comment_author><![CDATA[wealk]]></wp:comment_author>
			<wp:comment_author_email>zhaopeng.rainbow@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.wealk.com</wp:comment_author_url>
			<wp:comment_author_IP>125.40.50.18</wp:comment_author_IP>
			<wp:comment_date>2010-08-13 22:42:00</wp:comment_date>
			<wp:comment_date_gmt>2010-08-13 14:42:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，我们是一个创业团队，想和您一起合作一个移动互联的sns网站。看好您的性格和技术。
如果您有兴趣的话，联系我的邮箱。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3725</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.9.70</wp:comment_author_IP>
			<wp:comment_date>2010-08-23 11:23:58</wp:comment_date>
			<wp:comment_date_gmt>2010-08-23 03:23:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好的。谢谢。这几天太忙了，今天把博客转移到新服务器，才发现这个邀请。邮件联系。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>3641</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4653</wp:comment_id>
			<wp:comment_author><![CDATA[mike]]></wp:comment_author>
			<wp:comment_author_email>mike.gao0611@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mike-gao.javaeye.com/</wp:comment_author_url>
			<wp:comment_author_IP>124.65.128.54</wp:comment_author_IP>
			<wp:comment_date>2011-01-04 17:55:08</wp:comment_date>
			<wp:comment_date_gmt>2011-01-04 09:55:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没有baidu空间。只有个借用的blog，自己的blog还没搞]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:10:"1294134909";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1294234871.15";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>RJS教程</title>
		<link>http://railser.cn/tutorial-rjs</link>
		<pubDate>Sun, 23 Mar 2008 07:16:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/rjs-tutorial</guid>
		<description></description>
		<content:encoded><![CDATA[Railser.cn首发本站一位坚定的<a href="http://www.douban.com/people/1098413/" target="_blank">支持者</a>翻译作品：《RJS教程》

<a href="http://railser.cn/rjs-tutorial/part-1.html" target="_blank">第一部分</a>

介绍RJS，并开始一个简单的例子

<a href="http://railser.cn/rjs-tutorial/part-2.html" target="_blank">第二部分</a>

RJS和Rails

<a href="http://railser.cn/rjs-tutorial/part-3.html" target="_blank">第三部分</a>， <a href="http://railser.cn/rjs-tutorial/part-4.html" target="_blank">第四部分</a>

RJS 实践: The Expense Tracker

<a href="http://railser.cn/rjs-tutorial/part-5.html" target="_blank">第五部分</a>

增强 Expense Tracker
<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2008-03-23 15:16:25</wp:post_date>
		<wp:post_date_gmt>2008-03-23 07:16:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tutorial-rjs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[谷健]]></wp:comment_author>
			<wp:comment_author_email>haoweiren1234@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.javaren.net</wp:comment_author_url>
			<wp:comment_author_IP>60.28.180.139</wp:comment_author_IP>
			<wp:comment_date>2009-03-08 03:04:43</wp:comment_date>
			<wp:comment_date_gmt>2009-03-08 03:04:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[您写的第一章的第一个例子有点问题，就是应是]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>177</wp:comment_id>
			<wp:comment_author><![CDATA[小寒]]></wp:comment_author>
			<wp:comment_author_email>hst13624584500@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>222.170.163.69</wp:comment_author_IP>
			<wp:comment_date>2009-09-27 17:53:13</wp:comment_date>
			<wp:comment_date_gmt>2009-09-27 09:53:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[值得尊敬的IT高手，希望你能大展鸿图]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>885</wp:comment_id>
			<wp:comment_author><![CDATA[kukuwuwu]]></wp:comment_author>
			<wp:comment_author_email>kukuwuwu@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.109.104.217</wp:comment_author_IP>
			<wp:comment_date>2009-12-09 11:04:05</wp:comment_date>
			<wp:comment_date_gmt>2009-12-09 03:04:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[经常看您的网站，刚才看了您个人的介绍，对您有了更多的了解，有些感动，加油！我支持您！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Objective-C 入门－1</title>
		<link>http://railser.cn/blog/objective-c-1</link>
		<pubDate>Sat, 01 Nov 2008 07:28:55 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>常用词语表</strong>：variables变量，statement语句行，compiler编译器，debugging调试

变量命名，变量名不能以数字开头，但数字可以出现在变量名中。例如 pictureWidth

首先需要声明变量。
<pre name="code" class="ruby">int pictureWidth;</pre>
变量分为 整型（int）单精度（float）常整型（long long） 双精度（double）

无符号整型（unsigned int）变量，声明的变量只能是正数
<pre name="code" class="ruby">unsigned int chocolateBarsInStock;</pre>

在定义变量类型的时候同时为它赋值
<pre name="code" class="ruby">float y= 3.5, z = 42;</pre>

运算符号 +, -, /, *, %

关于 x++ 和 ++x 的区别, 前面的是先调用x再运行加1的计算，后面是先运行加1的计算再调用结果
<pre name="code" class="ruby">x = 10; y = 2 * (x++);</pre>结果y=20
<pre name="code" class="ruby">x = 10; y = 2 * (++x);</pre>结果y=22]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2008-11-01 07:28:55</wp:post_date>
		<wp:post_date_gmt>2008-11-01 07:28:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>objective-c-1</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Objective-C 入门－2</title>
		<link>http://railser.cn/blog/objective-c-2</link>
		<pubDate>Sat, 01 Nov 2008 07:35:26 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[注释的写法，可以是
// This is a comment
或者
/* This is a comment
extending over two lines */]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2008-11-01 07:35:26</wp:post_date>
		<wp:post_date_gmt>2008-11-01 07:35:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>objective-c-2</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cocoa编程第3版第2章笔记</title>
		<link>http://railser.cn/blog/cocoa-programming-for-mac-os-x-2</link>
		<pubDate>Sun, 09 Nov 2008 18:34:06 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=298</guid>
		<description></description>
		<content:encoded><![CDATA[通常你是不需要编辑项目中的 main.m 文件的，默认的 main() 只是调用 NSApplicationMain() 。也就是从一个 nib 文件中载入 user interface 对象。Nib 文件是由 Interface Builder 创建。当载入 nib 文件后，你的程序就等待用户的操作。当用户点鼠标或者输入点啥之后，你的代码就会自动被调用。

如何创建一个类？ File-&gt;New File 选择  Cocoa -&gt; Objective-C class. 命名为 Foo.m 注意创建的文件要拖入到 Classes 文件夹。

<pre name="code" class="c#">
#import <cocoa/Cocoa.h>
@interface Foo : NSObject {
    IBOutlet NSTextField *textField;
}
-(IBAction)seed:(id)sender;
-(IBAction)generate:(id)sender;
@end
</pre>
<ul>
	<li>Foo 是 NSObject 的子类</li>
	<li>Foo 有一个实例变量：textField 指向 NSTextField 类的一个实例。</li>
	<li>Foo 有两个方法 seed: 和 generate: 是 action 方法。</li>
	<li>#import 类似 C 语言的 #include，但是 #import 只载入一次文件。这里必须载入 &lt;Cocoa/Cocoa.h&gt; 因为 NSObject 在那里定义。</li>
	<li>@ 符号表示这是一个 Objective-C 的关键字，用来跟 C 语言的关键字区分。</li>


</ul>

给 Foo 创建类的实例时，需要在 Identity Inspector 中把它的类设置成 Foo 。

下面介绍一些类型和常量
<ul>
	<li>id 指示任意类型对象。</li>
	<li>BOOL 和 char 一样，但是使用布尔值。</li>
	<li>YES 的值是 1</li>
	<li>NO 的值是 0</li>
	<li>nil 和 NULL 一样。我们使用 nil 而不是 NULL 来指示对象。</li>
	<li>IBOutlet 是一个不赋值的宏。</li>
	<li>IBAction 和 void 一样。</li>
</ul>

Objective-C 中所有的方法都是 public 的，所有的实例对象都是 protected 的。快捷键 Option＋Apple＋上 可以在文件名相同但扩展名不同的文件间切换。

在对象载入之后和事件发生之前，所有对象都会自动发送消息到 awakeFromNib ，所以你可以建立一个 awakeFromNib 方法来初始化 text field 的值。

下面描述一个应用程序的过程。首先运行 NSApplicationMain 函数，它创建一个 NSApplication 的对象。应用程序对象读取 main nib 文件，然后解压缩其中的对象。全部的对象都发送一个消息到 awakeFromNib 。然后应用程序对象检查是否有事件发生。当有鼠标或键盘动作的时候，window server 把事件信息传递到合适的应用程序的事件队列中。应用程序对象读取从对象中读取事件数据并传递给 user interface 对象，触发你的代码。如果代码修改了视图中的数据，则重新渲染该数据。当你退出程序时，NSApp 发送 terminate: message 。这一过程结束，并且销毁全部对象。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2008-11-09 18:34:06</wp:post_date>
		<wp:post_date_gmt>2008-11-09 18:34:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cocoa-programming-for-mac-os-x-2</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
	</item>
	<item>
		<title>uchome带来的sns站点的ui思考</title>
		<link>http://railser.cn/?p=351</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=351</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

ui的事情是我的弱项，至今心理上对css和js都存有障碍。之前做asp站点的时候被人诟病最多的就是这个设计。所以从bestmoban（最好的素材和模板下载站点）下载了几个G的模板，一个个的整理，做到心中有数。几年后，虽然美工的本事没啥长进，但是也算积累了很多。不过也终于不做前台，专心写程序。

最近的一个项目是Rails开发的sns。听到sns，所有人都会想到国内的开心网，校内网和外国的facebook，myspace（我很喜欢，06年的时候常去听歌，认识了一个网友，没事常聊看孩子的事情）。08年下半年好多项目都是要做给予sns关系网络的应用。首选当然是默默唧唧很久才发布1.5正式版的uchome。

结合几个客户的意见和应用中的发现，谈谈自己的想法，关于uchome，sns和ui的设计。

1、uchome的优点

建站快速，几分钟就可以拿出一个sns网站，可以看看kaixin2009.com，简单的操作即可拥有一个校内或者开心。（不是我的站）。

再高级一些，就是uchome的插件开发，官网论坛已经有好多，质量参差不齐，但是每个都值得学习借鉴。功能完成的也相当出色，尤其是几个流行的web game，早早的放出免费版。

这就是uchome的优点，开源，占领你的服务器，插件，让更多的人从事二次开发，赢取机会。

2、uchome建站方案

所以在客户找到我说做一个sns网站的时候，我首先推荐的当然是uchome，并且用我的<a href="http://www.17jiayuan.com" target="_blank">一汽家园</a>给了一遍演示。

至于客户提到的如点评，活动功能，都可以用插件完成。而且风格也更接近开心网，校内网。而这也正是客户提出的要求：要和校内差不多！

3、问题来了

当然，客户的要求是不会轻易满足的。比如目前的这个Rails项目，从技术层面提了很多要求，比如要灵活的扩展，要有自己的特色。加上客户对Rails的青睐，所以用Rails来做一次sns，是肯定的了。

在开始的时候，我还是用uchome的界面。这说起来有点搞笑，这毕竟是最省事的方法。可是用了一阵子，更大的问题来了。

4、审美疲劳

客户终于想换换风格了。

uch1.5正式版出来后，大多网站都上了uchome。加上discuz7.0的同步推出，uchome+discuz迅速成为建站首选。有人做了很出色的ui，可是这种人才毕竟少数。所以大多数网站保持着这种开心风格。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date>2009-01-30 04:54:11</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-uchome-and-the-sns-site-ui-design</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="uchome"><![CDATA[uchome]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>网店</title>
		<link>http://railser.cn/?page_id=516</link>
		<pubDate>Mon, 11 Oct 2010 02:08:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn</guid>
		<description></description>
		<content:encoded><![CDATA[<div><a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/264644.html" target="_blank">京东：苹果（Apple）iPad MB292CH/A 9.7英寸平板电脑 （16G WIFI版），3988元</a></div>
<div></div>
<div><a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/264644.html" target="_blank"><img src="http://img10.360buyimg.com/S0/4504/0aee6dc5-7ef2-4f37-b843-10209dea2e7a.jpg" alt="ipad 16g wifi" width="400" height="400" /></a></div>
<div></div>
<div><a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/264644.html" target="_blank"><img src="http://img10.360buyimg.com/S0/1995/0475775c-b6e1-4304-9b3a-236ee1ad72a6.jpg" alt="ipad 16" width="200" height="150" /></a> <a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/264644.html" target="_blank"><img src="http://img10.360buyimg.com/S0/3233/d4ada70a-7aa5-4689-9c5e-0942bd179ad0.jpg" alt="ipad 16g wifi" width="200" height="150" /></a></div>
<div></div>
<div><a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/292497.html" target="_blank">京东：苹果（APPLE）iPhone 4 手机16G（黑色）WCDMA/GSM正品行货，限量发售！，5880元</a></div>
<div><a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/292497.html" target="_blank"><img src="http://img10.360buyimg.com/S0/1325/b9bd5bd5-ca34-4a30-bd05-154e01359ebf.jpg" alt="ipad 16g wifi" width="400" /></a></div>
<div></div>
<div><a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/292790.html" target="_blank">京东：苹果（APPLE）iPhone 4 手机32G（黑色）WCDMA/GSM，6999元</a></div>
<div><a href="http://click.union.360buy.com/JdClick/?unionId=2991&t=1&to=http://www.360buy.com/product/292790.html" target="_blank"><img src="http://img10.360buyimg.com/S0/1325/b9bd5bd5-ca34-4a30-bd05-154e01359ebf.jpg" alt="ipad 16g wifi" width="400" /></a></div>
<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>516</wp:post_id>
		<wp:post_date>2010-10-11 10:08:41</wp:post_date>
		<wp:post_date_gmt>2010-10-11 02:08:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>shop</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3858</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@echangchun.net</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.36.236</wp:comment_author_IP>
			<wp:comment_date>2010-10-11 12:44:35</wp:comment_date>
			<wp:comment_date_gmt>2010-10-11 04:44:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[本站所有的商品均来自京东，当当等知名网站，所使用的技术仅为各网站联盟提供的链接，绝无虚假产品。这点可人品保证。每次产生的销售订单可以返款几元而已，仅作为个人消遣，积攒多了也只够买本书看的。本站增加这些内容只为丰富内容，不为盈利。供朋友们多个选择。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>危险的mysql LOCK TABLE导致的 mysql.sock丢失。。</title>
		<link>http://railser.cn/?p=645</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=645</guid>
		<description></description>
		<content:encoded><![CDATA[由于项目在mysql的设计上，缺少经验，在大量写入的情况下，硬盘塞满，导致mysql出现状况。

起初是访问很慢，然后是今天的问题，表被锁死，出现

Incorrect information in file: dataname.frm

紧急处理了一下，方法：

kill －9 mysqld 进程，

重启mysql

/etc/init.d/mysqld start

问题貌似解决，但是深层的问题一定要深挖]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>645</wp:post_id>
		<wp:post_date>2011-08-03 00:33:23</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>吐槽盛大云，请理性看待</title>
		<link>http://railser.cn/?p=758</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=758</guid>
		<description></description>
		<content:encoded><![CDATA[吐槽，也要讲究依据，理性的分析优劣，对于做事是必须的要求。来让我理性的吐槽一下盛大云。

1、盛大云华北节点的确是可以使用的，四个对我本人至关重要的项目，已经转移到华北节点。这种信任也是有风险的，不过对华东节点半年多的使用，还是可以放心。只是华北区申请双线的费用，实在高的离谱。由于一个双线线路只能使用一个固定IP，加上之前盛大华东节点说资源紧张，不给分配网通线路和IP，这里可以看到，盛大对资源的设定，有很大的问题。具体就是，IP，你到底能提供多少？

懂行的人都知道aws的IP随时申请，绑定主机。可是盛大云吹嘘很多软实力，硬实力上不去，让人骂是必然的。

2、可是盛大云的不专业，体现的最明显处，是备案环节，这让众多人反感、质疑、谩骂。

国内能把备案做到专业的，是息壤。我用了息壤几年，维护三个息壤账号（2个为朋友委托）。虽然各种流程细节还要个人把握，但是息壤的客服系统和备案系统，的确可以省一些时间。当然，不是说它多好，息壤的备案和客服系统也不好，但要会用。

说道盛大的备案系统，其实骂人的记录我看了，骂者还未懂原因，备案流程复杂的原因，备案说明细节前后不一致的原因，导致大家对它备案意见很大。它还可以备案么？可以，但是：

备份分两种，新备案，和已有备案接入商变更（我敢说这个说法没有服务商正式提出来，但它是本质）。新备案，走流程没问题。按照要求去做就可以。已有备案介入，虽然有备案密码，可是还要再走一边备案流程，让人很费解了。而且，盛大云华北节点不专业的地方体现在，它使用的是新比林通信技术这家公司，电话查询下，它和比林通信已经没有关系，细节无人知晓。询问盛大总部，说北京没有公司，只有机房。那么，盛大云华北节点，只是和网络提供商有租用协议，而这个备案，是由网络提供商负责，这个，当然没人愿意去管了。作为网络服务商的盛大网络，连这点重要的事情都做不好，真让人心里没底。

做事，要让人心服，靠的是专业程度。盛大云只顾研发，不做市场和运维的态度，挺让人寒心。希望下半年能有改观。毕竟我暂时还是看好你们的。

3、作为一个技术顾问，我需要盛大云客服回答问题时，我不需要他们实时在线，我需要他们有问必答。可是盛大云偏偏反着做，让客服在线回答，而问答系统使用论坛。这很有种小儿科的感觉。建议借鉴息壤的客服系统。看看论坛，骂他们客服的还真不少。其实是盛大云给大家一个骂的平台，何不利用呢。客服回复不及时，客服不在线，节假日休息，这些已经被骂了一年有余。同情盛大云的客服，你们委屈了，是你们的主管它装x，不去体察市场，主顾闭门造车。

4、东西想买好，说明要到位。都说去淘宝，我看淘宝的说明也是技术流，不是一般人能一下子理解的。为什么？盛大+淘宝，都是做技术的人不会运维，做运维的不会心理，做心理的不会技术。一个技术问题不能给人讲明白，是我理解的问题，也是你讲述的问题。当然，经过漫长的琢磨，实验，我懂了。半年后，你还是那个死样子。真让人摇头。盛大云，每天三省吾身，别等到被人踢PP才去动脑子。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>758</wp:post_id>
		<wp:post_date>2012-08-05 11:20:45</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grandcloud-win-or-lose</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<category domain="post_tag" nicename="%e7%9b%9b%e5%a4%a7%e4%ba%91"><![CDATA[盛大云]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby和OpenERP</title>
		<link>http://railser.cn/?p=800</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=800</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

从去年9月份开始，在新公司做openerp的开发，今年6月份，又转回到Rails的开发中。在接触openerp的大半年中，体会最深的是如何利用ooor来操作openerp，和openerp的module开发。下面把ooor的部分经验分享下，作为过去工作的一个小总结。

这篇文章的价值，对熟悉openerp的人，可以了解一下ruby和ooor。对ruby和Rails熟悉的人，可以了解下openerp。限于水平有限，有可提高的部分请各位指出。

1、什么是openerp

openerp是一套开源的ERP系统。它采用python编写，支持module开发，可以通过xml-rpc调用来实现数据的操作。目前是7.0版本，对之前我用的6.1版本做了很大的提升，不过，我下面介绍的都是基于6.1版本的。

openerp的重要功能，包括进销存，财务报表等。它安装后的自带功能并不多，可以通过module的开发来不断丰富，它基础上，做定制的二次开发。

OpenERP官网：www.openerp.com

在一些场景中，会有外部的程序和openerp协同工作，比如常见的数据导入导出（如淘宝，网店等），sales order，products同步等等。

此时，在ruby的范围内，会有一个选择，就是ooor。

&nbsp;

2、什么是ooor

ooor是用ruby实现的rpc客户端，它用ActiveResource和ActiveRecord进行了包装，几个简单的命令就可以实现对openerp的操作，并且可以很方便的集成到Rails项目中。

ooor对openerp的定义是ActiveRecord风格的，比如 orders = SaleOrder.all。条件查询时，partners = ResPartner.find(:all, :domain=&gt;[['supplier', '=', 1],['active','=',1]])

我们可以在openerp的界面中，扩展它的属性，然后通过ooor的条件查询得到结果。

ooor的github地址：https://github.com/akretion/ooor

&nbsp;

在这里，简单介绍下ruby和Rails。

ruby是类似python的脚本语言，Rails是类似Django的web框架，他们的共同点很多，熟悉python的人会很快熟悉ruby。用Rails建一个网站，是几秒钟的事情，不过，它里面涉及的东西很多，主要包括ruby的环境，gem安装，数据库连接，MVC，routes。

如果想体验下rails，通常会下载一键安装的版本，但是我从未装过那个版本。也有朋友咨询过一键安装过程中的问题，这为题都集中在windows中。我未在windows里长期的用rails，所以，我只写一下我在mac和centos，ubuntu中的调试方法。

ruby环境，我都是用的rvm，官网：http://rvm.io/。

有了rvm管理下得ruby，以通过gem安装Rails。Rails最好的文档： http://guides.rubyonrails.org

数据库，我一般选择sqlite，在production环境里才选择mysql和postgres。

Rails中的各种gem是通过Gemfile来管理的，可以通过 bundle install 安装缺少的gem。

说到gem，ooor就是个gem，所以，熟悉了Rais后，可以在Rails中去调用ooor，比如，做一个简单的scaffold order，并且把Rails中的order，写入到openerp中。

&nbsp;

3、ooor如何操作openerp

在实际的工作中，我用ooor做两个工作，初始化company信息和sales order的操作。

安装openerp的时候，对company的初始化是完全可以为单个公司使用的，但是，当增加众多下属公司，为公司增加过去五年的AccountPeriod等海量的信息，为每个公司导入不用的account chart 的时候，ooor无疑是最方便的选择。

以上情形，我的思路是，用ruby将数据处理成csv格式，然后导入到openerp里。因为客户操作csv还是方便的，比如客户直接填好account chart的数据，又或者products的信息（上百个），再通过ooor导入到系统里。

后来，学会一点module的开发，可以用ruby来生成module加载用的xml。
<pre>
require 'ooor'
Ooor.new(:url =&gt; 'http://localhost:8069/xmlrpc', :database =&gt; 'mybase', :username =&gt; 'admin', :password =&gt; 'admin')</pre>
&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>800</wp:post_id>
		<wp:post_date>2013-07-08 16:31:52</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-and-openerp</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="ooor"><![CDATA[ooor]]></category>
		<category domain="category" nicename="openerp"><![CDATA[openerp]]></category>
		<category domain="post_tag" nicename="openerp"><![CDATA[openerp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>重构I：当测试遭遇“神”逻辑</title>
		<link>http://railser.cn/?p=807</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=807</guid>
		<description></description>
		<content:encoded><![CDATA[来自“里克的自习室”原创，转载请注明出处。

（1）

生活中，人不能被钱奴役

工作中，人不能被需求奴役。

遗憾的是，很多项目都是被需求牵引着，完成了一个又一个迭代开发。这种项目，无疑，是需求的产物。

（2）

当团队扁平化的时候，尤其是分散型的团队，在一起soho工作的时候，每个人的效率就决定了团队的效率。如何提高我们的效率？这是个大问题。可是我们的问题是什么？是我们太懒么？是我们技术不够么？是我们沟通的不畅么？

都不是，是我们的代码太烂了。

（3）

一大段可读性很强的代码放在我们面前的时候，我想每个代码开发人员都会享受这种阅读感。

可现实往往和我们的追求有很大的反差。

我们的进度被一大段一大段劣质的代码拖慢了，每当我们点着台灯安静的想要fix something的时候，却发现摆在我们面前的代码，需要的不是珍惜，而且唾弃。

（4）

那么，我们该如何改变呢？程序员，你们就是为了改变世界而存在的，不是么？

好吧，让我们开始重构它吧。

（3）

高中时候，老师经常告诉我们，具体问题，具体分析。

那就来一段具体问题吧。

问题：这是一个类，它为admin和普通用户提供products list。可是它内部构建了太多的条件查询。我们该如何重构它呢。

思路：

1、分离我们的调用场景。admin和front-user是这个类的调用者（current_user），admin经过分析发现，它的管理权限和后台的permission相关的，而管理功能和这个类中强调的条件查询功能并不一致，那么，我们为admin单独的去设计一个类（其实也不用设计类，经典的Rails find 即可）

2、对于front-user，我们有两种角色：A和B。通过代码分析，A和B，在当前这个类服务的业务上，并无不同，而条件的查询，完全取决于user的等级和country_id。那么，我们将角色的if判断也从这个类中移除，作为传入参数处理。这样。这个类只是根据传入的user，来判断显示的products list了。

3、根据多表查询，优化sql，争取做到sql语句最少完成，避免之前的50个product查询，要 query 50次的可怕景象。（这是真实存在的，当我看到它的时候，我的心情和你一样）

当然，我们的业务更复杂些。吧啦吧啦吧啦。。。

（4）

好了，思路已经完成了，当你把构建的思路讲给boss的时候，发现大家关注的是：我们如何考核你的这种重构？

如果有一个量化的东西，可以衡量我们的重构，明天该会多么美好？

（5）

我们需要一个怎样的东西？

我们的重构时候的scenario数量假定为50，每一个scenario有所属的test case若干，假设我们能统计这个test case的完成度，是不是就可以说，我们的重构很完美呢？

（6）

当重构达到100%之后，我们又有了新的需求，我们该如何面对呢？我们如果已经发布了新的版本，又该如何跟进呢？

（7）

好了，我们面对的问题已经够多了。我们要解决它。

现在，我们需要一个工具，统计我们的重构指标是否完成。

（8）

我们来分工：

逻辑组，将我们的主要逻辑（Logic），次要逻辑罗列出来。

复核组，对全部由Logic产生的情景（scenario）不断的复查。

测试组，对scenario的要求细化为测试用例（Test case），并标注其中的issue。

（9）

测试用例反映了要核实的需求。

&nbsp;

好了，我们完美的解决了我们的目标，开始动手coding吧。但是，一定有人看到这段代码之后，胸口发闷，嘴唇发咸，一口鲜血用上喉头。

到底发生了什么？

让我们下回再说。

&nbsp;

感悟：

小团队开发中，效率决定生命。不断的修改，挤压的是产品生存时间。

写在后面

写这段文字的时候，正是李娜美网第三轮，第二盘，0比3落后的时候。获胜不能靠对手的失误和送分。年龄越大，越理解自己，

现在，李娜很强悍的拿下第二盘，7：5。一个ace拿下。

当我们遇到困难的时候，我们只有倾听自己内心的声音，坚持内心的信念。

里克，2013年9月。

版权所有：里克的自习室

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>807</wp:post_id>
		<wp:post_date>2013-09-02 23:29:01</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>refactoring-part-i-testing-and-nested-mess-logic</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="%e6%b5%8b%e8%af%95"><![CDATA[测试]]></category>
		<category domain="post_tag" nicename="%e9%87%8d%e6%9e%84"><![CDATA[重构]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>重构II：那些年我们写过的代码</title>
		<link>http://railser.cn/?p=820</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=820</guid>
		<description></description>
		<content:encoded><![CDATA[书接上文。

（1）

测试用例设计好了，为什么还会倒地不起？

请看

if params[:sponsor_id].to_i.to_s != params[:sponsor_id]

我们的代码，几乎无法下手。

当我们要测试一个method的时候，我们满心欢喜的要完成一个1%的语句覆盖的时候，缺发现它里面还有“后招”。

简单的case..when..之后，竟然又加了个if，可怕的是，if里还有if。

（2）

燃烧吧，小宇宙。

否则我们即将死去。

（3）

怎么办？

垃圾堆还是圣诞树？

我们的项目代码，如果是一个垃圾堆，你还会在乎扔进去的东西有点臭么？

如果我们的代码是一棵圣诞树。

（4）

在这个代码的外围，我们先建立测试。原则：不管怎么改，它的结果是对的。

我们准备将这段代码拆分到2个方法里，并且为调用的对象提供一个

&nbsp;

（5）

性能炸弹！

（6）

我的地盘，抛我的异常。自定义异常。

（7）

男默女泪的一次遭遇。

减少if，减少OR，不要用unless除非它只有一个条件，不要在model中each。

说实话我真的想放弃了，想去书店呆上一天，去咖啡馆看一天的美剧，去电影院，商场逛上一天。因为，这代码就像是一块大石压在胸口，我不想面对它了。。

无尽的if，无尽的or，无尽的each。

这输出太强大我扛不住。

不要的事情太多，我以厌倦尘世生活。。。。

如来耶稣毛主席，help me，help me。

（8）

团队，团队。

协作，沟通。永远不要问我面对面的意义，那没有意义。

&nbsp;

&nbsp;

我想，从这篇文章开始到完成，可能要经历几个月的时间，这期间我无法发布它。

我期望它发布的时候，我们有一个happy的心态面对曾经。

人只有经历过才知道。可我们总是醒之晚矣。

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>820</wp:post_id>
		<wp:post_date>2013-09-19 21:41:23</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>refactory-ii-what-i-have-coded-past-yeas</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="post_tag" nicename="%e6%b5%8b%e8%af%95"><![CDATA[测试]]></category>
		<category domain="post_tag" nicename="%e9%87%8d%e6%9e%84"><![CDATA[重构]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>测试和重构</title>
		<link>http://railser.cn/?p=823</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=823</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>823</wp:post_id>
		<wp:post_date>2013-09-03 16:20:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-and-refactoring</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Railser.cn重新开通了。</title>
		<link>http://railser.cn/blog/railsercn-return-now</link>
		<pubDate>Fri, 19 Oct 2007 05:32:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/railsercn-return-now</guid>
		<description></description>
		<content:encoded><![CDATA[<script type="text/javascript">// < ![CDATA[
google_ad_client = "pub-7545275883969710";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel = "";
// ]]]]><![CDATA[></script>
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">// < ![CDATA[

// ]]]]><![CDATA[></script>

需要用些时间将以前的文章整理一下。

本博客继续坚持以前的想法，发表一些个人翻译，编写和整理的技术文章 。希望能够和更多朋友交流技术问题。

我还在学习Rails和Ruby技术，同时承担一些开发项目。发表的文章也多来自于当前研究的题目。

像姚明说的那样：“少说话，多做事。”

&nbsp;

update 2013-9-2

很感动，这个博客快6年了。当年坚持，是因为我知道它可以让我达到一种高度，现在，我知道这是一种什么高度了。

我会继续努力的。

还有，姚明已经退役2年了，我很怀念养病的日子里，看他打球的每一天。那些日子里，才感知到什么是坚持。

来句歌词吧：超人不会飞，不要问我哭过了没，因为超人不能流眼泪。周杰伦，《超人不会飞》。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2007-10-19 13:32:28</wp:post_date>
		<wp:post_date_gmt>2007-10-19 05:32:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>railsercn-return-now</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="%e6%97%a5%e8%ae%b0"><![CDATA[日记]]></category>
		<category domain="post_tag" nicename="%e9%9a%8f%e7%ac%94"><![CDATA[随笔]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flex与Rails的性感结合</title>
		<link>http://railser.cn/blog/flex-on-rails-preview</link>
		<pubDate>Fri, 19 Oct 2007 12:22:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/flex-on-rails-preview</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>

前面写过一个简单的<a href="http://hi.baidu.com/%D0%C7203/blog/item/70e4c918dc468cb74bedbc5a.html" target="_blank">博文</a>，介绍了一下flex与rails结合的进展。今天看到另一个好消息，《Flexible Rails：Flex 3 on Rails 2》一书将要问世了。作者：Peter Armstrong。目前网上已经可以<a href="http://manning.com/armstrong/" target="_blank">买到PDF版本</a>。

<a href="http://railser.cn/wp-content/uploads/2007/10/armstrong_cover150.jpg" title="Flexible Rails"><img src="http://railser.cn/wp-content/uploads/2007/10/armstrong_cover150.jpg" alt="Flexible Rails" /></a>

只要看看这本书的目录部分，喜欢flex和rails的朋友就会感到兴奋：

1. Why are we here? Where are we going?
2. Hello World
3. Getting started
4. Creating the Main Flex UI
5. Expanding the Rails code
6. Flex on Rails
7. Validation
8. Refactoring to RESTful Rails development
9. Refactoring to Cairngorm
10. Holding State on the client properly
11. Finishing the application
12. Rails on AIR (Adobe Integrated Runtime)

Appendix A. How to use Subversion with Flex and Rails
Appendix B. Handwaving at omitted topics

<a href="http://www.flexiblerails.com/files/FlexibleRailsPreview.pdf" target="_blank">下载本书试读pdf</a>    <a href="http://www.flexiblerails.com/code-samples" target="_blank">下载本书源代码</a>

很想趁着人民币升值的时候买一本仔细看看，不过在花钱之前，我们还是可以看看其他网站的一些关于flex和rails的介绍。
<h3>WebORB for Ruby on Rails</h3>
<a href="http://railser.cn/wp-content/uploads/2007/10/blue_rails.jpg" title="weborb"><img src="http://railser.cn/wp-content/uploads/2007/10/blue_rails.jpg" alt="weborb" /></a>

WebORB是连接远程flash/flex客户端和Ruby on Rails应用的服务器端技术。WebORB可以以插件形式安装在任何Rails应用中，以提供Ruby类进行远程服务。WebORB提供完整的adobe AMF0和AMF3通信协议支持远程flash和flex客户端。

Rails安装WebORB插件，flex客户端如同请求Data Services server一样访问该插件（当前版本仅支持RPC子系统），远程flash应用连接WebORB和连接flash远程入口方法也是一样的。该插件接收和处理来自flex或者flash客户端的远程请求，然后调用部署在rails应用中的ruby类。

<a href="http://railser.cn/wp-content/uploads/2007/10/585f43f466aa85e47709d774jpg.gif"><img src="http://railser.cn/wp-content/uploads/2007/10/585f43f466aa85e47709d774jpg.gif" /></a>

下一篇博文会对教程进行笔记。
<h3>不过有一个疑惑，什么是AMF3？</h3>
Flash 5开始就可以以XML或者“变量/值”配对输出格式向服务器传送数据。虽然这些数据能通过Flash编译器自动解析或者通过开发人员自行编写的代码手动解析, 但解析的速度慢。因为在解析过程中，XML需要按节点逐层处理数据。而且使用XML和“变量/值”配对格式处理的数据类型只能是字符型，数字也不例外。而 Flash Remoting却能处理复杂数据类型, 比如对象、结构、数组，甚至可以是数据集，配合DataGrid组件可以很方便地显示数据。

为了处理复杂数据类型，采用一种独有的方式使Flash与应用服务器间可以来回传送数据势在必行。于是AMF应运而生。AMF是Adobe独家开发出来的通信协议，它采用二进制压缩，序列化、反序列化、传输数据，从而为Flash 播放器与Flash Remoting网关通信提供了一种轻量级的、高效能的通信方式。如下图所示。
<a href="http://railser.cn/wp-content/uploads/2007/10/0941010.gif" title="amf"><img src="http://railser.cn/wp-content/uploads/2007/10/0941010.gif" alt="amf" /></a>
AMF最大的特色在于可直接将Flash内置对象，例如Object, Array, Date, XML，传回服务器端，并且在服务器端自动进行解析成适当的对象，这就减轻了开发人员繁复工作，同时也更省了开发时间。由于AMF采用二进制编码，这种方式可以高度压缩数据，因此非常适合用来传递大量的资料。数据量越大，Flash Remoting的传输效能就越高，远远超过Web Service。至于XML, LoadVars和loadVariables() ，它们使用纯文本的传输方式，效能就更不能与Flash Remoting相提并论了。

注意：Flash Remoting需要浏览器支持Binary POST，Flash 播放器在Netscape 6.x.环境下运行Flash Remoting会不起作用（Flash Remoting调用没有效果也不返回错误）， Netscape 7已经纠正了这个bug 。对于早期Safari和Chimera版的苹果机也有这个问题。

同样是轻量级数据交换协议，同样是通过调用远程服务，同样是基于标准的HTTP和HTTPS协议， Flash Remoting为什么选择了使用AMF而放弃了SOAP与Flash 播放器通信呢? 有如下原因：

1. SOAP将数据处理成XML格式，相对于二进制的AFM太冗长了；
2. AMF能更有效序列化数据；因为AMF的初衷只是为了支持Flash ActionScript的数据类型，而SOAP却致力于提供更广泛的用途；
3. AMF支持Flash 播放器 6只需要浏览器增加4 KB左右（压缩后）的大小，而SOAP就大多了；
4. SOAP 的一些头部文件请求在Flash 播放器 6不支持。那Flash 播放器 6为什么能访问基于SOAP的Web服务呢？原来Flash Remoting网关将SOAP请求在服务器端与转换成AFM格式，然后利用AFM与Flash 播放器通信。另外，AMF包中包含onResult事件（比如说response事件）和onStatus事件（比如说error事件），这些事件对象在 Flash中可以直接使用。

AMF从Flash MX时代的AMF0发展到现在的AMF3。AMF3用作Flash Playe 9的ActionScript 3.0的默认序列化格式，而AMF0则用作旧版的ActionScript 1.0和2.0的序列化格式。在网络传输数据方面，AMF3比AMF0更有效率。AMF3能将int和uint对象作为整数（integer）传输，并且能序列化 ActionScript 3.0才支持的数据类型, 比如ByteArray，XML和Iexternalizable。[里克：摘自网上，作者不详]
<h3>Ruby AMF</h3>
参考网站最后是网站地址
RubyAMF是开源的flash远程应用网关/方法(英文:gateway)。其RubyamfLite是独立的应用服务，可不依赖rails。RubyamfRails为rails插件，可以对rails controller的flash远程调用进行REST形式的AMF response。

---------------------------------------------------Railser.cn，07年10月20日编辑
参考网站：

<a href="http://www.flexiblerails.com/" target="_blank">Flexible Rails</a>

<a href="http://flexonrails.net/" target="_blank">flexonrails.net</a>

<a href="http://www.themidnightcoders.com/weborb/rubyonrails/index.htm" target="_blank">WebORB for Ruby on Rails </a>

<a href="http://osflash.org/documentation/amf3" target="_blank">AMF3 Specification</a>

<a href="http://www.rubyamf.org/" target="_blank">Ruby AMF</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2007-10-19 20:22:01</wp:post_date>
		<wp:post_date_gmt>2007-10-19 12:22:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flex-on-rails-preview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="amf"><![CDATA[amf]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[flex]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="weborb"><![CDATA[weborb]]></category>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Nshen]]></wp:comment_author>
			<wp:comment_author_email>nshen121@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nshen.net</wp:comment_author_url>
			<wp:comment_author_IP>60.16.155.85</wp:comment_author_IP>
			<wp:comment_date>2008-01-15 22:35:42</wp:comment_date>
			<wp:comment_date_gmt>2008-01-15 14:35:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以从这里下载这本书，不用买了：）
http://www.riabook.cn/en_book/flexible_rails_flex3_on_rails2.htm]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>用Rails校验使你的密码更“坚固”</title>
		<link>http://railser.cn/blog/rails-validation-make-sure-your-user-passwords-are-strong</link>
		<pubDate>Mon, 22 Oct 2007 07:18:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/rails-validation-make-sure-your-user-passwords-are-strong</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel = "";
//--> </script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript"> </script></pre>
原文：<a href="http://blog.vixiom.com/2006/08/12/rails-validation-make-sure-your-user-passwords-are-strong/" target="_blank">Rails validation make sure your user passwords are strong</a>

里克：很短小的一篇文章， 不过对于正则表达式有点晕的我，还是很有用的，所以留着这里做一个笔记吧。

文章里使用了正则进行密码校验:
<blockquote>
<pre lang="ruby">
def password_valid?
  self.password =~ /^(?=.*d)(?=.*[a-z])(?=.*[A-Z])(?!.*s).{8,15}$/
end</pre>
</blockquote>
校验内容：
<ol>
	<li>8-15位长度</li>
	<li>至少含有一个大写字母</li>
	<li>至少含有一个小写字母</li>
	<li>至少含有一个数字</li>
	<li>it also checks that there's no <strong>funky</strong>characters '(?!.*\s)'</li>
</ol>
越狱第三季不会真的播不到最终结局吧？我发现里面的演员真的演技一流啊。贴第一季的视频列表，没事喜欢就看看。
<pre>
<object height="423" width="488">
<param name="movie" alue="http://www.tudou.com/player/playlist.swf?lid=1677308"></param>
<param name="allowscriptaccess" value="always"></param><embed src="http://www.tudou.com/player/playlist.swf?lid=1677308" type="application/x-shockwave-flash" height="423" width="488"></embed></object></pre>
广告时间，目前是2.65美元，等到50美元就可以给<a href="http://blog.sina.com.cn/lyon07">李猪猪</a>买玩具啦！！
<pre>
<script type="text/javascript"> <!--
google_ad_client = "pub-7545275883969710";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_cpa_choice = "CAEQ5uL_xwMaCBmlrR19qOK7KMbF9coB";
//--> </script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript"> </script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2007-10-22 15:18:08</wp:post_date>
		<wp:post_date_gmt>2007-10-22 07:18:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rails-validation-make-sure-your-user-passwords-are-strong</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="validate"><![CDATA[validate]]></category>
	</item>
	<item>
		<title>在Rails中使用Flash Remoting中文教程</title>
		<link>http://railser.cn/blog/flash-remoting-for-rails-tutorial-chinese</link>
		<pubDate>Mon, 22 Oct 2007 11:20:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/flash-remoting-for-rails-tutorial-chinese</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript">
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></pre>
原文：<a href="http://blog.vixiom.com/2006/08/23/flash-remoting-for-rails-tutorial/" target="_blank">Flash Remoting for Rails Tutorial</a>

里克：1、Flash Remoting从flash player6就开始了，Flex Client是个新家伙。2、Flash Remoting如何翻译？我想翻译为flash远程。

在我们使用Rails的时候，可能会忽视掉另一个开发工具：Flash Remoting。长期的使用xml，可能会改变你的编程习惯。就像作者引用的那句话："If all you have is a hammer everything looks like a nail"。Remoting可以直接向flash传递对象，数组。Remoting使用AMF(Active Message Format)传递byte流，这比使用xml要快很多。

而且在06年8月，<a href="http://www.themidnightcoders.com/">Midnight Coders</a>发布了他们的WebORB插件。

他们的例子是基于Flex2的，这需要客户端安装Flash player9.0，这并不有好，因为Remoting在Flash player6中就已经开始使用了。所以这里我们只拿我们需要的。

如果你之前没有使用过Flash Remoting，请先安装<a href="http://www.adobe.com/products/flashremoting/downloads/components/">Remoting Components</a>。

这里我们制作一个flash的mp3播放器，用rails作为后端服务。<a href="http://blog.vixiom.com/uploads/mp3app.zip">点击这里</a>，你可以下载这个例子的代码。

创建一个应用：mp3app
<blockquote>
<pre lang="ruby">
&gt; rails mp3app
&gt; cd mp3app</pre>
</blockquote>
安装weborb插件
<blockquote>
<pre lang="ruby">
&gt; ruby script/plugin install http://themidnightcoders.net:8089/svn/weborb</pre>
</blockquote>
创建一个名为‘mp3app_development’的数据库
<blockquote>
<pre lang="ruby">
CREATE TABLE `tracks` (
  `id` int(11) NOT NULL auto_increment,
  `title` varchar(50) NOT NULL default '',
  `artist` varchar(50) NOT NULL default '',
  `album_art` varchar(50) NOT NULL default '',
  `filename` varchar(50) NOT NULL default '',
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;

insert into `tracks` values
('1','After Midnight','Eric Clapton','clapton.jpg','AfterMidnight.mp3'),
 ('2','Midnight Train to Georgia','Gladys Knight','gladys.jpg',
'MidnightTrainToGeorgia.mp3'),
 ('3','Midnight In A Perfect World','DJ Shadow','shadow.jpg',
'MidnightInAPerfectWorld.mp3'),
 ('4','Two Minutes to Midnight','Iron Maiden','maiden.jpg',
'TwoMinutesToMidnight.mp3');</pre>
</blockquote>
创建‘Track’model
<blockquote>
<pre lang="ruby">
&gt; ruby script/generate model Track</pre>
</blockquote>
在‘app/services’目录下创建一个Remoting services服务，文件为：'TrackService.rb'
<blockquote>
<pre lang="ruby">
require 'weborb/context'
require 'rbconfig'

class TrackService
   def getTracks
     tracks = Track.find(:all)
   end
end</pre>
</blockquote>
如果你曾经用过<a href="http://amfphp.org/">AMFPHP</a>或者.net下的Remoting，上面的这个服务端可以说是“相当”简单了。但是你可以运行测试一下。

下面进入到我们的Flash。
对于Flash应用，有几个<strong>框架</strong>可供选择，比如<a href="http://ariaware.com/products/arp/">ARP</a>和 <a href="http://www.iterationtwo.com/open_source_cairngorm.html">Cairngorn</a>。但是在我们这个应用上，他们显得太过强大了。我们可以写一个自己的轻量级的框架。这是一种MVC框架，Model是一个Remoting Class，用来和后台程序沟通(PHP, .NET, 或者 我们的 Rails) ，一个.fla的controller，和一个View class。
M 和 V 在 C 的控制下进行事件相应与处理，而其他的类来扩展其他的功能。

基本的Remoting是这样：
<blockquote>
<pre lang="actionscript">
import mx.remoting.Service;
import mx.services.Log;
import mx.remoting.PendingCall;;
import mx.rpc.RelayResponder;
import mx.rpc.FaultEvent;
import mx.rpc.ResultEvent;
import mx.remoting.debug.NetDebug;
import mx.utils.Delegate;

class com.vixiom.remoting.Remoting
{
    private var gatewayURL:String;
    private var servicePath:String;

    private var svc:Service;

    function dispatchEvent() {};
    function addEventListener() {};
    function removeEventListener() {};

    /**
    * Constructor
    *
    *   @param      gURL    gatewayURL
    *   @param      sp      service path
    *   @param      u       username
    *   @param      p       password
    *
    */
    public function Remoting(gURL, sp, u, p)
    {
        gatewayURL = gURL;
        servicePath = sp;

        // initialize as a broadcaster
        mx.events.EventDispatcher.initialize(this);

        // create a new service
        svc = new Service (gatewayURL, null, servicePath, null, null);

        // credentials
        if (u != undefined &amp;&amp; p != undefined) {
            svc.connection.setCredentials(u, p);
        }

    }

    /**
    * Global fault event
    */
    function handleRemotingError(fault:FaultEvent):Void
    {
        mx.remoting.debug.NetDebug.trace({level:"None",
        message:"Error: " +
        fault.fault.faultstring });
    }

    /**
    * Event dispatcher
    *
    *   @param      d       data
    *   @param      et      eventType
    *
    */
    function dispatch(d, et)
    {
        // broadcast message
        var eventObj:Object={target:this,type:et}
        eventObj.data = d;
        dispatchEvent(eventObj);
    }

}</pre>
</blockquote>
基本的View Class是这样：
<blockquote>
<pre lang="actionscript">
import mx.utils.Delegate;

class com.vixiom.view.View
{
    private var target:MovieClip;

    function dispatchEvent() {};
    function addEventListener() {};
    function removeEventListener() {};

    /**
    * Constructor
    *
    *   @param  t   target (target timeline: _root || a mc)
    */
    public function View (t:MovieClip)
    {
        target = t;

        // initialize as a broadcaster
        mx.events.EventDispatcher.initialize(this);
    }

    /**
    * Event dispatcher
    *
    *   @param      d       data
    *   @param      et      eventType
    *
    */
    function dispatch(d, et)
    {
        // broadcast message
        var eventObj:Object={target:this,type:et}
        eventObj.data = d;
        dispatchEvent(eventObj);
    }
}</pre>
</blockquote>
里克：看到这个时候，我看了一下源代码。as文件的存放是按照类似java的形式。所以下面的话就好理解了。我对as的知识为0.

在这个MP3 player中，我用下面的方法扩充一下Remoting class。你可以不必把你的类放到这个packages里面，当然那样做更利于管理。
<pre lang="actionscript">'var pc:PendingCall = this.svc.getTracks();'</pre>
一句是再远程调用Rails，这和TrackService.rb 类里面的'getTracks'是一样的。我的类中有一个tracks对象，它直接接收ruby的'tracks = re.result;'。我注释了'this.svc.connection.setCredentials(u, p);'一行，因为它在创建一个安全的远程调用。最后一行'dispatch(tracks, "onGetTracks");' 将数据传递给view。
<blockquote>
<pre lang="actionscript">
import mx.remoting.*;
import mx.rpc.*;

class com.vixiom.remoting.RemotingMp3
extends com.vixiom.remoting.Remoting
{
    // tracks holder object
    private var tracks:Object;

    ////////////////////////////////////////////////////////////////
    //
    // Constructor (gatewayURL, servicePath, userid, password)
    //
    ////////////////////////////////////////////////////////////////

    public function RemotingMp3 (gURL, sp, u, p)
    {
        super(gURL, sp);
        // this.svc.connection.setCredentials(u, p);
    }

    ////////////////////////////////////////////////////////////////
    //
    // Get tracks with handler (onGetTracks)
    //
    ////////////////////////////////////////////////////////////////

    public function getTracks()
    {
        trace("// getting tracks")
        // create a pending call out to rails
        var pc:PendingCall = this.svc.getTracks();
        // create a responder to handle the return from rails
        pc.responder = new RelayResponder(this,
        "onGetTracks",
        "handleRemotingError");
    }

    public function onGetTracks (re:ResultEvent)
    {
        if (re != undefined)
        {
            trace("// onGetTracks broadcaster - Word!")
            // put result in recordset
            tracks = re.result;
            // trace for testing
            for (var i = 0; i &lt; tracks.length; i++) {
                trace(tracks[i].title);
            }
            // dispatch event to the view
            dispatch(tracks, "onGetTracks");
        }
    }
}</pre>
</blockquote>
下面是controller的代码，需要注意的是，‘Rmp3’是我扩展的Remoting class的实例。它有两个参数，一个是WebORB geteway url，一个是在app/services中的'TrackService'类。我还没有展示扩展的view class，controller里已经产生了一个‘Vmp3’实例，<u>with the _root of the Flash file as it's parameter (it uses that as a target). </u>。下面四行是view中的按钮方法，最后一行调用远程方法，这是这个app的entry point<u>(as it's pretty useless sans data)</u>。
<blockquote>
<pre lang="actionscript">
// import remoting, view, and debug
import mx.remoting.debug.NetDebug;
import mx.utils.Delegate;
import com.vixiom.remoting.RemotingMp3;
import com.vixiom.view.ViewMp3;

// ini debug
NetDebug.initialize ();

iniApp();

// setup and start
function iniApp()
{
    // create remoting &amp; view objects
    var Rmp3:RemotingMp3    = new RemotingMp3 (
    "http://localhost:3000/weborb",
    "TrackService"); // weborb gateway, ruby class name
    var Vmp3:ViewMp3        = new ViewMp3 (_root);

    // set up listeners
    Rmp3.addEventListener ("onGetTracks",
    Delegate.create (Vmp3, Vmp3.onGetTracks));

    pause_btn.onRelease = Delegate.create(Vmp3, Vmp3.pauseTrack);
    play_btn.onRelease  = Delegate.create(Vmp3, Vmp3.playTrack);
    prev_btn.onRelease  = Delegate.create(Vmp3, Vmp3.previousTrack);
    next_btn.onRelease  = Delegate.create(Vmp3, Vmp3.nextTrack);

    // start the app, get the tracks
    Rmp3.getTracks();
}</pre>
</blockquote>
下面是扩展的view，相当复杂，而且和rails及Remoting没什么关系，所以看一下它的注释，就能明白它的意思了。里克：我就不贴了，看类名就知道它在哪了。
<blockquote>
<pre lang="actionscript">
class com.vixiom.view.ViewMp3 extends com.vixiom.view.View</pre>
</blockquote>
就是这样了，不过要注意一下<a href="http://www.adobe.com/cfusion/knowledgebase/index.cfm?id=tn_14213">跨域安全问题</a>，尤其是当你的rails应用在一台服务器上，而Flash文件在另一台服务器上的时候。

里克，07年10月23日，Railser.cn]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2007-10-22 19:20:04</wp:post_date>
		<wp:post_date_gmt>2007-10-22 11:20:04</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flash-remoting-for-rails-tutorial-chinese</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="remoting"><![CDATA[remoting]]></category>
	</item>
	<item>
		<title>这部片子，你还记得吗？</title>
		<link>http://railser.cn/blog/patlabor</link>
		<pubDate>Mon, 29 Oct 2007 05:23:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[看这部片子的时候，应该在16到17岁吧。那时候对电视上的动画片已经很有自己的想法了。不过这部片子确在脑袋里记住了十多年。为什么呢？其实我只 是记住了里面的很少的东西，记得主角叫“泉 野明”，甚至很费劲的才想起来，这部片子中文叫《机动警察》。看了2集，还是很喜欢里面的人物设计的。很好玩，很真实。

一萌博客上说过我们这一代人是“卡通一代” 。很对哦。虽然是78年来到地球的，只不过比那些80后的小p孩早看了几年动画片而已嘛。

我快29了，我在等我儿子能看动画片的时候，跟他再看一遍以前喜欢的那些片子。

<a title="机动警察" href="../wp-content/uploads/2007/10/patlabor_tvavi_000045587.jpg"><img src="../wp-content/uploads/2007/10/patlabor_tvavi_000045587.jpg" alt="机动警察" /></a>

<a title="机动警察" href="../wp-content/uploads/2007/10/patlabor_tvavi_000051384.jpg"><img src="../wp-content/uploads/2007/10/patlabor_tvavi_000051384.jpg" alt="机动警察" /></a>

<a title="机动警察" href="../wp-content/uploads/2007/10/patlabor_tvavi_000057599.jpg"><img src="../wp-content/uploads/2007/10/patlabor_tvavi_000057599.jpg" alt="机动警察" /></a>

<a title="patlabor_tvavi_000102352.jpg" href="../wp-content/uploads/2007/10/patlabor_tvavi_000102352.jpg">
</a>

<a title="patlabor_tvavi_000068818.jpg" href="../wp-content/uploads/2007/10/patlabor_tvavi_000068818.jpg"><img src="../wp-content/uploads/2007/10/patlabor_tvavi_000068818.jpg" alt="patlabor_tvavi_000068818.jpg" /></a>

<a title="patlabor_tvavi_000090423.jpg" href="../wp-content/uploads/2007/10/patlabor_tvavi_000090423.jpg">
</a>

<a title="patlabor_tvavi_000102352.jpg" href="../wp-content/uploads/2007/10/patlabor_tvavi_000102352.jpg"><img src="../wp-content/uploads/2007/10/patlabor_tvavi_000102352.jpg" alt="patlabor_tvavi_000102352.jpg" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2007-10-29 05:23:37</wp:post_date>
		<wp:post_date_gmt>2007-10-29 05:23:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>patlabor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>这部片子，你还记得吗？</title>
		<link>http://railser.cn/blog/patlabor-on-tv</link>
		<pubDate>Mon, 29 Oct 2007 15:26:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/patlabor-on-tv</guid>
		<description></description>
		<content:encoded><![CDATA[看这部片子的时候，应该在16到17岁吧。那时候对电视上的动画片已经很有自己的想法了。不过这部片子确在脑袋里记住了十多年。为什么呢？其实我只是记住了里面的很少的东西，记得主角叫“泉 野明”，甚至很费劲的才想起来，这部片子中文叫《机动警察》。看了2集，还是很喜欢里面的人物设计的。很好玩，很真实。

一萌博客上说过我们这一代人是“卡通一代” 。很对哦。虽然是78年来到地球的，只不过比那些80后的小p孩早看了几年动画片而已嘛。

我快29了，我在等我儿子能看动画片的时候，跟他再看一遍以前喜欢的那些片子。

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000114698.jpg" title="机动警察"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000114698.jpg" alt="机动警察" /></a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000045587.jpg" title="机动警察"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000045587.jpg" alt="机动警察" /></a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000051384.jpg" title="机动警察"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000051384.jpg" alt="机动警察" /></a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000057599.jpg" title="机动警察"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000057599.jpg" alt="机动警察" /></a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000102352.jpg" title="patlabor_tvavi_000102352.jpg">
</a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000062604.jpg" title="patlabor_tvavi_000062604.jpg"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000062604.jpg" alt="patlabor_tvavi_000062604.jpg" /></a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000068818.jpg" title="patlabor_tvavi_000068818.jpg"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000068818.jpg" alt="patlabor_tvavi_000068818.jpg" /></a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000090423.jpg" title="patlabor_tvavi_000090423.jpg"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000090423.jpg" alt="patlabor_tvavi_000090423.jpg" /></a>

<a href="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000102352.jpg" title="patlabor_tvavi_000102352.jpg"><img src="http://railser.cn/wp-content/uploads/2007/10/patlabor_tvavi_000102352.jpg" alt="patlabor_tvavi_000102352.jpg" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2007-10-29 23:26:36</wp:post_date>
		<wp:post_date_gmt>2007-10-29 15:26:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>patlabor-on-tv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
	</item>
	<item>
		<title>惊艳：adobe&#8217;s thermo视频演示</title>
		<link>http://railser.cn/blog/adobe-thermo-cool-video-show</link>
		<pubDate>Wed, 31 Oct 2007 10:27:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/adobe-thermo-cool</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
第一部分：
<object height="355" width="425">
<param name="movie" value="http://www.youtube.com/v/lGdr3dCmxe4&amp;rel=1"></param>
<param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/lGdr3dCmxe4&amp;rel=1" type="application/x-shockwave-flash" wmode="transparent" height="355" width="425"></embed></object>
第二部分：
<object height="355" width="425">
<param name="movie" value="http://www.youtube.com/v/d9IjZJ0D_bo&amp;rel=1"></param>
<param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/d9IjZJ0D_bo&amp;rel=1" type="application/x-shockwave-flash" wmode="transparent" height="355" width="425"></embed></object>
第三部分：
<object height="355" width="425">
<param name="movie" value="http://www.youtube.com/v/lsfOe_MCEbg&amp;rel=1"></param>
<param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/lsfOe_MCEbg&amp;rel=1" type="application/x-shockwave-flash" wmode="transparent" height="355" width="425"></embed></object>
</pre>

Thermo:创建RIA的工具，可以让你的工艺图(artwork )通过点击鼠标转换成可工作组件(working components)。看完整个介绍，只能说：太帅了。

<a href="http://railser.cn/wp-content/uploads/2007/10/thermomain.png" title="thermo"><img src="http://railser.cn/wp-content/uploads/2007/10/thermomain.png" alt="thermo" /></a>
上图是时间轴的设计，和flash中做按钮效果很像。用于展示每一张图片。

<a href="http://railser.cn/wp-content/uploads/2007/10/thermoa.png" title="thermoa.png"><img src="http://railser.cn/wp-content/uploads/2007/10/thermoa.png" alt="thermoa.png" /></a>
上图的出现，立刻赢得了一片掌声。鼠标右键的转换，将原来设计的标签，转成了一个文本输入框。帅！

<a href="http://railser.cn/wp-content/uploads/2007/10/thermob.png" title="thermob.png"><img src="http://railser.cn/wp-content/uploads/2007/10/thermob.png" alt="thermob.png" /></a>
上图，设计单个展示元素的文字说明

<a href="http://railser.cn/wp-content/uploads/2007/10/thermoc.png" title="thermoc.png"><img src="http://railser.cn/wp-content/uploads/2007/10/thermoc.png" alt="thermoc.png" /></a>
又是一片掌声，给一个滚动条指定展示内容！

<a href="http://railser.cn/wp-content/uploads/2007/10/thermod.png" title="thermod.png"><img src="http://railser.cn/wp-content/uploads/2007/10/thermod.png" alt="thermod.png" /></a>
像photoshop一样设计界面。

里克：本文写给一个女人。

相关网站：<a href="http://aralbalkan.com/1050">http://aralbalkan.com/1050</a>
<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
google_ad_width = 336;
google_ad_height = 280;
google_ad_format = "336x280_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2007-10-31 18:27:12</wp:post_date>
		<wp:post_date_gmt>2007-10-31 10:27:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>adobe-thermo-cool-video-show</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="adobe"><![CDATA[adobe]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="thermo"><![CDATA[thermo]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[adobe-thermo-cool]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Flex和Rails上实现发布/订阅的消息通信</title>
		<link>http://railser.cn/blog/publish-subscribe-messaging-with-flex-and-rails</link>
		<pubDate>Sat, 03 Nov 2007 08:14:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/publish-subscribe-messaging-with-flex-and-rails</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
//468x60, 创建于 07-11-6
google_ad_slot = "2869362041";
google_ad_width = 468;
google_ad_height = 60;
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</pre>
原文：<a href="http://flexonrails.net/?p=83">Publish\Subscribe Messaging with Flex and Rails using Apache ActiveMQ, ActiveMessaging, and STOMP</a>

这是一篇综合性应用很强的文章，介绍如何在<a href="http://rubyonrails.org/">Rails</a>和<a href="http://labs.adobe.com/technologies/flex/">flex</a>的基础上，使用<a href="http://activemq.apache.org/">ActiveMQ</a>，Rails上的<a href="http://code.google.com/p/activemessaging/wiki/ActiveMessaging">ActiveMessaging</a>插件，和<a href="http://stomp.codehaus.org/">STOMP</a>协议，创建一个发布/订阅的通信模式。这里使用了一个例子来讲解，flex客户端/终端(consumer)接受Rails服务端发送的消息(messages)。

里克：其实这就是用Rails和flex来实现java上的JMS。java上的东西好久没有看过了。所以在继续学习下面的东西，最好还是看看《<a href="http://blog.csdn.net/lifaming15/archive/2007/08/22/1754926.aspx">JMS简介</a>》吧。
<blockquote> JMS(Java Message Service)是访问企业消息系统的标准API,它便于消息系
统中的Java应用程序进行消息交换,并且通过提供标准的产生、发送、接收消息的接口简化企业应用的开发。</blockquote>
下面介绍一下本文要使用的各种技术：
<h3><a href="http://activemq.apache.org/">Apache ActiveMQ</a></h3>
<blockquote> Apache ActiveMQ受欢迎的，强大的通信代理[Message Broker]。
它快速，支持多种语言的客户端和协议，拥有许多高级特性，并完全支持JMS 1.1 和 J2EE 1.4。
Apache ActiveMQ 在Apache 2.0 License下发布。</blockquote>
<h3><a href="http://code.google.com/p/activemessaging/wiki/ActiveMessaging">ActiveMessaging</a></h3>
<blockquote> ActiveMessaging将Rails带入到消息驱动开发[Messaging]中。消息驱动，或叫事件驱动结构[event-driven architecture]，广泛的应用于企业级集成。这下面的框架包括java的JMS，产品包括ActiveMQ，Tibco，IBM MQSeries等。</blockquote>
<h3><a href="http://stomp.codehaus.org/">STOMP</a></h3>
<blockquote> ActiveMessaging支持Stomp协议。这是一个通过无线连接，使用TCP/IP，实现文本型消息流式传输的协议标准。其设计理念要求尽可能将协议简化，以求无论利用哪种语言开发客户端或服务端，都能相当轻松（比如Ruby Stomp客户端代码，连带注释和空行，总行数仅约400）。因此，它几乎可以集成任何系统。[摘自《Rails ActiveMessaging入门》]</blockquote>
<h3>需要</h3>
<ul>
	<li>Ruby 1.8.6</li>
	<li>Rails 1.2.3</li>
	<li>ava 1.5.0_07+</li>
	<li>MySQL(或其他支持<a href="http://api.rubyonrails.org/classes/ActiveRecord/Migration.html">Rails Migrations</a>的数据库)</li>
</ul>
<h3>源文件</h3>
<ul>
	<li><a href="http://www.flexonrails.net/bits/flex_sales_report.zip">Flex Application</a></li>
	<li><a href="http://www.flexonrails.net/bits/rails_sales_report.zip">Rails Application</a></li>
</ul>
<h3>创建Rails应用</h3>
里克：创建一个叫sales_report的应用，具体的创建可以参照源码，或者按照自己的喜好啦。

主要的是：
<blockquote> script/generate model sale</blockquote>
001_create_sales.rb的代码：
<blockquote>
<pre lang="ruby">
  def self.up
    create_table :sales do |t|
      t.column :customer, :string
      t.column :product, :string
      t.column :quantity, :integer
    end
  end</pre>
</blockquote>
创建一个controller
<blockquote> script/generate controller sales index</blockquote>
sales_controller.rb代码
<blockquote>
<pre lang="ruby">
class SalesController &lt; ApplicationController
  scaffold :sale
end</pre>
<pre></pre>
</blockquote>
下面要开始ActiveMessaging的部分了。
$ gem install daemons
$ gem install stomp
$ script/plugin install
http://activemessaging.googlecode.com/svn/trunk/plugins/activemessaging

来创建一个ActiveMessaging 的processor，其实本案并不需要一个proccessor，但是它会为我们创建一些其他的文件。
$ script/generate processor sale
create  app/processors
create  app/processors/sale_processor.rb
create  test/functional/sale_processor_test.rb
create  config/messaging.rb
create  config/broker.yml
create  app/processors/application.rb
create  script/poller

打开config/broker.yml ，编辑stomp adapter
<pre>
development:
   adapter:
   stomplogin: ""
   passcode: ""
   host: localhost
   port: 61613
   reliable: false</pre>
打开config/messaging.rb 文件
<blockquote>
<pre lang="ruby">
ActiveMessaging::Gateway.define do |s|
  s.destination :sale_queue, '/queue/Sale'
end</pre>
</blockquote>
下面我们对sale model 创建一个<a href="http://api.rubyonrails.org/classes/ActiveRecord/Observer.html">Observer</a>。
$ script/generate observer sale
<blockquote>
<pre lang="ruby">
require 'activemessaging/processor'
class SaleObserver < ActiveRecord::Observer
  include ActiveMessaging::MessageSender
  publishes_to :sale_queue

  def after_save(sale)
    record = sale.to_xml
    publish :sale_queue, record
  end
end</pre>
</pre></blockquote>
这个类监视着sale model，当保存一条记录时，after_save方法被调用，这个方法将sale的AR实例转换成xml格式，发送到sale_queue中。
最后，启动我们的rails服务。
$ script/server
<h3>安装 ActiveMQ</h3>
很简单
1、<a href="http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/apache-activemq/5.0-SNAPSHOT/">先看看这个</a>
2、<a href="http://activemq.apache.org/getting-started.html#GettingStarted-PreInstallationRequirements">这有其他的一些介绍</a>
<h3>flex应用和STOMP AS3客户端</h3>
使flex和ActiveMQ 通信，需要使用STOMP 协议，这有篇文章：<a href="http://docs.codehaus.org/display/STOMP/Flash">ActionScript 3 STOMP client</a>，这里我们需要做的是用flex通过STOMP连接上ActiveMQ，并能解释[consume]rails发布的xml文件。

这是重要的一段代码：
<blockquote>
<pre lang="actionscript">
private var sales : ArrayCollection = new ArrayCollection();

private var stomp : STOMPClient = new STOMPClient();
private var queue : String = "/queue/Sale";

private function init () : void
{
	stomp.connect("localhost", 61613);
	stomp.subscribe( queue );

	stomp.addEventListener(MessageEvent.MESSAGE, handleMessages);
	stomp.addEventListener(ReceiptEvent.RECIEPT, handleReceipts);
	stomp.addEventListener(STOMPErrorEvent.ERROR, handleErrors);

}

private function handleMessages(event : MessageEvent) : void
{
	var incomingMsg : XML = XML(event.message.body);
	var processedSale : ObjectProxy = simplerXMLDecoder(incomingMsg);
	orders.addItem(processedSale);
}

private function handleReceipts (event : ReceiptEvent) : void
{
	trace ("Got receipt: " + event.receiptID)
}
private function handleErrors (event : STOMPErrorEvent) : void
{
	trace ("Error: " + event.error.body)
}

private function simplerXMLDecoder (x : XML) : ObjectProxy
{
	var xdoc : XMLDocument =  new XMLDocument();
	xdoc.ignoreWhite = true;
	xdoc.parseXML(x.toXMLString());
	var decoder : SimpleXMLDecoder =  new SimpleXMLDecoder(true);
	return decoder.decodeXML(XMLNode(xdoc.firstChild)) as ObjectProxy;
}</pre>
</blockquote>
代码解释：
1、在开始的时候，我们创建了一个STOMPClient
2、接下来我们定义了queue，这是我们的订阅地址，就是在messaging.rb中定义的那个。
3、在这个应用加载的时候，init()方法会自动调用，它会自动连接STOMP代理(ActiveMQ)，然后订阅[subscribe]这个地址。
4、这样我们就建立了一个检查来自ActiveMQ信息的监听。

所有实际的action操作，都是传递到handleMessages方法里：
1、当Rails应用在产生并发送一个xml是调用handleMessages 方法
2、当接受到一个新信息时，我们对这个信息体[body of the message](实际上是rails发送过来的xml)，使用XMLDecoder 类转化成一个可绑定对象[bindable ObjectProxy]。
3、最后，一个新的销售记录增加到销售集合中，并展示在flex的数据表格中。
<h3>运行一下试试</h3>
http://localhost:3000/sales/new
<a href="http://railser.cn/wp-content/uploads/2007/11/rails_sales_report.png" title="rails_sales_report.png"><img src="http://railser.cn/wp-content/uploads/2007/11/rails_sales_report.png" alt="rails_sales_report.png" /></a>

在你的flex中可以看到
<a href="http://railser.cn/wp-content/uploads/2007/11/flex_sales_report.png" title="flex_sales_report.png"><img src="http://railser.cn/wp-content/uploads/2007/11/flex_sales_report.png" alt="flex_sales_report.png" /></a>

当一个销售记录保存到数据库后，SaleObserver 发布这个消息，ActiveMQ 将这个发布给flex应用。

当把你的init()方法改成下面的样子的时候
<blockquote>
<pre lang="ruby">
private function init () : void
{
        var ch : ConnectHeaders =  new ConnectHeaders();
	ch.clientID = "MYTOTALLYUNIQUECLIENTID";
	stomp.connect("localhost", 61613, ch);

	var sh : SubscribeHeaders = new SubscribeHeaders();
	sh.amqSubscriptionName = "MYSUBSCRIPTION";
	stomp.subscribe( queue, sh );

	stomp.addEventListener(MessageEvent.MESSAGE, handleMessages);
	stomp.addEventListener(ReceiptEvent.RECIEPT, handleReceipts);
	stomp.addEventListener(STOMPErrorEvent.ERROR, handleErrors);
}</pre>
</blockquote>
当连接的时候增加一个clientID和在订阅的时候增加一个subscriptionName，我们创建了一个永久的订阅者[durable subscriber]。
好了，可以再次运行看一下效果了。

本文中文翻译：里克，guxing203 at gmail dot com，http://railser.cn

参考资料：
<a href="http://blog.csdn.net/pengrg166/archive/2006/12/31/1471435.aspx">Apache Geronimo 的 JMS 实现：ActiveMQ  </a>

<a href="http://www.blogjava.net/cctvx1/archive/2007/02/08/98835.html">ActiveMQ 实践之路(一) 启动你的ActiveMQ</a>

<a href="http://activemq.apache.org/">http://activemq.apache.org/</a>

<a href="http://code.google.com/p/activemessaging/wiki/ActiveMessaging">ActiveMessaging is a messaging framework for Ruby and Ruby on Rails</a>

<a href="http://www.infoq.com/cn/articles/intro-active-messaging-rails">Rails ActiveMessaging入门</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2007-11-03 16:14:11</wp:post_date>
		<wp:post_date_gmt>2007-11-03 08:14:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>publish-subscribe-messaging-with-flex-and-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="activemessaging"><![CDATA[ActiveMessaging]]></category>
		<category domain="post_tag" nicename="activemq"><![CDATA[ActiveMQ]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[flex]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="stomp"><![CDATA[STOMP]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[publishsubscribe-messaging-with-flex-and-rails]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f8b27787454eebfbf435174031400330</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_19bbf265d125d84c6143cfadaa23e28e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c4f6dfd4d56732d95c94ad6322e31c2f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_17aae838857cb7a5b765000e61d670b2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_bc2026ffdd21bb295caec183fb1a29b5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7787ba2c57255b8017430319ad837079</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[lg2046]]></wp:comment_author>
			<wp:comment_author_email>lg2046@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.10.65.189</wp:comment_author_IP>
			<wp:comment_date>2009-04-11 15:32:13</wp:comment_date>
			<wp:comment_date_gmt>2009-04-11 15:32:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[为什么FLASH是在3000端口加载的,而按道理它是不能从66133端口加载数据的.

这个问题你以前没有遇到吗?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.88.59.138</wp:comment_author_IP>
			<wp:comment_date>2009-04-12 13:26:37</wp:comment_date>
			<wp:comment_date_gmt>2009-04-12 13:26:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sorry,请google吧。也欢迎将经验发表在这里]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>关注:Rails上的Opensocial实现</title>
		<link>http://railser.cn/blog/opensocial-with-ruby-on-rails</link>
		<pubDate>Tue, 04 Dec 2007 03:11:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/opensocial-with-ruby-on-rails</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
//468x60, 创建于 07-12-3
google_ad_slot = "2874464732";
google_ad_width = 468;
google_ad_height = 60;
//--></script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script></pre>
<pre>
<object height="355" width="425">
<param name="movie" value="http://www.youtube.com/v/9KOEbAZJTTk&amp;rel=1&amp;border=0"></param>
<param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/9KOEbAZJTTk&amp;rel=1&amp;border=0" type="application/x-shockwave-flash" wmode="transparent" height="355" width="425"></embed></object></pre>
注：这是opensocial在google code上的视频，经常看可以锻炼下英语
<h3>什么是OpenSocial</h3>
OpenSocial是一套API，具体说是由两种类型的API组成。第一种，REST 形式的API是向Social Network或其他遵循 该协议的应用，发送个人资料，好友，活动和persistence components[?]。第二种，Javascript API是以表单的形式实现第一种的REST应用。
<h3>Rails上的OpenSocial</h3>
本段译自<a href="http://blog.new-bamboo.co.uk/2007/11/7/opensocial-with-ruby-on-rails" target="_blank">Google's OpenSocial with Ruby on Rails</a>
根据<a href="http://code.google.com/apis/opensocial/">OpenSocial documentation</a>上的显示，目前OpenSocial开放了2中类型资源：people，一个用户的好友，和activities，这些好友的活动/行为。这种结构正好符合rails对集中资源的理解，在一个user Controller中，我们可以狠容易的得到用户的好友和他们的活动。
OpenSocial的API是按照REST结构设计，但是它并不完全符合Rails的观点，首先，通过URL访问资源的形式并不是Rails的标准形式。其次，它不包含format extension，这意味着你不能直接使用respond_to块。
但是上面两个问题可以通过在routes文件增加一组路由描述和增加一个自定义的mimetype来解决。
下面的路由规则是在描述如何在我们的user_controller中对应OpenSocial 中的people资源的。
<blockquote>
<pre lang="ruby">
# config/environment.rb
Mime::Type.register "application/x-opensocial", :opensocial

# config/routes.rb
map.opensocial_person '/feeds/people/:id', :controller =&gt; 'users', \
                            :action =&gt; 'show', :format =&gt; 'opensocial',\
                            :conditions =&gt; {:method =&gt; :get}

map.opensocial_person '/feeds/people/:id', :controller =&gt; 'users',\
                            :action =&gt; 'update', :format =&gt; 'opensocial', \
                            :conditions =&gt; {:method =&gt; :put}

map.opensocial_person '/feeds/people/:id', :controller =&gt; 'users', \
                             :action =&gt; 'destroy', :format =&gt; 'opensocial', \
                             :conditions =&gt; {:method =&gt; :delete}

# app/controllers/users_controller.rb

respond_to do |format|
  gem
  format.opensocial
end</pre>
</blockquote>
如果上面的比较麻烦，可以<a href="http://blog.nbwd.co.uk/assets/2007/11/7/opensocial_routing.tar.gz">下载</a>作者发的插件。这样你的route文件可以这样写：
<blockquote>
<pre lang="ruby">
# config/routes.rb
map.resources :users do |user|
  user.resources :activities
  user.resources :relationships
end

map.opensocial_people :users do |user|
  user.opensocial_friends :relationships
  user.opensocial_activities :activities
end</pre>
</blockquote>
里克：google上看到的是两种资源，一种持久性方案，下面这个单元就介绍了OpenSocial Container
<h3>OpenSocial Container</h3>
本段整理自<a href="http://www.elctech.com/2007/12/1/opensocial-whats-that" target="_blank">OpenSocial? What's that?</a>
<strong>OpenSocial Application</strong>
OpenSocial Application使用XML文档来最终render[一个狠程序化的词，我感觉应该不翻译为好]给用户。这个xml包含了metadata，html，和javascript。下面是Last.fm上的OpenSocial应用。
<a href="http://www.last.fm/opensocial/myfavouritemusic.xml">http://www.last.fm/opensocial/myfavouritemusic.xml</a>
<blockquote style="overflow: scroll">
<pre lang="xml">
< ?xml version="1.0" encoding="UTF-8"?>
<module>
  <moduleprefs title="My Favorite Music">
    <require feature="opensocial-0.5" />
    <require feature='setprefs' />
    <require feature='dynamic-height' />
  </moduleprefs>
  <content type="html">

  < ![CDATA[

  <div id="overlord">

    <div id="loading">Loadinggem</div>
    <div id="updating" style="display:none;">Updatinggem</div>
    <div id="area"></div>

    <div id="lastfmAccount" class="lastfmAccount">
        <div id="hadALastfmAccount" style="display:none;" class="strongLinks">
          <p><a id="haveAccountLink" href="javascript:;" onclick="$('setUsername').toggle();_IG_AdjustIFrameHeight();new Effect.ScrollTo('setUsername');return false;">Have a Last.fm account? Click here.</a></p>
        </div>
        <form id="setUsername" style="display:none;">
          <input type="text" id="username" />
          <input type="submit" value="That's me!" />
          <span id="cancelChangeUsername">| <a href="javascript:;" class="cancel" id="">cancel</a></span>
        </form>
    </div>
    <div id="placeholder"></div>



  <style>
    @import url(http://cdn.last.fm/opensocial/main.5.css);
    @import url(http://cdn.last.fm/opensocial/canvas.1.css);
  </style>
  <script type="text/javascript" src="http://cdn.last.fm/javascript/lib/prototype.js"></script>
  <script type="text/javascript" src="http://cdn.last.fm/javascript/lib/scriptaculous.js"></script>
  <script type="text/javascript" src="http://cdn.last.fm/javascript/source/flashplayer_inline.js"></script>
  <script type="text/javascript" src="http://cdn.last.fm/javascript/11/flashpreview.js"></script>

  <script src="http://cdn.last.fm/opensocial/lfm.2.js"></script>

  ]]]]><![CDATA[>
  </content>

</module>
</pre>
</blockquote>
<strong>OpenSocial Container</strong>
OpenSocial Container的设计，是用来给网站提供用户的选择，配置，加强网站的用户应用，尤其在用户属性页面。OpenSocial Container需要能够理解XMl文件格式，并实现OpenSocial Javascript API。

<strong>OpenSocial Container如何工作</strong>
里克：下面的话还在捉摸
The OpenSocial Container boils down quite simply to an IFRAME with the text of the <content> element from the application's XML dumped in to the body. One difficulty for building a container is dealing with the security risks of exposing cookies set by the "Host Network" to the Application's content, since the Host is doing the embedding. To ensure privacy and a certain degree of security the Container needs to originate from a different domain name than the Host. By doing this the Host/Container (they are the same entity) trick the browser into protecting the Host cookies from the Container's (and thus the Application's) Javascript.</content>

The Container also makes extensive use of AJAX to request data from the Host/Container. This is how the Application gets access to the profile, friendship, activities, and persistence information.
<strong>为什么这么做？我们要注意什么？</strong>
OpenSocial standardizes social networking APIs. That alone is not particularly novel. But this is Google we're talking about here. With that kind of backing and buzz this may stick. As a developer this means that you only need to learn one API to be able to build social applications. One particularly interesting aspect of the OpenSocial API is the persistence layer. Using this portion of the API a developer can, quite easily, create a full featured interactive application which is entirely self contained in a single static XML file. All of the persistence and communication is handled by the Container and the Host. Now that is cool.

If this takes off like is appears to be poised to do, then we could be in for some excitement akin to the growth and fragmentation of the early social networks; except this will be happing above the social network layer. One interesting possible side effect will be a growth in the popularity of niche social networks. OpenSocial appears to lower the castle walls of the established networks. I expect the crossover in data and user-base between networks will skyrocket as once "proprietary" profile data becomes easily moved and shared.
<h3>下载OpenSocial Container 0.2.0</h3>
ruby script/plugin install
http://opensocial.rubyforge.org/svn/plugin/tags/0_2_0/opensocial_container
<h3>下载OpenSocial Container 0.3.0</h3>
ruby script/plugin install
http://opensocial.rubyforge.org/svn/plugin/tags/0_3_0/opensocial_container

注：
本文将继续整理相关内容，有想法的朋友请留言，万分感谢。
本文有很多东西第一次接触，有不妥的地方，如果您愿意指出帮助我提高，劳烦留言。我会认真查找您的提示。
目前正在看OpenSocial Container 0.2/3.0的源码
林肯公园的歌简直成了我的精神支柱了。

参考资料：
<a href="http://elctech.com/2007/12/3/opensocial-container-0-2-0">OpenSocial Container
0.2.0</a>
<a href="http://elctech.com/2007/12/7/opensocial-container-0-3-0">OpenSocial Container 0.3.0</a>
<a href="http://www.elctech.com/2007/12/1/opensocial-whats-that">OpenSocial? What's that?</a>
<a href="http://blog.new-bamboo.co.uk/2007/11/7/opensocial-with-ruby-on-rails">Google's OpenSocial with Ruby on Rails</a>
<a href="http://code.google.com/apis/opensocial/">OpenSocial</a>
其他：
<a href="http://www.railsjitsu.com/installing-and-configuring-nginx-and-mongrel-for-rails">Installing and Configuring Nginx and Mongrel for Rails</a>
<a href="http://blog.new-bamboo.co.uk/2007/11/20/database-optimization-for-rails-apps">Database Optimization for Rails Apps</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2007-12-04 11:11:07</wp:post_date>
		<wp:post_date_gmt>2007-12-04 03:11:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>opensocial-with-ruby-on-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="opensocial"><![CDATA[opensocial]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_623951d11187adc47f9a80618d20a645</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f649e6005b3dc30fbc123e7ec11ddaf2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f2c71915c9a11699a3672019e4384683</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e8c4a6fb039a6afb980fbde41275813c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_55bad9c45a3626c02da29e5c9c93e1d6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_6cff12709ade29b0dddbe9c3b53662eb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[julian]]></wp:comment_author>
			<wp:comment_author_email>julian_wind@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.19.231.55</wp:comment_author_IP>
			<wp:comment_date>2007-12-27 09:37:22</wp:comment_date>
			<wp:comment_date_gmt>2007-12-27 01:37:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看了你的文章,很有启发性,谢谢你,希望你能给我们更多更好的文章,给我们更大的帮助!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MephistoBlog使用的插件和第三方代码介绍</title>
		<link>http://railser.cn/blog/mephistoblog-vender-and-plugins</link>
		<pubDate>Tue, 18 Dec 2007 02:15:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/mephistoblog-vender-and-plugins</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
//468x60, 创建于 07-12-3
google_ad_slot = "2874464732";
google_ad_width = 468;
google_ad_height = 60;
//--></script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script></pre>
本篇是在 <a href="http://railser.cn/archives/development-log-rails-pagnate-and-acts-as-taggable">开发笔记：rails分页和acts_as_taggable插件的应用</a> 一文的后半部分基础上再整理的。内容上是连贯的。

在 Rails开发中，会用到很多有帮助的插件，<a href="http://alexyoung.org/articles/show/40/a_taxonomy_of_rails_plugins">A taxonomy of Rails plugins</a>【<a href="http://www.javaeye.com/topic/113929">中文翻译</a>】 里讲到了如何制作插件，并引用了acts_as_taggable的例子进行讲解。

<a href="http://www.juixe.com/techknow/index.php/2006/07/05/top-11-rails-plugins/">Top 11 Rails Plugins</a> 里面更是讲了很多有帮助的插件。不过我更想细看一下<a href="http://www.mephistoblog.com/">mephisto-0.7.3</a>里面的插件。
<h3>MephistoBlog用了哪些插件</h3>
看图：
<img src="http://railser.cn/wp-content/uploads/2007/12/vender.jpg" alt="vender" />

<img src="http://railser.cn/wp-content/uploads/2007/12/plugins.jpg" alt="plugins" />

说话：
<strong>vender中：</strong>
BlueCloth：<a href="http://www.deveiate.org/projects/BlueCloth">BlueCloth</a>是一个Markdown的Ruby实现，一个提供给网页文字撰写者将文本转成HTML的工具。Markdown令你可以写出容易阅读、容易撰写的文本格式，然后将它转换成结构化的XHTML（或者HTML）。

RedCloth：<a href="http://code.whytheluckystiff.net/redcloth/">RedCloth</a>是一个令你可以在Ruby中使用Textile的模块。Textile是一个文本格式，一个非常简单的文本格式。可以将一个可读的文本转成HTML。

RubyPants：是Ruby实现的“smart-quotes library SmartyPants”。RubyPants使用不同的APIs，它兼容上面两个的APIs，将ASCII的标点转换成 “smart” typographic punctuation HTML entities。参考：<a href="http://chneukirchen.org/blog/static/projects/rubypants.html">RubyPants</a>

RubyZip：rubyzip是一个ruby读写zip文件的类库。<a href="http://rubyzip.sourceforge.net/">RDOC</a>

TZInfo：<a href="http://tzinfo.rubyforge.org/">TZInfo</a>是一个标准tz数据库提供不同时区的daylight savings的Ruby类库。

<strong>plugins中：</strong>

a_gems：小巧的Ruby Gem管理工具，它在启动时会自动的将gem/lib的路径加载到$LOAD_PATH 中。
它不用介绍，就几行代码。
<blockquote>
<pre lang="ruby">
standard_dirs = ['rails', 'plugins']
gems          = Dir[File.join(RAILS_ROOT, "vendor/**")]
if gems.any?
  gems.each do |dir|
    next if standard_dirs.include?(File.basename(dir))
    lib = File.join(dir, 'lib')
    $LOAD_PATH.unshift(lib) if File.directory?(lib)
  end
end</pre>
</blockquote>
<a href="http://technoweenie.stikipad.com/plugins/show/Acts+as+Attachment">acts_as_attachment</a>：保存附件文件到数据库或文件系统的插件。

<a href="http://ar-paranoid.rubyforge.org/">acts_as_paranoid</a>：重写当前model的一些基础方法。当执行destroy时，设置deleted_at为当前时间。里克：意思是说它并不真正删除数据，只是加上了一个删除日期，证明该记录被删除了。它可以使你重新看到已删除的记录。对数据要求高的应用很有帮助。

<a href="http://ar-versioned.rubyforge.org/">acts_as_versioned</a>：对一个ActiveRecord  module 进行简单的版本标注。可实现值的回滚操作。因为它为每一个create出来的记录都做了版本记录。

<a href="http://weblog.techno-weenie.net/projects/dialog">dialog_helper</a>：一个简单的脚本，对浏览器的弹出窗口进行“装修”。

filtered_column：README里啥也没写！！看文件里面，是在做格式化文本，可能是在对BlueCloth和RedCloth的一个功能进行改进。代码很多，有用过的朋友请留言。

filtered_column_code_macro：增强ruby代码的高亮显示，使用了<a href="http://coderay.rubychan.de/">CodeRay</a>库，Ruby写的做语法高亮显示的库。

filtered_column_flickr_macro：flickr转换，文本编辑的加强功能。（Author::Scott Raymond）

labeled_form_helper：为表单元素增加label标签。readme里有示例。

<a href="http://wiki.rubyonrails.org/rails/pages/Liquid+Plugin">Liquid</a>：一个模板引擎。特点：可以编辑应用的外观，而且不会被执行危险代码。直接从数据库渲染模板。里克：看上去有点像django的模板语言。

mephisto_converters：博客搬家程序，将<a href="http://www.textpattern.com/">Textpattern</a>，<a href="http://typo3.com/">Typo</a>和<a href="http://wordpress.org/">Wordpress</a>转换成mephistoblog。

<a href="http://mocha.rubyforge.org/">mocha</a>：Rails的一个测试套件，可以模拟和替换代码中的方法和实例，比如，你可以替换掉ActiveRecord重的实例方法，而避免在单元测试的环节操作数据库。毕竟操作数据库还是慢一些的。

<a href="http://weblog.techno-weenie.net/2006/10/14/simply_bdd-update">simply_bdd</a>：可以在创建测试用例的时候使用上下文和代码块。

<a href="http://matthewman.net/2006/09/04/new-rails-feature-simply_helpful/">simply_helpful</a>：新增的一些helper。加强功能。 <a href="http://www.juixe.com/techknow/index.php/2007/04/03/simply-helpful-rails-plugin/">Simply Helpful Rails Plugin</a>里介绍的比较详细，不过一些功能已经放到2.0里面了，对于老版本，尤其是博客里提到的1.2.2的应用，可以考虑安装的。

<a href="http://weblog.techno-weenie.net/2006/9/3/white-listing-plugin-for-rails">white_list</a>：一个html安全增强工具，可以过滤掉一些hack代码，是html更安全。

ergem
到这里，mephisto blog的第三方代码和插件都写完了。

广告一下：狂喜欢的 <a href="http://www.footballmanager.net/">Football Manager 2008</a> 已经发了。狂好玩。我的曼城还在煎熬中，不过上个赛季最后一场比赛，客场对阿森纳，竟然无比顽强的2：1获胜。挤掉了曼联排名第四。哇哈哈哈！

<img src="http://railser.cn/wp-content/uploads/2007/12/679.png" alt="man city" />

参考资料：
<a href="http://www.mephistoblog.com/">MephistoBlog</a>
<a href="http://rubylib.cn/">Ruby Lib中文站</a>
<a href="http://baike.baidu.com/view/15482.htm">ASCII</a>
<a href="http://lgn21st.javaeye.com/blog/135502">用mocha测试rails，mock HTTPResponse</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2007-12-18 10:15:37</wp:post_date>
		<wp:post_date_gmt>2007-12-18 02:15:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mephistoblog-vender-and-plugins</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blog"><![CDATA[blog]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="mephisto"><![CDATA[mephisto]]></category>
		<category domain="post_tag" nicename="plugins"><![CDATA[plugins]]></category>
	</item>
	<item>
		<title>写在2007的最后一天</title>
		<link>http://railser.cn/blog/riquel-li-at-2007-end</link>
		<pubDate>Mon, 31 Dec 2007 02:58:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/riquel-li-at-2007-end</guid>
		<description></description>
		<content:encoded><![CDATA[今天是2007年的最后一天了，出于各种原因我强烈的盼望2008赶快到来。

2008年，Railser.cn将继续关注：
1、Rails
2、OpenSocial的Rails实现
3、Flex框架和Rails框架的开发
4、Restful Rails开发
5、Ruby编程
6、服务器部署，管理
7、数据库管理

会影响2008的技术：
1、Flex2
2、RESTful and ROA
3、Rails and Ruby

目前正在看的书，08年还要继续看
《RESTful web services》
<img src="http://railser.cn/wp-content/uploads/2007/12/9780596529260_cat.gif" alt="RESTful web services" />

《The.Essential.Guide.to.Flex.2.with.ActionScript.3.0》
<img src="http://railser.cn/wp-content/uploads/2007/12/1590597338.jpg" alt="The.Essential.Guide.to.Flex.2.with.ActionScript.3.0" />

07年的经历：儿子出生，工作的不如意，项目停止，身体垮掉，SOHO生涯
如果说感谢的话，要感谢在我最困难的时候，听我发牢骚的朋友们，陪我度过难关的朋友们。
还要感谢我儿子，虽然我经常欺负他，但是他还是让我觉得小孩子是狠可爱的。
07年太多的不如意和牢骚，不要留给08年。明天将是另一个开始。
<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
//468x60, 创建于 07-12-3
google_ad_slot = "2874464732";
google_ad_width = 468;
google_ad_height = 60;
//--></script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script></pre>
08年就要来了，计划有很多，希望08年最后一天写总结的时候，会想到一些成绩。放一首歌吧，Action English上听到的，Travis的《Closer》
<pre>
<object height="300" width="400">
<param name="movie" value="http://www.tudou.com/v/wW2YnUmE6kI"></param>
<param name="allowScriptAccess" value="always"></param>
<param name="wmode" value="transparent"></param><embed src="http://www.tudou.com/v/wW2YnUmE6kI" type="application/x-shockwave-flash" allowfullscreen="true" wmode="transparent" allowscriptaccess="always" height="300" width="400"></embed></object></pre>

想写的很多，听歌吧，放上几首林肯公园的歌。
<one Step Close>
<pre>
<object width="488" height="423"><param name="movie" value="http://www.tudou.com/player/playlist.swf?lid=2282241"></param><param name="allowscriptaccess" value="always"><embed src="http://www.tudou.com/player/playlist.swf?lid=2282241" type="application/x-shockwave-flash" width="488" height="423"></embed></param></object>
</pre>

<somewhere I Belong>(MV拍的像电影)
<pre>
<object width="488" height="423"><param name="movie" value="http://www.tudou.com/player/playlist.swf?lid=2282241"></param><param name="allowscriptaccess" value="always"><embed src="http://www.tudou.com/player/playlist.swf?lid=2282241" type="application/x-shockwave-flash" width="488" height="423"></embed></param></object>
</pre>

<what I've Done>
<pre>
<object width="400" height="300"><param name="movie" value="http://www.tudou.com/v/MUWutqlJKdQ"></param><param name="allowScriptAccess" value="always"></param><param name="wmode" value="transparent"></param><embed src="http://www.tudou.com/v/MUWutqlJKdQ" type="application/x-shockwave-flash" width="400" height="300" allowFullScreen="true" wmode="transparent" allowScriptAccess="always"></embed></object>
</pre>
里克，2007年12月31日
<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
//468x60, 创建于 07-12-3
google_ad_slot = "2874464732";
google_ad_width = 468;
google_ad_height = 60;
//--></script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
</script></pre></what></somewhere></one>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2007-12-31 10:58:37</wp:post_date>
		<wp:post_date_gmt>2007-12-31 02:58:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>riquel-li-at-2007-end</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
	</item>
	<item>
		<title>新年小礼物：ATNotes，windows桌面便签</title>
		<link>http://railser.cn/blog/2008-gift-atnotes</link>
		<pubDate>Tue, 01 Jan 2008 09:04:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/2008-gift-atnotes</guid>
		<description></description>
		<content:encoded><![CDATA[大家08新年好！

感谢所有来到Railser.cn的朋友，新年送给大家一个小礼物：ATnotes，一个windows桌面便签，非常使用，开发项目的时候可以随手把一些想法，注意事项写在上面，方便到非常啊。

不过遗憾的是发现官网访问不了，所以在目前的机器里一直没有安装，今天把这个小工具从原来的硬盘找回来，继续使用，并打包提供下载。

这个工具被一个小朋友翻译成中文了，如果大家觉得有的地方翻译有问题，可以自己修改ATnotes.ini文件。

点击下载： <a href="http://railser.cn/wp-content/uploads/2008/01/atnotes.rar" title="ATnotes汉化版">ATnotes汉化版</a>

截图：

<img src="http://railser.cn/wp-content/uploads/2008/01/1.jpg" alt="截图" />

<img src="http://railser.cn/wp-content/uploads/2008/01/2.jpg" alt="截图" />

<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
//336x280, 正方形图文
google_ad_slot = "8079527128";
google_ad_width = 336;
google_ad_height = 280;
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2008-01-01 17:04:07</wp:post_date>
		<wp:post_date_gmt>2008-01-01 09:04:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2008-gift-atnotes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="atnotes"><![CDATA[ATnotes]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[software]]></category>
	</item>
	<item>
		<title>RESTful的Rails开发，讲讲4Rails.cn的开发心得</title>
		<link>http://railser.cn/blog/rails-on-rest-and-4rails-cn</link>
		<pubDate>Sun, 20 Jan 2008 09:01:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/rails-on-rest-and-4rails-cn</guid>
		<description></description>
		<content:encoded><![CDATA[这是一篇笔记。

最近的事情很多很不顺利，不过一切都会过去，并且重新走上 正规的。

前阵子在看《RESTful Web Services》，看得更加迷惑，毕竟是英文书，不太好理解。不过关于REST的理解还是整理了一下。

同时在写一个个人的项目，主要是在开发的过程中保持对编程的感觉（因为没有接到赚钱的项目），还有就是试用新的Rails2.0.2，以及对REST的重新理解。

这个个人的项目是<a href="http://4rails.cn" target="_blank">http://4rails.cn</a>，一个招聘信息发布和简历系统。由于目前是个人练习，所以功能上很主观，并未太考虑实用性。而且在正式美化界面前，它属于全人类。

开发4Rails有几个想法：
<blockquote> 1、RESTful和ROA

2、Rails2.0.2下的RESTful

3、几个插件的使用

4、实现以前想过但是没做的想法

5、为另一个项目准备</blockquote>
随便写写：
<h3>1、RESTful和ROA</h3>
<blockquote> I hold that everything in the Resource-Oriented Architecture is also RESTful.</blockquote>
在<a href="http://baike.baidu.com/view/1077487.htm" target="_blank">这篇文章</a>里面，比较详细的介绍了REST的概念，但是，普遍的来说，很多文章 对REST的描述都是千篇一律的。那么，《RESTful Web Services》中如何来介绍REST的呢？

第四章《The Resource-Oriented Architecture》 中讲到：REST不是一个结构，而是一个标准[criteria]，但是这里并不是在说“REST 结构”。而ROA(Resource-Oriented Architecture)才是一个结构，一个RESTful的结构。

在这里，“Oriented”再次出现在眼里，而它出现最多地方的便是“<a href="http://baike.baidu.com/view/63596.htm">Object Oriented Programming</a>”，计算机教科书里的翻译为“面向对象的程序设计”。那么根据同样的原则，来对ROA理解，可以叫做“面向资源的结构”。

那么Rails2.0.2里面，是如何来实现ROA的呢？
<h3>2、Rails2.0.2下的RESTful</h3>
在Rails1.2.x里面就在坚持着RESTful的风格，现在Rails2.0.2更加强调了ROA的结构，特别是在scaffold的生成和routes的设计上。不过，Rails并不是完全的REST，“RESTful”比较合适。而在目前的开发中，更多的是在遵循ROA，来设计“资源”。

在4Rails的这个系统中，资源包括：用户，招聘信息，用户关注的信息，简历，头像。

刚开始对REST感兴趣的时候，经常会想到的问题：“是不是网站的设计都要RESTful”，不。

REST讲究的是ROA的设计，是对网站资源的操作，而很多业务操作，如用户登陆，购买流程，统计结算等等，还是需要传统的设计。RESTful的优点是方便资源的利用。所以，再重新设计一个销售项目的时候，Rails做的是对网站资源和用户资源重新设计，这主要的改进是，对资源的表述更加准确。

比如以前喜欢把用户中心地址设计成"/u/1"，用户的销售商品列表就是"/goods"。
而现在统一的都是"/users/1"，和"/users/1/goods"，当然，这里面避免了的麻烦还很多。

里克：当然，id的使用并不是REST所提倡的，因为它不够直接，而且当id变化的时候（很容易造成变化，比如新老系统的数据整合的时候），就会造成一些问题。我倒是希望Rails能够用slug来代替id，就像wp的Post Slug，或者给出两个方案，默认用id，slug可选。这会成真吗？

有时候，xxx_id 并不一定代表model关系中的外键关联，它可能是一个判断标准。尤其在REST的view页面的时候。对于需要对其判断权限的访问者，这个id比其他的更重要。
<h3>3、插件</h3>
4Rails用到了4个插件：

will_paginate：分页插件，很好用。

resource_feeder和simply_helpful：用来实现RSS订阅。不过被大砍了很多代码，因为是针对1.2.x版本的，在2.0.2上会覆盖掉默认的form_form 方法，所以需要改一下。

acts_as_attachment：头像的上传

acts_as_attachment和attachment_fu两个插件会在下一篇博客里好好整理一下，早就知道这两个插件的大名，而且向人吹嘘说是插件排行榜前三位。不过说实话我还没用过呢。嘿嘿。
<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
//336x280, 正方形图文
google_ad_slot = "8079527128";
google_ad_width = 336;
google_ad_height = 280;
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</pre>
参考文章：
<a href="http://www.ibm.com/developerworks/cn/web/wa-ajaxarch/">Ajax 和 REST，第 1 部分</a>
<a href="http://www.ibm.com/developerworks/cn/web/wa-ajaxarch2.html">Ajax 和 REST，第 2 部分</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2008-01-20 17:01:29</wp:post_date>
		<wp:post_date_gmt>2008-01-20 09:01:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rails-on-rest-and-4rails-cn</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<category domain="post_tag" nicename="roa"><![CDATA[ROA]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[rails-on-rest-and-4railscn]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>acts_as_attachment和attachment_fu插件应用</title>
		<link>http://railser.cn/blog/acts_as_attachment-and-attachment_fu</link>
		<pubDate>Fri, 25 Jan 2008 13:42:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/acts_as_attachment-and-attachment_fu</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面

Rails插件，是学习Rails框架很好的教材。插件可以让你利用Ruby语言的特点，改进Rails框架代码，而不必去编辑它。比如acts_as_paranoid插件就是将Rails默认的Destroy功能进行了删除标记的改进。这里，Rails的Module和Class的学习，Mixin的学习对于理解Rails是相当重要的。
里克：我觉得想学习Rails插件，先需要看《Ruby for Rails》的第六章（模块和程序组织）和第十三章（Ruby动态特性）。

插件还可以让开发人员发布复用性强的应用，比如各种Acts_as插件。

插件是一种很好的Rails附加产品，通过对插件代码的学习，插件test的学习，可以很快的提升对Rails框架的理解。这对于学习其他框架也是有一定帮助的。

下面将详细的对工作中用到的两个插件进行笔记。

附件管理插件：acts_as_attachment和attachment_fu
acts_as是一个庞大的插件家族，他们无比丰富的扩展了Rails的功能。acts_as_attachment插件是使一个Model具有插件上传，管理的功能，而不必去为全局建立一个公共的上传管理model[<a href="http://weblog.techno-weenie.net/articles/acts_as_attachment">Intro to Acts As Attachment</a>]。attachment_fu是acts_as_attachment的升级版，作者是<a href="http://techno-weenie.net/">Rick Olson</a>，这个插件可以说在Rails plugins排行中进得了前三位的。

连接：<a href="http://hosting.media72.co.uk/blog/2007/12/09/10-ruby-on-rails-plugins-you-should-be-using/">10 Ruby On Rails Plugins You Should Be Using</a>

attachment_fu提供了全面的测试框架，并且提供了对ImageScience，RMagick，minimagick的支持。

acts_as_attachment的教程介绍

<a href="http://weblog.techno-weenie.net/articles/acts_as_attachment">Intro to Acts As Attachment</a> 一篇里简单的介绍了aaa的使用，按照里面的介绍就可以实现附件的上传了，我就是按照它的介绍实现了<a href="http://4rails.cn">4Rails.cn</a>的头像上传功能。不过这个插件的功能绝没这么简单。

<a href="http://weblog.techno-weenie.net/articles/acts_as_attachment/thumbnailing">Acts As Attachment Thumbnailing</a> 一篇简单介绍了图片缩略图功能，这样就可以对上传的图片进行各种大小的缩略图生成了。

下面的内容是针对attachment_fu的。因为接口上没有做任何调整，只需将acts_as_attachment 改成 has_attachment，上面的教程依旧适用。

几个图片处理库

在attachment_fu的option中，可以声明 :processor ，指定图片处理库，这个包括ImageScience, Rmagick, 和MiniMagick，不指定将为默认安装的。

<a href="http://seattlerb.rubyforge.org/ImageScience.html">ImageScience</a>：实现图片放缩的库，使用前需安装<a href="http://sourceforge.net/projects/freeimage">freeimage</a>和<a href="http://rubyforge.org/projects/rubyinline">rubyinline</a>，RubyInline允许你在ruby代码中直接编写c/c++代码。

<a href="http://rmagick.rubyforge.org/">Rmagick</a>：使用的很多，windows的安装有特定的版本需求，需要下载<a href="http://rubyforge.org/frs/?group_id=12&amp;release_id=17573">rmagick-win32</a>最新版<a href="http://rubyforge.org/frs/download.php/46136/RMagick-2.7.1-ImageMagick-6.4.5-3-Q8.zip"> [2.7.1 binary gem for Ruby 1.8.6]RMagick-2.7.1-ImageMagick-6.4.5-3-Q8.zip(08年12月17日更新)</a>，这个对应的Ruby版本是1.8.6。里面已经放上了必须版本的ImageMagick和RMagick的gem，不用再找了。

<a href="http://rubyforge.org/projects/mini-magick/">MiniMagick</a>：将Rmagick的精简，直接用Ruby包装ImageMagick command line。避免了RMagick的内存问题。

参数介绍

设置参数

图片缩略参数详解

关于Rmagick的内存泄露风险

引自：<a href="http://robbin.javaeye.com/blog/157731" target="_blank">JavaEye网站的RoR性能优化经验谈</a>
<blockquote>JavaEye也面临着内存泄漏的困扰，这方面困扰主要来自于Rmagic。Rmagick调用ImageMagick的C库来完成图片的操作，从我们的 监测来看，RMagick大多数情况下会缓慢的泄漏内存，在某些特定的图片操作上会急剧的泄漏内存。解决办法就是用mini_magick替代 Rmagick，mini_magick是直接调用ImageMagick的mogrify命令，另起一个进程来操作图片，操作完进程就结束了，绝无后患，由于Linux的fork进程开销不大，因此也不必担心性能问题。</blockquote>
使用attachment_fu保存远程图片

未完，待续。。

参考资料：
<a href="http://weblog.techno-weenie.net/articles/acts_as_attachment" target="_blank">acts_as_attachment</a>

<a href="http://weblog.techno-weenie.net/articles/acts_as_attachment/thumbnailing" target="_blank">acts_as_attachment thumbnailing</a>

<a href="http://svn.techno-weenie.net/projects/plugins/attachment_fu/README" target="_blank">attachment_fu README</a>

<a href="http://robbin.javaeye.com/blog/157731" target="_blank">JavaEye网站的RoR性能优化经验谈</a>

<a href="http://clarkware.com/cgi/blosxom/2007/02/24#FileUploadFu" target="_blank">File Upload Fu</a>

<a href="http://blog.vixiom.com/2007/12/28/hacking-attachment_fu-to-work-with-flashflex-uploads-and-crop-square-images/">Hacking attachment_fu to work with Flash/Flex uploads and crop square images</a>

<a href="http://almosteffortless.com/2007/03/25/working-with-attachment_fu/">Working with attachment_fu</a>

<a href="http://blog.chinaunix.net/u/10227/showart.php?id=75141">简单、易于扩展的图像读写库：FreeImage</a>

其他：

<a href="http://www.mysqlperformanceblog.com/">MySQL Performance Blog</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2008-01-25 21:42:00</wp:post_date>
		<wp:post_date_gmt>2008-01-25 13:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>acts_as_attachment-and-attachment_fu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="plugins"><![CDATA[plugins]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="rmagic"><![CDATA[rmagic]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.88.56.148</wp:comment_author_IP>
			<wp:comment_date>2008-12-17 13:19:02</wp:comment_date>
			<wp:comment_date_gmt>2008-12-17 13:19:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[非常抱歉，忘了完善这篇文章，发现在百度查 attachment_fu 参数 竟然排在第一篇，哎，稍后补上]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>奥斯卡之前的个人观影排名</title>
		<link>http://railser.cn/blog/oscar-in-my-mind</link>
		<pubDate>Sun, 03 Feb 2008 07:43:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/oscar-in-my-mind</guid>
		<description></description>
		<content:encoded><![CDATA[以前上课的时候，并不溜号，但是上了大学的时候，尤其英语课的时候，经常溜号，而且总能在溜号的时候被老师提问，唉。所以有一次我问她，你能发现我在溜号吗？<strong><font color="#ff6600">她说，不啊。</font></strong>神奇啊。

这个博客是<strong><font color="#ff6600">写Rails技术的</font></strong>，但是我觉得新年了也应该写写别的。 上一篇博客还没写完，因为被别的N多事情给耽误了感觉，今天补上，明天再继续忙。最近在配置几个网站的程序和管理，不能分心哦。

要集中，集中，将会看到绿色小人！

下面是这一年（07年初到现在） 看的电影的一个回顾，对每一个能打动我并留有印象的电影给一个排名。不过从脑袋中回忆一年看过的电影，还是有难度的，我又没有<strong><font color="#ff6600">魔法棒</font></strong>放在太阳穴上，拉出自己的记忆丝（《哈利波特》看过没？？）。

我的魔法呢？我的魔法呢？
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

//468x60, 仅图片，创建于 08-1-26

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//--></script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
最佳电影音乐：《Music and Lyric(中译:K歌情缘)》（好听，好看）

提名：《Once》 （不让你紧张的电影，歌狠动人）

最佳主题曲：《What have I done》（感觉电影的内容有点浪费了这首歌，感觉给《生化危机》还不错）
<pre>
<object height="300" width="400">
<param name="movie" value="http://www.tudou.com/v/MUWutqlJKdQ"></param>
<param name="allowScriptAccess" value="always"></param>
<param name="wmode" value="transparent"></param><embed src="http://www.tudou.com/v/MUWutqlJKdQ" type="application/x-shockwave-flash" allowfullscreen="true" wmode="transparent" allowscriptaccess="always" height="300" width="400"></embed></object></pre>
最佳特效：《300》（这是里程碑的特技，可惜《贝奥武夫》我还没看呢）

最佳画面：《查理的战争》

<a href="http://railser.cn/wp-content/uploads/2008/02/charliewilsonswarreadnfodvdscrxvid-baldavi_002230814.jpg" title="查理的战争"><img src="http://railser.cn/wp-content/uploads/2008/02/charliewilsonswarreadnfodvdscrxvid-baldavi_002230814.thumbnail.jpg" alt="查理的战争" /></a>

我有个疑问就是，这是电脑做的还是真的跑到阿富汗拍的？

最震撼镜头：《人类之子》 （克里夫.欧文冲进楼里找孩子的那场非常长的戏，和之前生孩子，却发现孩子没有呼吸时候的绝望，以及孩子又苏醒的兴奋。）

最佳动作片：《虎胆龙威4》

提名：《迈阿密风云》

最佳爱情片：《Once》

最佳故事片：《伟大的辨手》（想了好久，也没觉得那个特符合，不过这个片子刚看几天，印象深刻，就写上了）

最佳喜剧片：《年度人物 》

提名：《大电影2》，《憨豆的假期》

最失望的电影：《黄金罗盘》（唉，没意思，剧本有点俗套，但是我想看小说）

最佳电影剧本：《老无所依》

最佳动画片：《冲浪企鹅》

提名：《篱笆墙外》 （太好玩了，去年初看的）

最佳小演员：《赎罪》 里的<a href="http://www.imdb.com/name/nm1519680/">Saoirse Ronan</a>（好演技）

<a href="http://railser.cn/wp-content/uploads/2008/02/atonementdvdripxvidcd1-svdavi_000167040.jpg" title="赎罪"><img src="http://railser.cn/wp-content/uploads/2008/02/atonementdvdripxvidcd1-svdavi_000167040.thumbnail.jpg" alt="赎罪" /></a>

提名：《Juno》 里的<a href="http://www.imdb.com/name/nm0680983/">Ellen Page</a>

最佳男配角：<a href="http://www.imdb.com/name/nm0193295/">Cliff Curtis</a>（《训练日》里的街区混混头子，《Fracture 》里的探员，《虎胆龙威4》里的安全局小头头，一点点升官中）

提名：擎天柱 （“汽车人，变形，出发”，全宇宙都在等的号令），飞利浦.霍夫曼

<a href="http://railser.cn/wp-content/uploads/2008/02/charliewilsonswarreadnfodvdscrxvid-baldavi_002942233.jpg" title="查理的战争"><img src="http://railser.cn/wp-content/uploads/2008/02/charliewilsonswarreadnfodvdscrxvid-baldavi_002942233.thumbnail.jpg" alt="查理的战争" /></a>

最佳女配角：<a href="http://www.imdb.com/name/nm0001132/">Judi Dench</a> （《丑闻笔记》，《皇家赌场》，《傲慢与偏见》(2005)，听说007新一部里面戏份更重）

最佳男主角：<a href="http://www.imdb.com/name/nm0564215/">James McAvoy</a>（07年是他的黄金年，几部戏都非常好，挺期待他和朱利，弗里曼的最新动作片）

<a href="http://railser.cn/wp-content/uploads/2008/02/atonementdvdripxvidcd1-svdavi_000677160.jpg" title="McAvoy"><img src="http://railser.cn/wp-content/uploads/2008/02/atonementdvdripxvidcd1-svdavi_000677160.thumbnail.jpg" alt="McAvoy" /></a>

最佳女主角：凯特.布兰切特（《丑闻笔记》，《我不在那》）

最佳导演：李安（《色.戒》）
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

//468x60, 仅图片，创建于 08-1-26

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//--></script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
最荒诞的：《史诗电影》（美国的版的大电影，那叫一个搞啊），《雷诺911》，《Hot Fuzz》

最厌烦的：生孩子，今年看了太多电影里面生孩子，都没有《人类之子》 里的震撼。《Knock Up》更无聊，不过女主演比较好看。

最自己吓唬自己：《我是传奇》 （不知道僵尸在哪比<font color="#ff6600">生化危机</font>里全是僵尸围着你原来更可怕）

最让人迷糊：《加勒比海盗3》 （唉。还需要把第一，二部再看看才能明白）

看了一会就删掉：《荣誉之刃》 （07年死了太多人，不想看了，找个喜剧，没想到还是会死人的）

有点无聊但是比较好看：《决斗尤马镇》 （克里斯蒂安.贝尔，很帅）

<a href="http://railser.cn/wp-content/uploads/2008/02/imnottherelimiteddvdripxvid-dmt-cd1avi_000782560.jpg" title="Bell"><img src="http://railser.cn/wp-content/uploads/2008/02/imnottherelimiteddvdripxvid-dmt-cd1avi_000782560.thumbnail.jpg" alt="Bell" /></a>

<a href="http://railser.cn/wp-content/uploads/2008/02/imnottherelimiteddvdripxvid-dmt-cd1avi_000979560.jpg" title="Bell"><img src="http://railser.cn/wp-content/uploads/2008/02/imnottherelimiteddvdripxvid-dmt-cd1avi_000979560.thumbnail.jpg" alt="Bell" /></a>

很好奇：<strong><a href="http://www.imdb.com/name/nm0000982/">Josh Brolin</a></strong>

国产比较认可的电影：《投名状》 ，《门徒》，《兄弟》，《大电影2》

最漂亮的女演员：<strong><a href="http://www.imdb.com/name/nm1200692/">Eva Green</a></strong>（昨天看《黄金罗盘》，感觉不是为她拍的，所以很一般）

最帅的男演员： <a href="http://www.imdb.com/name/nm0185819/">Daniel Craig</a>（帅啊）

电影里上镜最多的网站：google.com，一搜google就到了要去的网站，非常符合剧情，是不是找外星人也用这个呢？

最假的网站：《刺青》 里的那个成人聊天网站，静态页做的，制作者叫wanggem因为程序员是习惯用名字来命名文件夹的。而且还要放到桌面上。

电影里最重要的 人：伟大的程序员们，真正的舍生忘死，死的最多的是《虎胆龙威4》，两拨人里都死了好些程序员。最可笑的是《年度人物》里的程序员。不过真正拯救世界的也是他们。《天兆》里面给外星人植入病毒，《剑鱼行动》里解除核危机，不过他们都没有前辈NEO给的教训深刻：<strong><font color="#ff6600">“不好好写程序，就去拯救世界吧”！</font></strong>

<a href="http://railser.cn/wp-content/uploads/2008/02/mickeydonaldgoofythethreemusketeers2004dvdripxvid-freebirdmikeavi_000172297.jpg" title="Mickey.Donald.Goofy.The.Three.Musketeers"><img src="http://railser.cn/wp-content/uploads/2008/02/mickeydonaldgoofythethreemusketeers2004dvdripxvid-freebirdmikeavi_000172297.jpg" alt="Mickey.Donald.Goofy.The.Three.Musketeers" /></a>
里克，2008年2月3日]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2008-02-03 15:43:14</wp:post_date>
		<wp:post_date_gmt>2008-02-03 07:43:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>oscar-in-my-mind</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
	</item>
	<item>
		<title>春节里读什么书？Cormac McCarthy的《Border Trilogy》及两本Rails书</title>
		<link>http://railser.cn/blog/cormac-mccarthy-border-trilogy-and-rails-books</link>
		<pubDate>Tue, 12 Feb 2008 06:59:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/cormac-mccarthy-border-trilogy-and-rails-books</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：奥斯卡要公布最终结果了，上一篇帖子写了自己的想法，不过有一点还没大写特写，而这又是我最喜欢的，就是电影原著小说。现在好莱坞非常重视原著小说的改编，而且也经常取得成绩，比如《国王班底》，《丑闻笔记》，《穿普拉达的女巫》，当然还有<font color="#ff6600">史蒂芬 金</font>的小说。不过好莱坞的电影也经常给我带来不可能靠自己去发现的优秀小说，比如下面提到的Cormac McCarthy（中译：<font color="#ff6600">科马克 麦卡锡</font>）的小说。而这些，都来自奥斯卡大热《老无所依》。
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

//468x60, 仅图片，创建于 08-1-26

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//--></script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<h3>Cormac McCarthy的《Border Trilogy》</h3>
这里提到的是麦卡锡的《边境三部曲》 。

先看一下《老无所依》的介绍
<blockquote>  　现代的美国西部，许多地处边境的小镇都成了毒品犯子活跃的交易市场，那里几乎已经成为天天会发生枪械火并的三不管地带，虽然这是一个属于我们的时代，但是来到这里，就等于把生命交在了他人手中。故事总是开始于这样的意外、那样的巧合，一座小镇中的兽医卢埃林·摩斯在一片荒凉的地界，无意中发现了一辆装载用的卡车，车的周围躺着几具押送人员打扮的死尸……卢埃林惊讶地意识到，自己竟然来到了一个毒品交易的现场，只是不知道什么原因，买卖双方产生了冲突，结果统统阵亡，只留下了一大包毒品和两千万现金。

卢埃林决定将现金神不知鬼不觉地藏起来--他确实有这么做的理由，然而若要人不知，除非己莫为，一念之差，卢埃林将自己推向了一个没办法回头的绝境。他遭遇了一连串地跟踪与暗杀，引发了大规模地暴力事件，好人当他是瘟神，坏人又对他手中的毒品和钱心怀不轨，卢埃林悲哀地发现，也许自己只有死亡一条路可走了，因为在这一系列灾难性的事件后，卢埃林知道，没有任何相应的法律能够帮助他，直到他遇到了贝尔……一个没有任何理由就执意要保护他的治安长官。他帮助卢埃林躲过了几次致命的追击，可是他们最终还是要面对的，那个在背后秘密策划着一切的神秘人，一个只手遮天、用一枚硬币就能决定别人的生死的杀人凶手，卢埃林最终会了解，他正在经历的一切，远比他看过的所有惊悚小说和报纸的头版头条都更加恐怖、更加血腥。当真相被拆穿、神秘的面纱被揭开时，一切都避无可避，了结的时候也就到了。

导　　演　伊桑·科恩 Ethan Coen
乔尔·科恩 Joel Coen
主　　演　伍迪·哈里森 Woody Harrelson gem..Wells
汤米·李·琼斯 Tommy Lee Jones gem..Bell
乔什·布洛林 Josh Brolin gem..Moss
凯莉·麦克唐纳 Kelly Macdonald gem..Carla Jean

【关于原著】

这部由科恩兄弟执导、有如被施了催眠术的惊悚影片，改编自曾获得普利策奖的美国文学大师科马克·麦卡锡(Cormac McCarthy)的那部受到极大赞誉的同名小说。当小说版的《老无所依》于2003年印刷发行时，被尊为现代传奇和文学先锋的麦卡锡，因为他的作品对焦在了火速变化着的美国西部非凡的故事背景上，已经积累了无人能及的人气和声望。至于这本《老无所依》，则是麦卡锡所创作的最深奥的当代故事之一，就连成功都来得如此刻不容缓。作为一位文风强劲有力、用悬疑和幽默洞穿你的脑细胞的惊悚大师，麦卡锡将笔尖对准在了一个本来诚实正直的男人身上，开始于这个男人偶然在德克萨斯州的边界地带，拣到了一个有2千万美元现金的袋子，因为过于轻率的处理，而引起了一系列有目的性的追杀……这部小说算得上是一个非常有挑衅意味的深思，对象是已经成长为容纳了更多暴力事件和无视法律的行为的现代美国西部，而不再是往日那个神秘的边缘地带。

《老无所依》的中心内容蕴含着一些科马克·麦卡锡一直所关注的最具煽动性的话题，而他已经在自己之前的10部小说中一一罗列出来了，如今已然成为经典：美国西部生活的全部方式以及那种以快节奏逼近的结局；在一个堕落的世界中，最后的荣耀和正义；正在进行的人性与邪恶的对抗；黑色喜剧与现代暴力；诱惑、生存和牺牲之间的相互作用；不段升级的混乱；对黑暗时期残存的爱和一线希望的感动……除此之外，麦卡锡还喜欢有复杂性格的人物和具象征意义的故事主题--这些都会在《老无所依》中得到延续，而且条理清晰足够给电影人一定的发挥空间，或扩充或丰富或扭曲他们的电影技能，以一种能够产生共鸣的讲故事方式，将文字方面的力量转移到惹人注目的画面和铿锵有力的语言上。如此一来，很难想象还有比科恩兄弟更合适的导演人选，也只有他们能够忠诚地将麦卡锡那种忧郁的智慧和赤裸的人性完全通过影像传达出来。科恩兄弟已经用一系列实际行动不断在美国电影工业中证明着自己，包括极具影响力的黑色经典喜剧《血迷宫》，以及随后而至的一系列具有创造力的电影传奇，有《抚养亚历桑纳》、《黑帮龙虎斗》、《巴顿·芬克》、《缺席的人》和《逃狱三王》，当然还有那部帮助哥俩获得奥斯卡奖的《冰血暴》。至于这部影片，科恩兄弟打算将麦卡锡那复杂、微妙、有层次以及大多时候都很滑稽的文字结合进他们自己独创的想象力中，他们坚信由此拍摄出来的作品不但引人注目，同时还会包含成打的动作场面。

科恩兄弟之所以会关注科马克·麦卡锡的小说，主要还得归功于制片人斯科特·鲁丁力荐的结果，伊桑· 科恩回忆道：“鲁丁把小说拿给我们，想看看我们感不感兴趣。结果我们都很喜欢这个故事，于是开始思考将它拍成电影的可能性。”乔尔·科恩补充说：“我们想把它制作得尽可能靠近动作电影，总的来说，这是一部有关追杀的故事，黑帮头子安东·齐格追杀卢埃林，然后是治安长官随后而至，为了达成一个目的，这里有许多身体方面的剧烈行为，对于同类型的电影来说，这种效果是非常有趣的。但故事真正吸引我们的，还是因为它推翻了这种类型作品所能带来的一切预期影响。”

【关于改编】

科恩兄弟决定亲自做编剧，将整个故事浓缩成一个紧张简洁、拥有戏剧结构、着重描述黑色幽默和互相交织在一起的人性秘密的剧本，主角卢埃林·摩斯在错误的时间出现在错误的地点，从一次失败的毒品交易现场发现了几千万美金，然后又出现了两个关系完全对立的男人跟踪他：一个是让人不寒而栗的变态杀手安东；另一个则是小镇中深奥难懂的治安长官贝尔……确实，科恩兄弟有理由相信，这部影片很可能把他们带到一个全新的电影领域中，乔尔·科恩说：“原著中有着大量的幽默成分--虽然还不足够多到让你将它称为是滑稽小说，故事本身当然是非常黑暗的，这是我们一直以来所遵循的特色之一，而且还很暴力、很血腥，所以这可能是我们制作过的最暴力的一部作品了，在这方面，我们都希望影片能够真实地反馈出原著小说的特色。”

整个剧本都对科马克·麦卡锡那独特的美国观念进行了一次全新的认识，它那急速的步调以及过于纯粹的黑色喜剧风格，都决定科恩兄弟必须要寻找电影工业中最一流的演员来完成这部作品。汤米·李· 琼斯就成为了治安长官贝尔这个角色的最佳人选，而且他还是个科马克·麦卡锡迷，小说一发行，他就在第一时间读过了，自然对里面讲述的那个故事痴迷不已，当他听到是科恩兄弟要将小说搬上大银幕时，更加难以抵制自己的兴奋之情了：“在当今美国，麦卡锡被评论界评为最有散文风格的流派学者，他的作品总是会对那些制作电影的人产生某种说不清道不明的吸引力。”另一位主演乔什·布洛林也是一个麦卡锡的忠实粉丝，和琼斯一样，他也是看剧本之前就读过小说了，布洛林表示：“那是我所读过的最让人惊奇、最暴力、也是最有本土气息的故事之一，即使它的线索是单一的直线性，但贵在结构处理上的推陈出新。我非常喜欢卢埃林、安东和贝尔之间组成那种平衡的三点关系，那种感觉就好像是看着同一个人的三种不同人格。”谈到剧本时，布洛林接着说：“科恩兄弟带给我们一个非常有感情、非常原始的故事，讲述的全部是人类有关对与错、诱惑与荣誉的权利和规则。”

乔什·布洛林饰演的是卢埃林·摩斯，一位兽医，当他决定拿走一笔用来买卖毒品的现金时，发现自己陷入了一个进退不能的窘境中，但是，他拿钱并不是因为贪婪，而是因为爱，布洛林说：“从卢埃林的观点出发，我认为这些事情之所以会发生，是因为他和妻子卡拉·吉恩之间的关系。卢埃林深爱着卡拉，所以希望利用这笔钱能带给她更好的生活，让她快乐、幸福--这是他的最终目标。”

在电影界声望颇高的西班牙演员贾维尔·巴尔登则成了扮演安东的不二人选，一个生活在边境的毒品世界、用心最为险恶的杀人凶手。巴尔登是三个人当中惟一一个在读剧本前从没看过小说的人，但是他演员的天性却嗅出了这个故事的出色之处，巴尔登说：“我认为，这是一个非常有力度的作品，满篇都是在说暴力或如何控制暴力或如何阻止暴力所形成的巨大漩涡，然后以一种正确的方式在这个世界存活。”

凯莉·麦克唐纳德 (Kelly Macdonald)饰演的是卢埃林年轻的妻子卡拉，而她本人也对剧本的优秀产生了巨大的反应，不仅仅是因为故事中的那些与人性有关的部分，还包括里面蕴含的幽默，她说：“我只是想说，剧本真的太有趣味性了，这些角色就这么活生生地从小说中走出来，都是那么地充满智慧，我实在没办法对这样一个角色说不。”</blockquote>
关于作者的书，很遗憾，在当当上并没有找到中文版有货。全部在缺货中。而对于更新的原著中文版，我想还要等等等吧。
<blockquote> <a href="http://www.amazon.com/exec/obidos/search-handle-url/102-6000673-3576933?%5Fencoding=UTF8&amp;search-type=ss&amp;index=books&amp;field-author=Cormac%20McCarthy">点这里去Amazon看看作者的书目</a></blockquote>
我的英语读这样的小说会是相当费劲的，不过读读计算机的书还是可以的。所以下面介绍两本新的Rails书籍。
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

//468x60, 仅图片，创建于 08-1-26

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//--></script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<h3>两本Rails新书</h3>
<img src="http://railser.cn/wp-content/uploads/2008/02/51rjkskmuel_aa240_.jpg" alt="Flexible Rails: Flex 3 on Rails 2" />
书名：Flexible Rails: Flex 3 on Rails 2
作者：Peter Armstrong
<a href="http://www.amazon.com/Flexible-Rails-Flex-2/dp/1933988509/ref=sr_1_9?ie=UTF8&amp;s=books&amp;qid=1202797795&amp;sr=1-9">Amazon地址</a>

可能我墨迹最多的就是这本书了，目前已经发售，而且代码的确是按照Rails2.0来编写的，是非常好的<font color="#ff6600">FLEX平台开发和Rails开发</font>结合的教程。目前完成了一个网站系统的建设和调试，讲解，在下一个网站开始前有自己的时间，所以首选必然是这本书。

小声的说，本站有能下载的连接。嘘~~~~，自己知道就行了，慢慢找吧

<img src="http://railser.cn/wp-content/uploads/2008/02/51w2gz6rlnl_aa240_.jpg" alt="RailsSpace: Building a Social Networking Website with Ruby on Rails (Addison-Wesley Professional Ruby Series)" />
书名：RailsSpace: Building a Social Networking Website with Ruby on Rails
系列：Addison-Wesley Professional Ruby Series
作者：Michael Hartl, Aurelius Prochazka
<a href="http://www.amazon.com/RailsSpace-Building-Networking-Addison-Wesley-Professional/dp/0321480791/ref=sr_1_6?ie=UTF8&amp;s=books&amp;qid=1202798163&amp;sr=1-6">Amazon地址</a>

相当想看的一本书，在<a href="http://railsspace.com/">官网</a> 可以看到 <a href="http://railsspace.com/15_restful_blogs/Ch15.pdf">第十五章：RESTful Blogs</a>。

现在学Rails的人越来越多，如果你刚入行不久，可以看看这本书，来熟悉Rails2.0的开发。

ps1：做了个读书的网站：<a href="http://www.wodushu.com.cn" target="_blank">我读书</a>，喜欢读小说的朋友去看吧。

ps2：我儿子在捣乱，现在他知道机箱上有好些按钮可以按，所以我写东西总会提心吊胆的怕他过来按一下关机或者重启键。所以他一旦有意识要去按，我就大叫：“抓走，抓走”。

<pre>
<embed src="http://www.yobo.com/flash/w/105/singlemusic.swf" FlashVars="P=GW|www.yobo.com|xmlUrl|12512|w|255|skin|07|autoPlay|1|volume|100" quality="high" bgcolor="#ffffff" width="255" height="108" id="single_song_player_12512" name="single_song_player_12512" align="middle" type="application/x-shockwave-flash"> </embed>
</pre>

里克：08年2曰12日
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

//468x60, 仅图片，创建于 08-1-26

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//--></script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2008-02-12 14:59:39</wp:post_date>
		<wp:post_date_gmt>2008-02-12 06:59:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cormac-mccarthy-border-trilogy-and-rails-books</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="books"><![CDATA[books]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
	</item>
	<item>
		<title>《东方的承诺》(Eastern Promises)</title>
		<link>http://railser.cn/blog/eastern-promises</link>
		<pubDate>Fri, 15 Feb 2008 04:16:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/eastern-promises</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

昨天晚上，准确的说是夜里，看了这部电影：《东方的承诺》(Eastern Promises)。一部很独特的片子所以决定在写<font color="#ff6600">Active Merchant</font>插件前写点关于这个电影的文字。
<p style="text-align: center"><a href="http://railser.cn/wp-content/uploads/2008/02/post-1139164-1197459194ipb.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/post-1139164-1197459194ipb.jpg" alt="Eastern Promises" height="381" width="261" /></a></p>
<span style="color: blue">◎译　　名　</span>巨塔杀机/东方的承诺
<span style="color: blue">◎片　　名　</span>Eastern Promises
<span style="color: blue">◎年　　代　</span>2007
<span style="color: blue">◎国　　家　</span>英国/加拿大/美国
<span style="color: blue">◎类　　别　</span>剧情/神秘/惊悚

<span style="color: blue">◎导　　演　</span>大卫·柯南伯格 David Cronenberg
<span style="color: blue">◎主　　演　</span>Josef Altin gem Ekrem
Mina E. Mina gem Azim
Aleksandar Mikic gem Soyka
Sarah-Jeanne Labrosse gem Tatiana
Lalita Ahmed gem Customer
Badi Uzzaman gem Chemist
娜奥米·沃茨 Naomi Watts gem Anna
Do a Croll gem Nurse (as Dona Croll)
Raza Jaffrey gem Doctor Aziz
Sinéad Cusack gem Helen
Jerzy Skolimowski gem Stepan
Tatiana Maslany gem Tatiana's Voice (voice)
维果·莫特森 Viggo Mortensen gem Nikolai
文森特·卡塞尔 Vincent Cassel gem Kirill
阿明·缪勒-斯塔尔 Armin Mueller-Stahl gem Semyon
<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
/* 468x60, 仅图片，创建于 08-1-26 */
google_ad_slot = "8168667438";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</pre>
<h3>一、性，暴力</h3>
这又是一部关于暴力的影片，最近看了太多动作片，所以会感到这部片子在处理动作戏的不同。用语言和暗示来交代无必要的暴力场景，而将镜头都集中在人物和故事的描述上。

<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_002203576.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_002203576.jpg" alt="Eastern Promises" /></a>
<h3>二、黑帮</h3>
<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_000460251.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_000460251.jpg" alt="Eastern Promises" /></a>

这样的造型，在任何一个国家都会被认为是坏人。儿子基里尔（文森特·卡塞尔扮）表面放浪不羁，但是内心却观察细致，同时也怨恨无法摆脱的命运。从出生就注定是一个残忍的人。
司机，助手，尼科莱（维果·莫特森扮），不得不说他“阿拉贡”人皇的形象实在太吸引我，以致开始看片子的时候竟然在找那个是他？？（ps：我没看《暴力史》呢）
强壮，彪悍，在后面更是精彩，看来导演在拍《暴力史》的时候，还是遗憾没有完全拍出这个演员的能量，这次是个完美的补偿。

<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_000637970.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_000637970.jpg" alt="Eastern Promises" /></a>

记得《给爸爸的一封信》里，盒饭盖子里面写的两个字吧：“坏人”。对啊，上面这位是坏人，伦敦一个有名的黑帮头头，一副教父模样。

<a href="http://www.imdb.com/name/nm0000090/">imdb:Armin Mueller-Stahl</a>

记得心情不好的时候竟然找《丑闻笔记》，看了一会就觉得浑身发冷，表面和蔼的人，竟然是恐怖的根源。
<h3>三、固执</h3>
<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_001650690.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_001650690.jpg" alt="Eastern Promises" /></a>

娜奥米·沃茨，影评里说是一个“固执的英国人”。我倒觉得她的固执是有原因的：因为孩子。她那个自称KGB的叔叔说的是事实，但是确无道理。但是事实还是存在每个人的心里。

说道那个“不知趣”叔叔，我感觉肯定是种族的问题，中国北方人的我，肯定不会不知时务的“硬壳”这种事情，虽然看不过去，但是绝不会勉强自己。不过那位过气的KGB的坚持，倒是故事的转折。而且也被送到了高级酒店。尼科莱的评价是：他是个有经验的人。呵呵
<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
/* 468x60, 仅图片，创建于 08-1-26 */
google_ad_slot = "8168667438";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</pre>
<h3>四、伪善？</h3>
<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_000609025.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_000609025.jpg" alt="Eastern Promises" /></a>

古时候人们战斗，右手持剑，左手持盾。左手杀人，右手护人。人的一半是魔鬼，一半就定是天使或者上帝。贞德在临死前，自己区分不了自己在和上帝还是在和撒旦对话。人真的会变得伪善吗？我觉得Semyon在对待面前孩子，和第一次见到沃茨的时候，是善良的老人。人说：对面安静的老人，曾经是个鬼子兵。
<h3>五、利用</h3>
<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004531985.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004531985.jpg" alt="Eastern Promises" /></a>

Semyon利用了最可靠的尼科莱，他也不用知道结局，但是他关心的结局是谁会活着。而故事的结局就是他对未来的这一点忽视。
<h3>六、纹身</h3>
<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004342004.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004342004.jpg" alt="Eastern Promises" /></a>

尼科莱赢得了纹身，有了打入组织内部的通行证。也有了做替死鬼的机会。又是生与死的故事。
<h3>七、搏斗</h3>
见过的最生猛的搏斗，尼科莱全身赤裸，拿刀互捅。他可以去演007或者继续他“人皇”的角色了，因为没人更适合这样的威武。

<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004714292.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004714292.thumbnail.jpg" alt="Eastern Promises" /></a> <a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004778940.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004778940.thumbnail.jpg" alt="Eastern Promises" /></a> <a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004852472.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_004852472.thumbnail.jpg" alt="Eastern Promises" /></a>

如果你接受不了这样的残酷，请在1小时16分钟后跳过。慎重哦。因为实在太血腥。
<h3>八、孩子</h3>
<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_005342211.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_005342211.thumbnail.jpg" alt="Eastern Promises" /></a>

基里尔抱着这个不该来到人世的孩子痛哭不止。因为他想到自己。

<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_005352638.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_005352638.thumbnail.jpg" alt="Eastern Promises" /></a>

孩子的平安让尼科莱的一切付出有了意义。谁能阻挡一个孩子的能量？孩子是故事的关键。
<h3>结束了</h3>
基里尔有机会坐上老大的位置，尼科莱可以得到组织的重要情报。

片子里的大多数人都将俄罗斯味的英语，而里面没有一个真正的俄国人。我觉得《无极》里让张东健和真田广之讲中文，真是一种超前啊，因为后来见到了法国皇室也讲英文呢。

以后可能回去写写剧本吧。比如，一个程序员也得到了一本日记。嘻嘻。

启示：

“生命应该得到尊重”。

“故事在结局时开始”。

<a href="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_005689850.jpg" title="Eastern Promises"><img src="http://railser.cn/wp-content/uploads/2008/02/easternpromisesdvdripxvid-diamondavi_005689850.jpg" alt="Eastern Promises" /></a>

里克：2008年2月15日，情人节后一天。
<pre>
<script type="text/javascript"><!--
google_ad_client = "pub-7545275883969710";
/* 468x60, 仅图片，创建于 08-1-26 */
google_ad_slot = "8168667438";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2008-02-15 12:16:28</wp:post_date>
		<wp:post_date_gmt>2008-02-15 04:16:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>eastern-promises</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="movie"><![CDATA[movie]]></category>
	</item>
	<item>
		<title>&#8220;Twitterverse Awarded Mashup of the Day&#8221;</title>
		<link>http://railser.cn/blog/sites-twitter-rails-and-mashup</link>
		<pubDate>Wed, 20 Feb 2008 05:25:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/sites-twitter-rails-and-mashup</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

看标题，包含了本篇的两个意思，一个是要介绍一些<font color="#ff6600">网站</font>，一个是要关注<font color="#ff6600">Mashup</font>。

对于2.0时代的互联网，时间是很紧迫的，而各种应用，虽然看着很简单，但是很好玩。原因在于，大家还是重视博客了，重视开放api和Mashup了，所以，原来给人做网站的我，被<font color="#ff6600">逼</font>迫的开始<font color="#ff6600">2</font>.0了。
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<h3>foodbuzz.com</h3>
<a href="http://railser.cn/archives/sites-twitter-rails-and-mashup/foodbuzzcom/" rel="attachment wp-att-90" title="foodbuzz.com"><img src="http://railser.cn/wp-content/uploads/2008/02/foodbuzz.JPG" alt="foodbuzz.com" border="0" /></a>

foodbuzz.com是一个美食网站，介绍各种食品，餐馆，食谱，还有用户点评功能，加上google地图的使用，使网站比较2.0

不过首先发现这个网站，是因为它是一个Rails网站，在<a href="http://4rails.cn" title="4Rails.cn" target="_blank">4rails.cn</a>上还有它的招聘信息的转载:<a href="http://4rails.cn/jobs/7" target="_blank">Web Developer/Software Engineer (Ruby on Rails)</a>

Link:<a href="http://www.foodbuzz.com/" target="_blank">foodbuzz.com</a>
<h3>mr6.cc</h3>
<a href="http://mr6.cc/" title="mr6.cc"><img src="http://railser.cn/wp-content/uploads/2008/02/mr6.jpg" alt="mr6.cc" border="0" /></a>

web2.0的核心是传播？从前人们习惯阅读，现在人们习惯分享。

这是一个分享知识的专业网站，从中，“别有用心”的人会发现自己想要的。

Link:<a href="http://mr6.cc/" target="_blank">mr6.cc</a>
<h3>emilychang.com</h3>
<a href="http://emilychang.com/" title="emilychang"><img src="http://railser.cn/wp-content/uploads/2008/02/chang.jpg" alt="emilychang" border="0" /></a>

又是一个分享个人收藏和资讯的网站，主人一是漂亮，二是专业，网站里可以找到很多新鲜的东西。比如标题提到的那个网站：<a href="http://twitterverse.com">Twitterverse.com </a>。
<blockquote> <a href="http://www.twitterverse.com/">Twitterverse</a> is a project by <a href="http://ideacodes.com/">Ideacodes</a>.  While we're fans of <a href="http://twitter.com/">Twitter</a>, we're not officially affiliated with them in any way. We use the data that is made available in Twitter's public timeline. All content is subject to its original copyright as indicated by <a href="http://twitter.com/tos">Twitter's terms of service</a>.</blockquote>
Link:<a href="http://emilychang.com/" target="_blank">emilychang.com</a>
<h3>zikii.com</h3>
最后要提的一个网站，名字虽然比ziki多了个i，但是内容完全不一样。这是一个<font color="#ff6600">朱德庸式</font>的网站！
<blockquote> 没有交易，就没有“商业性”——这是在做工具型网站一定要切记的一条。

怀才就象怀孕,时间长了才能看出来 ^-^

在一个普遍创新水平不高的时候，一个比较认真的抄袭也能产生巨大力量

钱不是问题，问题是没钱</blockquote>
<a href="http://zikii.com/" title="zikii.com"><img src="http://railser.cn/wp-content/uploads/2008/02/zikii.jpg" alt="zikii.com" border="0" /></a>

另：这是一个Rails网站。

Link:<a href="http://zikii.com/" target="_blank">zikii.com</a>

今天就先到这里吧，给所有来看博客的朋友拜个晚年，祝大家晚年幸福！

里克：2008年2月20日
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2008-02-20 13:25:16</wp:post_date>
		<wp:post_date_gmt>2008-02-20 05:25:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sites-twitter-rails-and-mashup</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="mashup"><![CDATA[mashup]]></category>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[daisy]]></wp:comment_author>
			<wp:comment_author_email>beendaisy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.82.42.75</wp:comment_author_IP>
			<wp:comment_date>2008-04-21 20:03:18</wp:comment_date>
			<wp:comment_date_gmt>2008-04-21 12:03:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[博主,为什么说它是朱德庸式的网站呢?:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>guxing203@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.88.46.231</wp:comment_author_IP>
			<wp:comment_date>2008-04-23 09:44:00</wp:comment_date>
			<wp:comment_date_gmt>2008-04-23 01:44:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[因为很有意思啊，就突然想起了朱德庸]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>写在80届奥斯卡奖项揭晓之前</title>
		<link>http://railser.cn/blog/before-80-oscar</link>
		<pubDate>Sun, 24 Feb 2008 13:45:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/before-80-oscar</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面

80届奥斯卡要发小金人了，一大帮人要走红地毯了。这两年看了太多太多电影，所以对这届奥斯卡无比的关注。不过我不喜欢去想哪个电影和演员最好。我会给每一个看过的片子和喜欢的演员有一个评价。

我是一个喜欢电影的程序员。

所以我做了一些网站，注册了这些演员的域名。目前放出来9个网站，感觉还算满意。

<a href="http://johnnydepp.org.cn/"><img src="http://johnnydepp.org.cn/johnnydepp.jpg" alt="johnny depp" title="johnny depp" border="0" /></a> <a href="http://viggomortensen.com.cn/"><img src="http://viggomortensen.com.cn/viggomortensen.jpg" alt="viggo mortensen" title="viggo mortensen" border="0" /></a> <a href="http://danieldaylewis.cn/"><img src="http://danieldaylewis.cn/danieldaylewis.jpg" alt="daniel day-lewis" title="daniel day-lewis" border="0" /></a> <a href="http://ellenpage.cn/"><img src="http://ellenpage.cn/ellenpage.jpg" alt="ellen page" title="ellen page" border="0" /></a> <a href="http://philiphoffman.cn/"><img src="http://philiphoffman.cn/philiphoffman.jpg" alt="philip hoffman" title="philip hoffman" border="0" /></a>

<a href="http://cateblanchett.cn/"><img src="http://cateblanchett.cn/cateblanchett.jpg" alt="cate blanchett" title="cate blanchett" border="0" /></a> <a href="http://tommyleejones.cn/"><img src="http://tommyleejones.cn/tommyleejones.jpg" alt="tommy lee jones" title="tommy lee jones" border="0" /></a> <a href="http://saoirseronan.cn/"><img src="http://saoirseronan.cn/saoirseronan.jpg" alt="saoirse ronan" title="saoirse ronan" border="0" /></a> <a href="http://georgeclooney.org.cn/"><img src="http://georgeclooney.org.cn/georgeclooney.jpg" alt="george clooney" title="george clooney" border="0" /></a>
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<h3>x203.cn</h3>
这是一个系列网站的管理系统的计划。每个域名的网站，除了各自的不同的google co-op代码和统计代码，其他均由系统统一生成和互相关联，这样，所有的网站之间，都会产生不规则的关联。

这种想法来自曾经工作过的deyeb项目。

Link：<a href="http://x203.cn">x203.cn</a>
<h3>google co-op</h3>
<a href="http://x203.cn">x203.cn</a>下面的系列网站，都有一个搜索功能，采用的是google的co-op。

google 的 co-op，可以使你在自己的网站上，实现google搜索，并且通过对搜索结果的定义，实现个性化的搜索。

比如，在co-op中，你可以定义搜索结果的来源：结果仅来自一些指定的网站，也可以将指定网站的搜索结果提前。当然，你还可以邀请别人和你一起管理。
<img src="http://railser.cn/wp-content/uploads/2008/02/11.jpg" alt="google co-op" />

你还可以把不喜欢的网站结果排除在外。

<img src="http://railser.cn/wp-content/uploads/2008/02/21.jpg" alt="google co-op" />

对于众多的搜索结果，你可以定义些提炼关键字，引导你的用户去点击，以得到更加精准的结果。

<img src="http://railser.cn/wp-content/uploads/2008/02/31.jpg" alt="google co-op" />

这并不是一篇详细介绍co-op的文章，而且提到这个也有点晚了。co-op告诉我们的，是google如何实现的搜索个性化的。这种个性化，可以引导你的客户，更加关注你的信息，屏蔽其他的信息，在搜索中对客户进行暗示。

<a href="http://johnnydepp.org.cn/">http://johnnydepp.org.cn/</a> 这个全明星搜索中，结果更加偏向“电影 小说 dvd 下载 交友 图片”这些关键字，大家可以去试验一下。

<img src="http://railser.cn/wp-content/uploads/2008/02/41.jpg" alt="google co-op" />
<h3>个性化搜索与社会化搜索</h3>
说到社会化搜索和个性化搜索，我并没有多少发言权。在一萌工作的一年，才知道了这些。并且在不断的设计和讲解中，自己也加深了理解。

上面提到的co-op，是个人倾向的搜索设计，而将这些倾向结合在一个概率系统里，就会是一种社会化体现，类似digg，书签网站所产生的效果。大家通过对各自搜索的定义，产生一个社区的效果，而社区会将这个结果反应给大众。于是大众就会得到更加准确的消息。这也是deyeb项目追求的目标。

离开这个项目已经半年多了，至今仍觉得在这个项目工作，收益很多。尤其在给别人不断讲解的过程中，自己也体会更深。

ps：我更新了<a href="http://railser.cn/me">谁是里克</a>栏目，算是听取大家的劝告吧。
人最大的敌人就是自己。

感谢订阅了博客的朋友，我写的不好，但是写的时候，我是很认真的。技术上，是一个Rails程序员的学习笔记，其他，是一个30岁男人 de 只言片语。说不定什么时候不写程序了，就去写恐怖小说吧。
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2008-02-24 21:45:47</wp:post_date>
		<wp:post_date_gmt>2008-02-24 13:45:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>before-80-oscar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="co-op"><![CDATA[co-op]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="oscar"><![CDATA[oscar]]></category>
	</item>
	<item>
		<title>Rails开发中遇到的问题和purchase order的商业逻辑</title>
		<link>http://railser.cn/blog/some-advice-when-u-are-rails-programmer</link>
		<pubDate>Wed, 19 Nov 2008 17:19:57 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=340</guid>
		<description></description>
		<content:encoded><![CDATA[1 关于商业资料，可存可不存的。一律存到数据库上。这样一旦以后客人有问题了，就能帮上大用处。
2 信用卡密码只能存后4位。和持卡人姓名。其它cvv 过期时间等一律不可以存。否则负法律责任。
3 表格的 title 和字段的 label 一定要大写第一个字母。这在英文国家很重要。
4 有一些自定义字段的值，要确保value和name相同。比如它的name是 purchase_orders 确保value是 Purchase Orders
5 随时要记得金钱的格式化

purchase order的商业逻辑是这样的，客人注册的时候填写了purchase order，应该在后台查看是否已经存在这个 purchase order。如果存在那么就在 purchase order 的 member 里面增加一个。如果不存在就创建一条新的。应该是一个 purchase order 对应多个 member。因为很可能多个 member 属于同一个公司。他们参加一个会议只用一样的 purchase order。使用 purchase order 付费的 member 默认的状态是 pengding 他的支付状态也是 pending。那么 PO 被确认之后，相关会员的支付状态改成 active 。会员的状态可以改也可以不改成active。PO的相信页面应该列出来 Payments applied to this PO 和 Members coverd by this PO。

关于版本说明。Version: 2.0.0r0
2 -> Major version
0 -> Minor version
0 -> Minor minor version
r0 -> release number
release number = any bug fixes, minor cosmetic changes
when you increment major/minor/minor minor version
you reset release to 0
minor  minor -> small feature addition
minor -> significant feature additions
major -> significant changes that may have backward compatibility issues
把版本信息写到 enviroment.rb 就像 TRS_VERSION = '3.3.4r1'

最后一个好东西，当客人遇到bug的时候自动发送到你的email里面。
<pre name="code" class="ruby">
ExceptionNotifier.exception_recipients = %w(clinet-notifications@clientsystem.com)
ExceptionNotifier.sender_address = %("Application Error" &lt;sysadmin@yourserver.com&gt;)
ExceptionNotifier.email_prefix = "[SITE #{SITE_VERSION}] "
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2008-11-19 17:19:57</wp:post_date>
		<wp:post_date_gmt>2008-11-19 17:19:57</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>some-advice-when-u-are-rails-programmer</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>08年2月整理的Flex和Rails消息</title>
		<link>http://railser.cn/blog/flex-and-rails-in-feb-2008</link>
		<pubDate>Sun, 02 Mar 2008 05:02:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/flex-and-rails-in-feb-2008</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

终于忙完了手头的杂事，开始专心的看看Rails文章。看的第一篇竟然是Flex相关的，难道这个博客真的要专门讨论Flex和Rails吗？

之前翻译和整理的三篇文章，<a href="http://railser.cn/archives/publish-subscribe-messaging-with-flex-and-rails" target="_blank">在Flex和Rails上实现发布/订阅的消息通信</a> ，<a href="http://railser.cn/archives/flash-remoting-for-rails-tutorial-chinese" target="_blank">在Rails中使用Flash Remoting中文教程</a> ，<a href="http://railser.cn/archives/flex-on-rails-preview" target="_blank">Flex与Rails的性感结合</a>，晒一下，下面是整个二月份积攒的一些东西，整理发布一下。

我发现儿子越来越好玩了。而且今天给博客换了皮肤，3月份来了，蛮新鲜的。

<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<h2>1、Flex Builder 3 正式发售</h2>
link:<a href="http://www.adobe.com/products/flex/">http://www.adobe.com/products/flex/</a>
<h2>2、在Flash Player中运行Ruby代码</h2>
<blockquote> 08年2月26日InfoWorld.com报道：Adobe的一个研究项目正致力于在Flash Player中运行其他语言的代码。该项目中，像C和C++，Java，Python，Ruby这这样的编程语言都可以编译到ActionScript中。这样可以使这些语言编写的组件，加载一些大型项目中，实现代码的跨应用平台。

比如，目前的FlashPaper就可以读取PDF文档并进行展示。

目前，所有的代码都使用ActiobScript或低一级别的byte code编写，在Flash Player中，所有的都被编译成SWF byte code，它叫做ActionScript byte code。</blockquote>
link:<a href="http://www.infoworld.com/article/08/02/26/adobe-player_1.html">http://www.infoworld.com/article/08/02/26/adobe-player_1.html</a>
<h2>3、验证Ruby的正则表达式</h2>
如果你需要验证一下自己写的Ruby正则是否正确，可以用下面这个网站验证一下。我觉得重要的是这个网站下面的一些提示。

link:<a href="http://www.rubular.com/">http://www.rubular.com/</a>
<h2>4、新增了两个网站连接</h2>
都是关于Flex开发的博客，本篇文章写的时候一直在看 <a href="http://blog.vixiom.com/">http://blog.vixiom.com/</a> 和这两个博客。

The Official Flex User Group for Orange County, California.

Link:<a href="http://www.ocflex.com/">http://www.ocflex.com/</a>

Ted On Flex

link:<a href="http://www.onflex.org/">http://www.onflex.org/</a>
<h2>5、谁在使用Rails工作</h2>
我注册了，所以目前统计在<a href="http://www.workingwithrails.com/browse/people/country/China">中国有92个Rails开发人员</a>，而且大多都 “Available for hire”。呵呵。我也是

link:<a href="http://www.workingwithrails.com/">http://www.workingwithrails.com/</a>
<h2>6、Rails Engines</h2>
引自：<a href="http://blog.uiparty.com/jouy/">全日志博客</a>
<blockquote> Rails engines是增强rails自身插件的框架。它让共享controller、helper、models、public、routes和迁移（migrations ）变得更简单。

它使整大块的插件进行功能融入现有应用无任何影响你的现有代码。或者,你可以用Rails engines插件分享最小、最简单的资源；包括通常迁移、javascripts、样式或图片。</blockquote>
Link:<a href="http://www.rails-engines.org/">http://www.rails-engines.org/</a>
<h2>7、使你的Rails应用更安全</h2>
文章描述了几个Rails应用中的安全问题及如何解决，其中的Sql注入的问题在前几天的面试中碰到过。如果有要面试Rails工作的朋友，可以选择浏览一下这篇文章。

Link:<a href="http://manuals.rubyonrails.com/read/book/8">http://manuals.rubyonrails.com/read/book/8</a>
<h2>8、Substruct：开源的Rails电子商务项目</h2>
在<a href="http://www.caiwangqin.com/post/256">Caiwangqin's Blog中已经提到了这个项目</a>，而且在 <a href="http://chinaonrails.com/topic/view/967.html">http://chinaonrails.com/topic/view/967.html</a> 中还能看到大家的讨论。
<pre>
<blockquote>
* 带有博客功能的简易内容管理系统
    o 在线管理网站
* 使用 Authorize.net and PayPal (需自有帐户) 结算
* 商品和订单管理
    o 在线跟中库存
    o 可以按分钟查看销售报告
    o <a href="http://code.google.com/p/substruct/wiki/FulfillmentIntegration">Integrate with fulfillment houses via XML and web services </a>
* 极好的管理界面
    o 内容的发布与管理
    o Create, maintain, void orders（啥？）
    o 回答浏览者提问</blockquote></pre>
Link:<a href="http://code.google.com/p/substruct/">http://code.google.com/p/substruct/</a>

<h2>9、Ruby 1.9</h2>

Yukihiro Matsumoto（松本行弘）主讲，解释各种Ruby版本之间的差别和介绍Ruby1.9的特性。

<pre>
<object width="425" height="355"><param name="movie" value="http://www.youtube.com/v/oEkJvvGEtB4"></param><param name="wmode" value="transparent"></param><embed src="http://www.youtube.com/v/oEkJvvGEtB4" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"></embed></object>
</pre>

参考：<a href="http://column.bokee.com/19333.html">Ruby的哲学——与Yukihiro Matsumoto的对话</a>

ps1：翻译也是一种写作
ps2：感谢wjp提供的资料，虽然这个家伙死活不加入Railser.cn，不过我还是咒怨他工作顺利。

里克，2008年3月2日
<pre>
<script type="text/javascript"><!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2008-03-02 13:02:24</wp:post_date>
		<wp:post_date_gmt>2008-03-02 05:02:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flex-and-rails-in-feb-2008</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
	</item>
	<item>
		<title>举起手来！如果你也喜欢“三块石”</title>
		<link>http://railser.cn/blog/san-kuai-shi</link>
		<pubDate>Fri, 07 Mar 2008 02:30:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/san-kuai-shi</guid>
		<description></description>
		<content:encoded><![CDATA[这个标题很有编程的味道啊。当初听到他的歌，还是公司的一个家伙 siqibailie 的要给大家放，放的是《啥也不是》。编曲很有意思，开头和结束都用了化成灰都能听出来的《超级玛丽》的曲子。

那阵子写程序的时候，总爱听一帮黑人的R&amp;B，RAP，听了这位兄台的歌，哇靠，这个亲切啊。而且歌词相当的生猛，让人豁然发现，俺们东北这嘎达，也是R&amp;B的摇篮啊！

如果你不介意，我将贴贴他的歌词，不喜勿看！
<blockquote>《穷家子弟》，演唱：三块石

扒开眼睛起被窝看表已经十点多
哈欠一个连一个 头发乱地象鸡窝
今儿还得那么过？没班没有课？
就这么半死不拉活地浑浑噩噩
兴奋地上趟厕所 把各个捣吃利索
对个镜子劈个分头 恩 还算是个三等帅哥
揣好毕业证身份证还得出去学摸 学摸饿不死地工作
一出门碰俩大盖帽给俺造一楞 不是咱犯啥事怕他查俺暂住证
听说整不好就给<font color="#008080">扔旮旯子</font>筛两年沙子再往家遣送
不知有没有那严重 先做做思想活动
喵悄地走 我<font color="#33cccc">履着电线杆儿</font> 发现这上面的招聘信息一篇又一篇
端盘子刷碗当门童当保安呢 还有要男公关 拉倒吧咱体格太干巴
求职者聚堆的地方还是招聘会
那人乌殃地挤挤插插好象多国部队
可我说各位本硕博地兄弟姐妹
你们找活都困难我这熊色不白费
唉 我就奇了怪了 <font color="#99cc00">研究生都歇菜</font>了
整地象超级女生似的刷刷全淘汰了
你们这帮用人单位是不大母牛不下崽儿——牛B坏了？
瞅瞅俺这毕业证 就是个卡戳地纸壳子还有啥用
给谁看谁不吊 要是擦鼻涕开腚 还拉拉巴巴<font color="#99ccff">刚刚硬</font>
真是血招没有就这祟命
真想脑瓜插根笤帚迷子把自己卖掉 可打了八五折了还是没人要
这帮老油条是当面一套背后一套 没准给俺倒卖好几手还帮人数钞票
欠一屁股疾患是越来越多兜里子儿越来越少
肚子呜嗷乱叫咋也添不饱 可老天爷舍不得饿死瞎家雀
终于有公司让我面试咋就那么巧
俺学过计算机 天生就得IT
你T俺一身脚印子也没关系 俺有对工作火热地心
只要您给俺试用期 （得得 我一月给你一千买你消停会啊）
有钱你别装屁呀没钱别没志气呀
站在那风雨里呀 等待 等待
上不了天下不了地呀 夹在当间该去那里呀
<font color="#ff6600">如来耶酥毛主席呀</font> HELP ME HELP ME
上班第一天我得把自己到吃成正经人样小头屡溜直地小皮鞋擦赠亮
一大早我就来了准备正要去签到 冷丁发现前台漂亮小姐正在对我笑
OH MY GOD不小心中招 喀吧把我电到感觉头重脚飘飘地我心里乱七八糟
一寻思这地方还真挺好 估计IT白领姐姐们长地都这么劲道
我边走边臭美 无法自拔的陶醉 晕的呼迷个登地来到我的共位
突然一个晴天霹雳让我如噩梦初睡 原来这满屋子都是哥斯拉地姐妹
我顿时领悟老总地决策 原来全公司美女就两个一个放在门口接客
一个放在他办公室用来个各打发寂寞
我地同事们哪全都文邹邹 一个人卡个小眼镜<font color="#ffcc99">艮揪揪
</font>除了看着有学问还利于<font color="#0000ff">撒吗亮妞</font> 说话都一股捂巴味办事狗狗嗖嗖
全都一身名牌阿笛耐克一道勾 还老牛哄地显摆跟我BB娄娄
俺穿大棉勿路 就笑话俺土 你们懂个屁这叫复古
每当这帮爷在那吃香喝辣 只有我们这样的孙子在干这干那
完了还指手画脚 这噶那噶比比画画 简直就是一帮TM地主资本家
每周六都让俺都加班 可是工资不给加你不加就<font color="#ffcc00">不加呗还欠半拉月不发</font>
哎呀妈呀 白搭就白搭 俺这样地小人物 就消停眯着吧
每当见到领导俺要列开大嘴岔子笑 其实俺这心里已经痛哭地鼻涕拉瞎
于是我要给老总一个最后警告 再不给俺开工资我就现场直播上吊
上吊未遂就割腕在噎一瓶子安眠药 我要他当场拍板给俺也裂张支票
后来仔细一寻思这事有点不妙 万一他告我勒索我成了被告
给俺扔八里铺子判个3 5年 俺可受不了 大好青春浪费我上哪找
算了算了 爷就是爷 就让你嚣张吧不跟你计较
一个兄弟告诉你小子是不是<font color="#99cc00">有点太吊</font> 在人家手下干活你就能挣几毛是几毛
主仆关系你永远改变不了 <font color="#008080">咱是出来卖地就得任凭人家搞</font>
有钱你别装屁呀没钱别没志气呀
站在那风雨里呀 等待 等待
上不了天下不了地呀 夹在当间该去那里呀
如来耶酥毛主席呀 HELP ME HELP ME
俺不远万里 来到城里撇下了家里那两垧苞米
俺进过国贸 睡过地窖 你却说俺只是个摩登山炮
城市里错综复杂人们关系微妙 象个大网把人套里你跑也跑不掉
你们玩帅耍狠 你们有资本 我们忍忍忍 只求过的安稳
其实谁都是人你也不要太猖狂 你说都是本地狐狸跟我装啥大尾巴狼
你生的地方好不说明你就比我强 COME ON 一起高呼 <font color="#ff6600">咱们山炮有力量</font>
生于这个年代的这一代我们惆怅 在这没硝烟的战场牺牲惨烈悲壮
不知未来是搬砖头子还是伺候瓦匠我的都市氓流子生涯继续动荡
风当笤帚月当灯 狗弹琵琶猪吹笙孩子啃炕沿 小米加线连
苞米茬子对凉水馒头蘸咸盐 MONEY MONEY 我需要钱！！！！！~~~！
（哎 上班时间不许唱HIP-POP 这月奖金没了啊！~~~~~~~~~~SHIT！！~！）</blockquote>
<a href="http://x203.cn/qiongjiazidi.mp3">点击下载这首歌的MP3</a>

下面是《大大学校》的flash
<pre>
<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7,0,19,0" width="550" height="300">
  <param name="movie" value="http://railser.cn/wp-content/uploads/2008/03/play.swf" />
  <param name="quality" value="high" />
  <embed src="http://railser.cn/wp-content/uploads/2008/03/play.swf" quality="high" pluginspage="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" width="550" height="300"></embed>
</object>
</pre>
昨天晚上看完一帮资料，开始查了下他的歌，但是都没找到像样听歌的网站，而且连介绍都没有。不过管他“三块石”是谁呢？你太有才了！
<pre>
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">

</script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2008-03-07 10:30:12</wp:post_date>
		<wp:post_date_gmt>2008-03-07 02:30:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>san-kuai-shi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="%e4%b8%89%e5%9d%97%e7%9f%b3"><![CDATA[三块石]]></category>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://x203.cn/qiongjiazidi.mp3
6268596
audio/mpeg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IM的集成开发</title>
		<link>http://railser.cn/blog/im-integration</link>
		<pubDate>Fri, 07 Mar 2008 03:54:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/im-integration</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面 ：

这篇文章准备了挺长时间，因为在IM集成开发上是个新手，所以需要看狠多资料来理解各种概念，还在在自己的机器上做一下试验。下面就是对一些资料的笔记总结。

非常感谢分享自己开发经验的朋友。

第一部分：XMPP，第二部分：XMPP4R，第三部分：如何实现IM集成开发的探讨。本篇主体来自rubyfleebie.com几篇非常好的文章。
<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<h2>第一部分：XMPP</h2>
1、twiter带来了什么？

twitter已经红了很长时间，而且国内国外的跟风网站和fans已经出来许多，前一篇博客里提到的<a href="http://twitterverse.com/">Twitterverse.com</a>，就是一个fans站。如果你之前和我一样对twitter了解很少，可以看看下面的连接，是对twitter的解释。

link：<a href="http://baike.baidu.com/view/843376.htm">http://baike.baidu.com/view/843376.htm</a>

twitter的亮点，以及效仿网站 的主要技术，就是IM功能集成到项目中。比如<a href="http://www.9fav.com" target="_blank">9fav.com</a>，向qq里发去一条网址，就会自动加到个人的网址收藏夹中。

2、XMPP

现在该是XMPP登场了。XMPP是eXtensible Messaging and Presence Protocol（可扩展消息处理现场协议）的缩写，使用该协议，可以以XML格式进行消息传递。

link:<a href="http://baike.baidu.com/view/189676.htm" target="_blank">http://baike.baidu.com/view/189676.htm</a>

XMPP的前身是<a href="http://baike.baidu.com/view/188363.htm" target="_blank">Jabber</a>，一个开源形式组织产生的网络即时通信协议。Jabber的开源，使得你可以使用Jabber客户端，如<a href="http://www.pidgin.im/" target="_blank">Pidgin</a>，<a href="http://www.igniterealtime.org/projects/spark/index.jsp" target="_blank">Spark</a>，<a href="http://www.google.com/talk/" target="_blank">Google talk</a>（其实Gtalk不是Jabber客户端），<a href="http://www.gajim.org/" target="_blank">Gajim</a>，登陆Jabber服务器，或者登陆你自己搭建的服务器（下一篇文章将介绍）。常听别人说可以把多个聊天软件集成到一起吧。其实原理就是使用Jabber客户端，登陆到Jabber服务器，Jabber服务器可以与其他的聊天服务器进行沟通，比如MSN，Gtalk，AIM等，这样你就可以在自己的Jabber客户端中与他们进行联系了。Server-to-server是Jabber架构的重要功能！

下图是我连接自己的机器（我自己建的Jabber服务器），然后集成了msn和gtalk的用户过来后的界面。
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/1.gif" alt="spark截图" /></p>
在<a href="http://www.jabber.org/im-services">这里</a>，列出了公开的Jabber服务器，大家可以登陆试试看。

3、XML的意义：Streams 和 Stanzas

在开始的部分，介绍一下<a href="http://www.rubyfleebie.com/im-integration-with-xmpp4r" target="_blank">原文</a>的<a href="http://docs.google.com/View?docid=dhf86kr9_188gmpnw5hf" target="_blank">另一款中文翻译</a>，这篇文章对于快速的学习IM集成开发有很大的帮助，学习的朋友建议看一下。

下面是对那篇翻译的引用，作者：<a href="http://iceskysl.1sters.com/">IceskYsl</a>

在Jabber的消息交换过程中，有两种概念比较重要的是Streams 和 Stanzas。
Streams 是Jabber客户端和其服务器之间的联通、交换消息的容器（例如GoogleTalk和gmail.com )，以 XML格式的&lt;stream&gt;开始，以&lt;/stream&gt;结束。而两者之间交换的各种消息都是其他格式的XML节点（被称为 stanzas），都被包含在这个容器中，当联通的两端任何一方退出登录的时候，就发送&lt;/stream&gt;给另外一方。比如我关闭 GoogleTalk客户端，其就会发送&lt;/stream&gt;给gmail.com通知结束会话。
<blockquote>PS：这里需要强调的是stream不会出现在用户A和用户B之间，而仅仅存在于您使用的<strong>客户端</strong>和其对应的<strong>服务器</strong>端之间。</blockquote>
Stanzas节点包含的的就是用户A和用户B直接需要交换的消息，一般常用的有3个格式的，分别为：
<ol>
	<li>Message</li>
	<li>Presence</li>
	<li>IQ</li>
</ol>
<strong>Message</strong>类的Stanzas用来在两个用户间交换消息，比如<strong>用户A</strong>（iceskysl@someserver.com/home）给<strong>用户B</strong>（1sters@someotherserver.com/home）发送一条消息“1sters… are you there?”，其包装以后的格式类似于：
<blockquote>&lt;stream&gt;
&lt;message to=’1sters@someotherserver.com/home’&gt;
&lt;body&gt;1sters… are you there?&lt;/body&gt;
&lt;/message&gt;
…
…
&lt;/stream&gt; &lt;!--<font color="#ff0000">注意</font>，这个结束节点在你中断客户端连接的时候才会发送 --&gt;</blockquote>
我们再来看看，这个过程是怎么样的，当<strong>用户A</strong>发送消息的时候，其消息先到<u>someserver.com</u>，然后<u>someserver.com</u>看到其消息是发给<u>1sters@someotherserver.com/home</u>的，于是将其传递给<strong>用户B</strong>的服务器<u>someotherserver.com</u>，然后，由<u>someotherserver.com</u>发送给<strong>用户B</strong>。

<strong>presence </strong>类的stanza 是当用户的状态（Idle, Offline, Available, Do not disturb等等 ）发生改变时发送的。

<strong>IQ (Info / Query)</strong>类的stanzas是用来查看对方信息的，比如用户A想查看用户B的信息，就会发送一个“获取消息”的IQ stanza，用户B收到后，会回一个包含用户A查询的信息的IQ stanza。
<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<h2>第二部分：XMPP4R</h2>
XMPP4R是用Ruby实现XMPP客户端库文件，和其他的Jabber客户端软件一样，XMPP4R发送，接收和管理XML信息（stanzas）。

在下面的代码中，演示了如何用XMPP4R实现客户端功能。内容还是参考上面提到的<a href="http://iceskysl.1sters.com/">IceskYsl</a>的翻译。

1、 登录服务器
<pre lang="ruby">
    client = Jabber::Client.new(Jabber::JID::new("itechtag.notify@gmail.com/rebot"))  #初始化一个实例

    client.connect   #连接到服务端

    client.auth("my_extremely_secret_password")  #验证密码

    client.send(Presence.new.set_type(:available)) #更新状态</pre>
第四行,我们发送第一个stanza给服务器，告诉服务器：我在这里了。这样其他好友就会看到我的状态位“可用”了。

2、 发送消息

接下来看看如何发送消息给我的好友
<pre lang="ruby">
    msg = Jabber::Message::new("iceskysl@gmail.com", "Hello… ice?")  #这里是接收者的Jid和需要发送的消息

    msg.type=:chat  #这里设置消息的类型

    client.send(msg) #发送出去</pre>
怎么样，很简单吧，但是需要提醒您的是，最好是把消息的类型设置为"chat"，因为不同的客户端对消息的类型的处理方式是不一样的，比如<a href="http://www.gajim.org/">Gajim </a>用户每收到一个标识为“normal”的消息，都会重新弹出一个窗口显示，而不会在原来打开的窗口中继续显示。

3、添加好友

前面我们看到了，如何发送消息给另外一个人，但是当这个人不在你的好友列表中时，可能他并不能收到您的消息（也依赖不同的客户端，比如GoogleTalk就会先发送一个“加为好友”的请求），所以最保险的做法是先把这个人加为自己的好友，代码如下：
<pre lang="ruby">
    pres = Jabber::Presence.new.set_type(:subscribe).set_to("john@someserver.com")

    client.send(pres)</pre>
如上代码发送我们的添加john为好友的请求（<em>subscription </em>），但是什么时候返回？又返回什么内容呢？还好，XMPP4r不会一直等待其返回，也就是说上面这个过程是异步的，因为我们不晓得对方是否在线，是否会立即给我回复等等，但是我们又如何知道对方的反馈呢？就需要介绍XMPP4r的另外一个特性，<strong>callbacks</strong>.

4、Callbacks 监听

Callbacks 是个很重要的东西，他运行在自己的线程中，也就是说不会干扰主线程的运行，这个特性对我们非常重要的，因为这其实就保证了一个异步的过程，我们的主线程并 不需要等到请求的响应就可以继续下去做其他的事情，而Callbacks不断的监听以取得需要的响应。

回到刚才那个添加好友的地方，我们给john发送了添加好友的请求，我们怎么取得其响应呢？我们也说了，我们的主线程不会一直等待反馈，所以需要另外一种机制以保证有响应的时候我们可以及时的知道，这个就是Callbacks要干的事情。

由于“添加好友”这个请求（subscription request）对应的callback为“add_update_callback”，所以我们需要在“添加成功”注册这个callback监听：
<pre lang="ruby">
    client.add_update_callback do |presence|

        if presence.from == "john@someserver.com" &amp;&amp; presence.ask == :subscribe

          client.send(presence.from, "好友添加成功")

        end

    end</pre>
Xmpp4r提供了很多类似的Callbacks，比如一个人给我发消息时，我们可以使用add_message_callback监听：
<pre lang="ruby">
    client.add_message_callback do |m|

    if m.from == "john@someserver.com"

        #得到john的消息

        m.body

        #输出john的消息
    end
</pre>
另外，还有当对方状态发生变化的时候，我们可以用add_presence_callback来监视，类似代码这样：
<pre lang="ruby">
    client.add_presence_callback do |old_presence, new_presence|

    if new_presence.from == "john@someserver.com" &amp;&amp; new_presence.show == :dnd

        msg = Message::new("john@someserver.com", "对方为免打扰模式哦")

        msg.type=:chat

        client.send(msg)

    end
</pre>


在<a href="http://docs.google.com/View?docid=dhf86kr9_188gmpnw5hf" target="_blank">上面提到的另一款中文翻译</a>里面，后面部分讲了“技能云”的IM开发代码，开发中的朋友可以看一下它的代码。再次感谢<a href="http://iceskysl.1sters.com/">IceskYsl</a>的工作。

前两部分的内容先到这里，下一篇介绍其他的资料，包括OpenFire服务器的搭建和如何使用QQ实现Jabber客户端功能。

AD Link：<a href="http://asknet.com.cn">AskNet.com.cn</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2008-03-07 11:54:48</wp:post_date>
		<wp:post_date_gmt>2008-03-07 03:54:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>im-integration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="jabber"><![CDATA[jabber]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<category domain="post_tag" nicename="xmpp"><![CDATA[xmpp]]></category>
		<category domain="post_tag" nicename="xmpp4r"><![CDATA[xmpp4r]]></category>
	</item>
	<item>
		<title>恐惧来自内心</title>
		<link>http://railser.cn/blog/fear-comes-from-heart</link>
		<pubDate>Sun, 09 Mar 2008 05:23:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/fear-comes-from-heart</guid>
		<description></description>
		<content:encoded><![CDATA[1、昨天看了一直很想看的《secret window》（中译：秘窗），改编自史蒂芬 金的小说。虽然从来没看过金的小说，但是却买了他的自传。他的序三有句话很有意思：作家是人，编辑是神，查克是上帝。

电影的另一个吸引，是<a href="http://johnnydepp.org.cn/" target="_blank">德普</a>， 这是一个没有包装的德普，不过还是能看到他海盗船长的身影，摇摇晃晃，迷迷糊糊。难道生活中他就是这样吗？
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_000163621.jpg" alt="secret window" /></p>
 德普是一个为了角色不惜一切的人，甚至不屑影片投资人砸桌子。不过这里，他只要演他自己就行了，甚至装扮都是一样：帽子，黑边大眼镜，宽松的衣服，一个成熟并且成功了的文艺青年。
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_002521521.jpg" alt="secret window" /></p>
 这似乎也是史蒂芬 金的理想状态。看书，看书，写东西。影片在开头，一个特效的长镜头掠过MS Word的镜头，倒让我更觉得恐怖。windows难道不恐怖吗？

<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>

玛利亚 贝罗，刚看完《奥斯汀书友会》 ，没想到这里又看见她，虽然是女一号，但是戏并不多，因为这部片子就是拍德普的。动作，语言，表情，装可爱，冷峻，狂躁，残忍。
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_001072989.jpg" alt="secret window" /></p>
 这个故事看下来不觉得太多意外，可能这种心理悬疑的故事套路已经乱熟在脑袋里了。比如国产的《门》，人最害怕的是自己，在中国的传统里，更要加上“不怕活人怕死人”的东西。
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_003902485.jpg" alt="secret window" /></p>
 但是人并不愿意承认自己内心的恐惧，所以就会乐于转放到别人身上。上面这个角色，用《独自等待》里的台词：“是你丫脑袋里编出来的”。
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_003145729.jpg" alt="secret window" /></p>

电话是最让人恐惧的东西。我现在看到陌生的号码都会挂掉，除非第二次打来，否则觉得不会考虑是不是熟人。第二次打来的，也多有推销的，这证明人家的坚持，或者领导的强硬要求。
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_003696696.jpg" alt="secret window" /></p>
 迷惑
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_004361444.jpg" alt="secret window" /></p>

惊愕
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_005457832.jpg" alt="secret window" /></p>

释然

最大的敌人和最好的朋友，就是自己。

<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>

最后问一句：下面这个人是《越狱第三季》 里的susan吗？
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/secretwindow2004dvdripxvid-brutusavi_004346554.jpg" alt="secret window" /></p>
 只有两场戏，十句台词的小角色，连演员表都查不到她。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2008-03-09 13:23:01</wp:post_date>
		<wp:post_date_gmt>2008-03-09 05:23:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>fear-comes-from-heart</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
	</item>
	<item>
		<title>《Flex3基础训练》视频系列</title>
		<link>http://railser.cn/blog/flex3-essential-training</link>
		<pubDate>Wed, 12 Mar 2008 12:27:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/flex3-essential-training-11-1</guid>
		<description></description>
		<content:encoded><![CDATA[《Flex3基础训练》视频介绍：
<blockquote> Lynda.com 出品的 Adobe Flex 3 基础教程，由 Adobe 公司认证讲师 David Gassner 主讲。

Adobe Flex 3 是用于构建和维护在所有主要浏览器、桌面和操作系统一致地部署极具表现力的 Web 应用程序高效率开放源码框架，开发人员可以使用 Adobe Flex 3 软件来显著促进开发。若要创建引人入胜的跨平台丰富 Internet 应用程序，必须懂得强大的 Flex 3 的应用。在本教程中，讲师 David Gassner 从最基本 Flex 方案及其相关编程语言入手，循序渐进，逐渐深入，带领学员应用 Flex 3 自己动手创作、设计、定制及发布动态网页和桌面部署。</blockquote>
<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
<a href="http://www.verycd.com/groups/datum/239293.topic" target="_blank">这个页面可以找到电驴下载的连接</a>。
<pre style="text-align: center">
<object height="300" width="400">
<param name="movie" value="http://www.tudou.com/v/qRcUVESOuAU"></param>
<param name="allowScriptAccess" value="always"></param>
<param name="wmode" value="transparent"></param><embed src="http://www.tudou.com/v/qRcUVESOuAU" type="application/x-shockwave-flash" allowfullscreen="true" wmode="transparent" allowscriptaccess="always" height="300" width="400"></embed></object></pre>
在土豆试了一下，代码能看清吗？唉。再想别的办法吧。目的是要增加博客的收视率。

本来很想把mov转换成swf的部分上传到服务器，但是发现这个工作太艰巨和漫长，虽然只想放第十一章以后的内容，但是转换完的文件依旧很大，因为有代码，所以不想把画面质量降低，而且画面降低了文件大小也没小到哪去。唉。

视频讲的很清楚了，看完之后会去写一下代码。高手朋友欢迎来此指导。

ps：谁有高级的Flex开发视频，欢迎发一下。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2008-03-12 20:27:59</wp:post_date>
		<wp:post_date_gmt>2008-03-12 12:27:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>flex3-essential-training</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="flex"><![CDATA[flex]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[flex3-essential-training-11-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails的中文版新书《Ruby on Rails电子商务实战》</title>
		<link>http://railser.cn/blog/beginning-ruby-on-rails-e-commerce</link>
		<pubDate>Thu, 20 Mar 2008 15:16:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/beginning-ruby-on-rails-e-commerce</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

那天同事GT我说Rails出了新书，中文版，《Ruby on Rails电子商务实战》 ，并且把英文版迅速发给了我，说：书很好，讲TDD了，你快看，我已经买了。

<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>

<h2>一、《Beginning Ruby On Rails E-Commerce》</h2>

这本书的英文版是在06年的时候出版的，在书中标注的开发环境，对于现在来说，有一些老。不过对于主流的Rails1.2.6以下版本开发的项目来说，不会产生太大的问题。
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/env.jpg" alt="env" /></p>
<p style="text-align: center">书中(英文)的开发环境</p>
 不过，随着Rails2.0.2的发布，新的项目自然会用新版本开发。并且一些功能已经改进。比如第七章说到的“Tagging Support”，就会带来版本的困扰，这个我在<a href="http://railser.cn/archives/development-log-rails-pagnate-and-acts-as-taggable" target="_blank">开发笔记：rails分页和acts_as_taggable插件的应用</a>中已经做了个笔记。

这本书是Rails2.0下的牺牲品吗？绝不 ，这本书的价值，在于里面讲到的TDD下的Rails开发。这是这本书的精华，也使它不同于Rails普及书会面临的淘汰问题。

<h2>二、一定要重视TDD开发</h2>

在本书英文版的前言部分，作者提到了本书的目的：


<blockquote>
本书的阅读群，是使用Rails制作过一个以上项目，并且期望在以后的开发中，通过使用TDD开发来改进代码质量的程序员的。
</blockquote>


这正适合我这样的程序员。最近的经历告诉我，如果想和外国的团队开发项目，或者加入到成熟的项目开发中 ，掌握TDD或者BDD是一项必须技能。这重要的不在乎技巧，而是观念。

记得当初在Django下开发deyeb的第二个版本时，就被迫的拿着测试驱动开发去理解。那个时候根本不明白这是什么意思，而两年后的现在，却十分想认真的再去理解一下书中的精髓。而这本书正好是按照先测试，后开发的“规矩” ，完成一个项目的。这也使得这本书不局限在Rails的具体版本，而教人知识的层次了。

<h2>三、 《Ruby on Rails电子商务实战》</h2>

中文版我还没读到，所以抓来GT(GT就是google talk的意思，好玩)我的<a href="http://www.douban.com/people/1098413/" target="_blank">那个人</a>，写了一下感想，毕竟他已经认真读完前三章了。


<blockquote>
买了Ruby on Rails电子商务实战。刚入手就迫不及待的翻看起来。这本书和其他的Rails都是一个流派，本着实用为目的，没有多余的废话，上来就直接做应用，而且介绍的技术都是现实中大家肯定会用到的，一些相关的知识点也都给了详细介绍的URL。从第二章开始作者就有意的给读者介绍一些优秀的编码思路，也就是本书的核心TDD测试驱动开发。说实话，这本书的代码，因为是基于Rails1.2之下的，尤其现在已经是Rails2了。所以好多代码已经被废弃了，例如书中常用到的 assert_tag 在rails中已经废弃了。如果你完全按照书上的例子打，肯定过不去，好在译者已经给大家写了注释和修改的方法。所以，虽然本书不是基于rails2来写，但是有了译者的补充和完善，代码仍然不过时。书中介绍的一些技巧和方法，在实战中也肯定让读者少走不少弯路，比如如何给Rails应用增加Textile功能，如何试用Rails的上传插件FileColumn。虽然Rails进过不断的进步，在安全，多语言支持应用程序部署和性能优化上都有了更好的标准和方法。但是本书后在这方面的章节仍然值得一读。

总体来说，读过《敏捷开发2》，和《Ruby for Rails》再来看这本书，会对Rails开发者在实战中有莫大的帮助。
</blockquote>


这是中文译者的博客：<a href="http://activescaffold.com.cn/" target="_blank">activescaffold.com.cn </a>

<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

/* 468x60, 仅图片，创建于 08-1-26 */

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>

写在后面：

最近又在给人做网站。又看了很多电影，并且在没什么新片看的时候，下载吴宇森的经典片《夺面双雄》 （英文：face/off）看。昨天还温习了一边《虎胆龙威4》，感觉那些程序员死得很窝囊，难道50年才出一个NEO吗？

镐头书要出新版了，《Pro Active Record: Databases with Ruby and Rails》上架了，唉，时间不等人啊。最近觉得资料分享的网站很有意思，比如<a href="http://www.scribd.com/" target="_blank">http://www.scribd.com/</a>这个站点，大家有什么想法吗？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2008-03-20 23:16:00</wp:post_date>
		<wp:post_date_gmt>2008-03-20 15:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>beginning-ruby-on-rails-e-commerce</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
	</item>
	<item>
		<title>IM集成开发补充</title>
		<link>http://railser.cn/blog/im-integration-part2</link>
		<pubDate>Wed, 26 Mar 2008 04:07:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/im-integration-part2</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

这《<a href="http://railser.cn/archives/im-integration" target="_blank">IM集成开发</a>》那篇博客，主要是翻译了rubyfleebie.com里面的两篇文章，以及对一些资料的整理。不过在IM集成开发上，还有一篇补充需要整理一下。<a href="http://www.rubyfleebie.com/im-integration-with-xmpp4r-2-mistakes-to-avoid/" target="_blank">原文</a>的标题叫“使用XMPP4R进行IM集成开发时需要避免的两个错误”。

错误一：在Rails下运行XMPP4R

作者提到，不要将XMPP4R放到你的vender目录中，不要指望在你的Rails项目中也运行着XMPP服务。因为web服务是无状态的，在一个请求结束后，web服务会和客户端断开。而XMPP服务的原理不是这样，所以你应该建立一个独立的项目，比如叫做listener，来完成XMPP的工作。

不过要注意不要犯下面的错误。

错误二：在listener中写入商业逻辑

Rails才是你真正的核心，而这个listener的工作只需要很简单：

1、接受input

2、将消息发给Rails应用

3、将Rails应用的相应结果返回给IM客户端

以上是作者的总结，供大家参考。
<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
下面的文章是关于如何建立一个Jabber服务器的

<a href="http://www.linuxsir.org/main/?q=node/156" target="_blank">简单架设Jabber 局域网即时通讯服务器</a>

这篇讲的很全面，不过是linux下的，个人感觉练习的话windows下的很简单。

<a href="http://blog.deadbeaf.org/twitterhack/twitterbot-by-ruby/" target="_blank">TwitterBot by Ruby</a>

如何使用Ruby来实现Twitter的机器人

<a href="http://dominiek.com/articles/2008/2/15/how-to-build-a-twitter-agent" target="_blank">How to Build a Twitter Agent</a>

如何搭建Twitter代理

不过，我更加关心的是如何实现QQ的IM集成，遗憾的是个人尝试了下并为成功，如果谁有具体的实现方法，请与我联系。下面是我整理的资料，能力有限，所以贴在这里，供大家交流吧。

<a href="http://www.trydone.com/posts/list/50.page" target="_blank">QQTransport for wildfire (让QQ也能在Jabber上使用)   </a>

<a href="http://618119.com/archives/2008/01/04/60.html" target="_blank">为OpenFire和Spark增加QQTransport–Openfire篇(二)</a>

这篇文章的作者说，他是在LumaQQ的基础上加工的，不过能力有限，对java环境也基本忘光光，虽然按照他的指引，我还是没有成功，不过还是感谢他的工作，让我知道了如何入手。
<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>
讲一下外包开发的想法。

一定是要有预付的，之前会讨论网站的详细功能，一定要有成文的功能说明。预付，意味着我们开始正式的开发，这个会包括网站开发文档，代码实现，在正式交付前，需要结清余下的款项。更具体的还需要另定。比如上线后的维护，服务器的扩充，人员的培训等等。在尾款结清前，我们有权保留部分代码。不过作为项目的制作者，我们更乐于参与上线后的维护工作，以增长经验。

期望每一次都是快乐的合作。

不过，对于项目想法不成熟的，我们并不想指出谁对谁错，我们只看成熟的开发文档。我们期望自己的作品在各个方面是优秀的。

不过：

1、用4000块就像做土豆网的免谈

2、当程序员为“饭店跑堂”的免谈

3、当程序员为“免费搓澡”的免谈

4、大型门户网站或行业门户网站投资少于2万的免谈

5、要求用asp制作大型门户网站或行业门户网站的免谈

6、非Rails项目，而且又不能用php已有cms系统完成的，谢谢，我们不接。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2008-03-26 12:07:00</wp:post_date>
		<wp:post_date_gmt>2008-03-26 04:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>im-integration-part2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="xmpp4r"><![CDATA[xmpp4r]]></category>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>guxing203@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>221.8.40.54</wp:comment_author_IP>
			<wp:comment_date>2008-04-30 15:05:13</wp:comment_date>
			<wp:comment_date_gmt>2008-04-30 07:05:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[还有人4K要做一个土豆呢，这是我这比较经典的笑话]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[magicgod]]></wp:comment_author>
			<wp:comment_author_email>magicgod@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.82.204.59</wp:comment_author_IP>
			<wp:comment_date>2008-04-27 18:04:34</wp:comment_date>
			<wp:comment_date_gmt>2008-04-27 10:04:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[投资两万的实在是太少了吧]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>四月一日：只为一个人纪念</title>
		<link>http://railser.cn/blog/leslie-cheung</link>
		<pubDate>Mon, 31 Mar 2008 15:40:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/leslie-cheung</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/0.jpg" alt="Leslie Cheung" /></p>
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/1.jpg" alt="Leslie Cheung" /></p>
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/03/2.jpg" alt="Leslie Cheung" /></p>

这是一个歌者，演员，巨星所能享有的爱戴与缅怀。逝者已去，留给生者的是对生命的思索。

人为何而来，又为何而去。

在王家卫的《蓝莓之夜》 里，Natalie Portman（娜塔莉 波特曼）的角色叫Leslie，一个古灵精怪，偏执，但是内心善良的女人。不知道王家卫为何要将这个角色的名字定做Leslie，他在描述他心目中的Leslie吗？

听歌吧：风继续吹


<blockquote>
我劝你早点归去你说你不想归去
只叫我抱着你
悠悠海风轻轻吹冷却了野火堆
我看见伤心的你你叫我怎舍得去
哭态也绝美
如何止哭只得轻吻你发边让风继续吹
不忍远离
心里极渴望希望留下伴着你
风继续吹不忍远离
心里极渴望希望留下伴着你
心里亦有泪不愿流泪望着你

过去多少快乐记忆何妨与你一起去追
要将忧郁苦痛洗去柔情蜜意我愿记取
要强忍离情泪未许它向下垂
愁如锁眉头聚别离泪始终要下垂

我已令你快乐你也令我痴痴醉
你已在我心不必再问记着谁
留住眼里每滴泪为何仍断续流默默垂
为何仍断续流默默垂性
</blockquote>

<pre align="center">
<embed src="http://www.yobo.com/flash/w/105/singlemusic.swf" FlashVars="P=GW|www.yobo.com|xmlUrl|7856|w|255|skin|07|autoPlay|1|volume|100" quality="high" bgcolor="#ffffff" width="255" height="108" id="single_song_player_7856" name="single_song_player_7856" align="middle" type="application/x-shockwave-flash"> </embed>
<br /><a href="http://www.yobo.com" target="_blank"><img src="http://www.yobo.com/images/blank_image.gif" style="display:none;" title="YOBO友播,音乐DNA,音乐推荐,排行榜,音乐插件,MUSIC WIDGET" /></a>
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2008-03-31 23:40:15</wp:post_date>
		<wp:post_date_gmt>2008-03-31 15:40:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>leslie-cheung</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="leslie"><![CDATA[Leslie]]></category>
	</item>
	<item>
		<title>《伯恩的身份》系列电影</title>
		<link>http://railser.cn/blog/the-bourne-identity</link>
		<pubDate>Wed, 02 Apr 2008 10:29:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/the-bourne-identity</guid>
		<description></description>
		<content:encoded><![CDATA[超级好看的片子，贴一下。

第一集
<pre style="text-align: center">
<object>
<param name="movie" value="http://6.cn/p//C8NsVo26zB1amgKLHRFNA"></param><embed src="http://6.cn/p//C8NsVo26zB1amgKLHRFNA" type="application/x-shockwave-flash" height="415" width="480"></embed></object></pre>
IMDB:<a href="http://www.imdb.com/title/tt0258463/">http://www.imdb.com/title/tt0258463/</a>

第二集
<pre style="text-align: center">
<object>
<param name="movie" value="http://6.cn/p/86g2O/0QRS1KfcV3vGR46Q"></param><embed src="http://6.cn/p/86g2O/0QRS1KfcV3vGR46Q" type="application/x-shockwave-flash" height="415" width="480"></embed></object></pre>

第三集

<pre style="text-align: center">
<object><param name="movie" value="http://6.cn/p/lPo6VT0dwXGG0q_X2htxMA" /><embed src="http://6.cn/p/lPo6VT0dwXGG0q_X2htxMA" width="480" height="415" type="application/x-shockwave-flash" /></object>
</pre>

<pre style="text-align: center">
<script type="text/javascript">    <!--

google_ad_client = "pub-7545275883969710";

google_ad_slot = "8168667438";

google_ad_width = 468;

google_ad_height = 60;

//-->

</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">

</script></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2008-04-02 18:29:12</wp:post_date>
		<wp:post_date_gmt>2008-04-02 10:29:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>the-bourne-identity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="movie"><![CDATA[movie]]></category>
	</item>
	<item>
		<title>我很忙</title>
		<link>http://railser.cn/blog/wo-hen-mang</link>
		<pubDate>Sat, 12 Apr 2008 06:17:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/wo-hen-mang</guid>
		<description></description>
		<content:encoded><![CDATA[一、
<p style="text-align: center"><img src="http://railser.cn/wp-content/uploads/2008/04/136975453101180.jpg" alt="136975453101180.jpg" /></p>
这是第一件想说的事情。最近很忙但是还在关注这新闻，毕竟是体育迷，所以新闻是必看的。不想在博客里谈论政治，何况体育跟政治压根就是两码事。

从事体育的人都为能在自己的领域为国效力而自豪，可惜程序员这一行既不是体育项目，也不是体力项目，所以，我这辈子是没机会穿上国家队的队服了。羡慕金晶。

作为残疾人，感谢金晶在公众面前表现出来的沉着，冷静和勇敢。

ps1：“身残志坚” 是社会强加给残疾人的，不是我们的定义。残疾人非要意志脆弱，需要人提醒吗？

ps2：在金字塔面前，人人平等。这个社会为什么要区分所谓的残疾人和正常人？

link：<a href="http://blog.sina.com.cn/huojushoujinjing" target="_blank">http://blog.sina.com.cn/huojushoujinjing</a>

link：<a href="http://blog.sina.com.cn/s/blog_48d4aac101009aq1.html" target="_blank">轮椅上的“剑客”谴责冲击圣火：这些行为让人愤慨 </a>

二、

Rails改用Git了，不过可惜，windows上想用的好，需要安装cygwin ，要命啊，那个东西全装的话得一整个硬盘（20G），唉，好东西，享用不起了。

link：<a href="http://weblog.rubyonrails.org/2008/4/2/rails-is-moving-from-svn-to-git" target="_blank">Rails is moving from SVN to Git </a>

三、

最近在用verycms和 supesite建设网站，感觉不错。不过VC档次有点低，不能太高要求，实在遗憾啊，失望大于期望。SS不错，功能很强，很专业，适合做中型的系统。

在使用的同时积累了点cms的经验，希望有一天能够参与下Rails的cms开发。有兴趣的朋友欢迎交流。

近期作品：<a href="http://www.zgcjr.org" target="_blank">生命之光教育网</a>，<a href="http://www.xinyu.org" target="_blank">心语志愿者协会</a>

四、

手纸涨价了，程序员也应该有个合理价位吧？

我接受2000元/月以上的工作邀请，兼职全职均可 ，但全职目前仅限长春。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2008-04-12 14:17:10</wp:post_date>
		<wp:post_date_gmt>2008-04-12 06:17:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>wo-hen-mang</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[aotianlong]]></wp:comment_author>
			<wp:comment_author_email>aotianlong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.80.169.10</wp:comment_author_IP>
			<wp:comment_date>2008-05-10 10:10:33</wp:comment_date>
			<wp:comment_date_gmt>2008-05-10 02:10:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2000这么便宜阿？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[hadi]]></wp:comment_author>
			<wp:comment_author_email>hadi_lu@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>218.64.20.116</wp:comment_author_IP>
			<wp:comment_date>2008-04-28 11:57:47</wp:comment_date>
			<wp:comment_date_gmt>2008-04-28 03:57:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[cygwin 可以选择包安装的，常用的加一起就百八十兆，或者用http://code.google.com/p/msysgit/ ，比较难搞的是在 cmd 中显示 utf-8，http://www.okisoft.co.jp/esc/utf8-cygwin/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>2008年5月12日下午2点28分，汶川地震</title>
		<link>http://railser.cn/blog/2008-5-12-wenchuan</link>
		<pubDate>Sun, 18 May 2008 05:21:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 style="text-align: center;"><strong><span style="color: #000000;">2008年5月12日下午2点28分</span></strong></h1>
<h1 style="text-align: center;"><strong><span style="color: #000000;">这将是一个长久铭记在中国历史书上的日子</span></strong></h1>
一、博客又换服务器了

这回不是linux系统，所以原来的文章地址的解析暂时无法解决，只能用官方说的丑陋方式了。会妥善解决的。

二、从下周开始又回到Rails的研究上了

三、别问我有没有Rails作品，我说没有，我可能会做一些方案研究和文章的翻译。如果能加入项目开发，我也会找一个有价值的项目。

四、会继续整理关于Flex开发的资料

五、终于下载了李宗盛的《理性与感性作品音乐会》的dvd，这是音乐上的享受。静茹唱了林忆莲的几首歌，但是在所有人的眼中，看到的都是往事吧。

李宗盛也调侃，有些歌不能随便唱，兆头不好。

六、地震的感想不多写了

七、明天开始三天，全国哀悼日。soho工作还会继续，日子是留给活着的人继续的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2008-05-18 05:21:09</wp:post_date>
		<wp:post_date_gmt>2008-05-18 05:21:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2008-5-12-wenchuan</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>近期计划及以往技术网站连接整理</title>
		<link>http://railser.cn/blog/rails-tech-blogs-links</link>
		<pubDate>Tue, 27 May 2008 05:18:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[我是个soho的人，所以计划常会变动，这从博客上可以看出来。如果我经常的写自以为不错的东西出来，说明我手头没有项目。如果我每隔几天写点东西 出来，但是又不关于技术，说明我的手头的工作比较凌乱，不需要大块的时间研究，但是需要经常的处于工作状态。如果我好几天什么都没写，说明我很忙，忙到没 心情写。

所以，这个博客，需要有心情来维护。

今天在考虑要不要给博客换一个更适合目前工作的域名，或者重新开一个空间。但是喝咖啡的时候想应该，但是现在想又无所谓，因为我也不知道下个月这个 时候还在做什么东西。我倒是希望全身心的投入到Rails的开发中，可是哪有这样的机会呢？一个好的项目，一个好的报酬，一个优秀的合作团队，唉，可遇不 可求的。

所以，soho依然在继续，就证明工作状态还是不稳定。

说别的。

最近的工作和php有关，在脑袋中也在整理一些工作经验，可是感觉作用不大。国内的php项目虽好，可是整体上不够健全，比如，没有版本库，比如，没有Rails好。

这有点苛刻了，但是相对Rails开发中的得心应手，php的产品二次开发，明显跟不上自己的需求。于是经常怀念Rails开发经历。

再说别的。

Comsenz的产品的确不错，discuz论坛也是垄断地位，所以打算长期的做其系列产品的二次开发。包括：
<ol>
	<li>Discuz论坛安装，维护</li>
	<li>UC，UCHome，及Supesite UC 版的建站</li>
	<li>皮肤设计（还需要时间研究）</li>
	<li>各种插件方案的研究和使用（目前知道了Cyask for UC，不过需要时间深入下）</li>
</ol>
前年听说曾经的雪人论坛的开发者，加入了discuz！的开发，现在感觉到了discuz或者comsenz的强大。有谁还记得雪人论坛呢？曾经的2.5版本，就是我asp的入门教程。现在想想，还有好多不会呢。

先到这吧。wordpress很好，但是是不是只实用于我们这边穷酸的技术人员呢？

下面的连接，是以前一点点发现和保存的，Rails技术网站，外国的居多。

技术类网站的连接
<ul>
	<li><a href="http://blog.zmok.net/" target="_blank">/bin/recykl</a></li>
	<li><a href="http://bencurtis.com/">BenCurtis</a></li>
	<li><a href="http://chinaonrails.com/" target="_blank">ChinaonRails</a></li>
	<li><a href="http://www.danielfischer.com/">Daniel Fischer</a></li>
	<li><a href="http://www.flexiblerails.com/" target="_blank">Flexible Rails</a></li>
	<li><a href="http://flexonrails.net/" target="_blank">FlexOnRails</a></li>
	<li><a href="http://mvolo.com/blogs/serverside/default.aspx" target="_blank">IIS 7.0 Server-Side</a></li>
	<li><a href="http://www.letrails.cn/" target="_blank">LetRails</a></li>
	<li><a title="The Official Flex User Group for Orange County, California." href="http://www.ocflex.com/" target="_blank">OC Flex</a></li>
	<li><a href="http://osflash.org/">OSFlash</a></li>
	<li><a href="http://pepcode.com/" target="_blank">peepcode</a></li>
	<li><a href="http://www.railsenvy.com/" target="_blank">RailsEnvy</a></li>
	<li><a href="http://railsexpress.de/blog/" target="_blank">RailsExpress</a></li>
	<li><a href="http://www.riaforge.org/" target="_blank">RIAForge</a></li>
	<li><a href="http://robbin.javaeye.com/" target="_blank">Robbin的自言自语</a></li>
	<li><a href="http://seoonrails.com/" target="_blank">SEOonRails</a></li>
	<li><a href="http://www.onflex.org/" target="_blank">Ted On Flex</a></li>
	<li><a href="http://therailsway.com/" target="_blank">TheRailsWay</a></li>
	<li><a href="http://blog.vixiom.com/" target="_blank">vixiom axioms</a></li>
	<li><a href="http://agilewebdevelopment.com/" target="_blank">敏捷web开发</a></li>
	<li><a href="http://hhtong.com/" target="_blank">道喜技术日记</a></li>
</ul>
感慨一下：当技术人员真的很难，所以未全身心入行的朋友慎入，在有些时候，卖报纸都比这个职业要好。因为落寞的生活，不知道会持续多久，你能坚持的住吗？不要看人家外国做这一行的有多风光，这跟中国足球一样，在巴西业余队踢球的人，来中国也成了某超级队的主力。

“生南则为桔”啊。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2008-05-27 05:18:40</wp:post_date>
		<wp:post_date_gmt>2008-05-27 05:18:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-tech-blogs-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mate: Event driven framework for Flex</title>
		<link>http://railser.cn/blog/mate-event-driven-framework-for-flex</link>
		<pubDate>Tue, 15 Jul 2008 05:26:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[一、Mate，新的Flex框架

google mail的确是个有好东西，尤其是google快讯，长期以来每天都把最新的资讯按照订阅的关键词发给我，一致每天早上都要花个时间来看看。（当然，最近直接标注为已读）

今天收到的一个内容，讲到了最新的Flex框架 Mate，infoQ的文章（<a href="http://www.infoq.com/cn/news/2008/07/mate-flex-framework-alpha" target="_blank">Flex框架Mate的Alpha版闪亮登场</a>），将资料整理一下，方便阅读。

教程：<a href="http://www.flashmagazine.com/Reviews/detail/mate_event_driven_framework_for_flex/" target="_blank">Mate: Event driven framework for Flex</a>

官网：<a href="http://mate.asfusion.com/">http://mate.asfusion.com</a>

文档：
<ul>
	<li><a href="http://mate.asfusion.com/page/documentation/getting-started">Getting Started</a></li>
	<li><a href="http://mate.asfusion.com/page/documentation/overview">Overview</a></li>
	<li><a href="http://mate.asfusion.com/page/documentation/tags">Tags</a></li>
	<li><a href="http://mate.asfusion.com/page/documentation/best-practices">Best Practices</a></li>
	<li><a href="http://mate.asfusion.com/page/documentation/how-to">How to</a></li>
	<li><a href="http://mate.asfusion.com/page/documentation/diagrams">Diagrams</a></li>
	<li><a href="http://mate.asfusion.com/api_docs">API Docs</a></li>
</ul>
二、Netbeans的6.5M1

地址：<a href="http://bits.netbeans.org/download/6.5/m1/">http://bits.netbeans.org/download/6.5/m1/</a>

jp说6.5很好，于是今天装了看，的确不错。有2个深色的颜色方案也挺好看。（我以前没用过，故意的）。其他的还得接着用用看来。

三、好消息，明天开始做一个Rails项目了，希望能是一个长久的项目，毕竟跟人说我做的Rails项目都挂了，人家会觉得我比较丧。

四、google快讯可以定制 <a name="baidusnap0"></a><strong style="color: black; background-color: #ffff66;">site:railser.cn</strong> 形式的关键词，这样会很快的告诉我网站的收录情况。自恋吧。

五、<a href="http://advancedrails.com/">http://advancedrails.com</a> 继续找Rails新书和技术博客整理，<a href="../">http://railser.cn</a> 继续做中文的开发笔记。

六、刚才看到，wordpress2.6放出来了

下载：<a href="http://wordpress.org/latest.zip">http://wordpress.org/latest.zip</a>

<a href="http://weblogtoolscollection.com/archives/2008/06/30/what-you-need-to-know-about-wordpress-26/">What You Need To Know About WordPress 2.6 </a>?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2008-07-15 05:26:13</wp:post_date>
		<wp:post_date_gmt>2008-07-15 05:26:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mate-event-driven-framework-for-flex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>恢复了！</title>
		<link>http://railser.cn/blog/2008-8-9</link>
		<pubDate>Sat, 09 Aug 2008 05:15:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[数据库坏了，工作也忙一直。

不过是在忙Rails的开发，很幸福啊。稍后会把开发的笔记整理上来。而且也打算在开发后专心写Rails的博客。ok]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2008-08-09 05:15:22</wp:post_date>
		<wp:post_date_gmt>2008-08-09 05:15:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2008-8-9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL Hacks：100个业界最尖端的技巧和工具</title>
		<link>http://railser.cn/blog/sql-hacks-tips-tools-for-digging-into-your-data</link>
		<pubDate>Sun, 17 Aug 2008 08:39:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

参与开发的招聘网站已经告一段落，虽然只是完成前台业务逻辑，但是有很多地方都在代码里写了“小说”。而且都是悬念小说，只等客户触发该事件了。

<a href="http://www.dangdang.com/league/leagueref.asp?from=P-253525&amp;backurl=http://product.dangdang.com/product.aspx?product_id=20279327" target="_blank"><img class="aligncenter" src="http://images.dangdang.com/images/20279327_b.jpg" alt="" /></a>

作者：（美）古明，（美）鲁赛尔 著，张长富 等译

出版社：清华大学出版社

一个优秀的网站，起源于优秀的初期设计和之后的代码完成。参与的这个网站设计不错，不过在一些细节上，还需要更多的后期使用，才能更加的精雕了。“写代码的人永远比用代码的人了解更多”。因为写下一段代码，似乎在看新一本的《哈里波特》，你不知道下面会碰到什么，但你知道可能碰到什么，所以你的代码上要有准备。

而精彩的是，下面的事情出乎意料。比如，我在写完这个博客后，要去改一个本来就很复杂的复合查询的条件。

写到这要说一下最近正在看的一本书。中文名《SQL Hacks：100个业界最尖端的技巧和工具》，英文名：《SQL Hacks_ Tips &amp; Tools for Digging into Your Data》。

中文名很。。。。误导人，书里讲的是Tips，不能都算顶尖，但是非常实用。都是工作中经常会碰到的事情。Tips的作用，是作为平时思考的一个简单命题，拿起研究，放下解决。不会是长篇大论并且牵扯很多命题。所以这本书的好处是：

1、随手翻一下，看上几行就会获益

2、命题简单，不用花很长时间就能得到解决办法

3、不用和我儿子争电脑，他在看《丢手绢》或者他臭美视频的时候，我可以在傍边找本书看下下，不用跟着看那些看了一万遍的东西。一万遍啊一万遍。

最后，如果在sql上需要更进一步学习，还应该看看下面这本，英文版更适合阅读。非常感谢这本书帮我解决了个很头疼的问题。sql真的是博大精深啊。

<a href="http://www.dangdang.com/league/leagueref.asp?from=P-253525&amp;backurl=http://product.dangdang.com/product.aspx?product_id=20200498" target="_blank"><img class="alignnone" src="http://images.dangdang.com/images/20200498_b.jpg" alt="" /></a>

ps：我发现新装完的系统，新的输入法跟我不对付啊，总打错字，我都编辑2遍了还有错字，以后咋当专职作家去？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2008-08-17 08:39:08</wp:post_date>
		<wp:post_date_gmt>2008-08-17 08:39:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-hacks-tips-tools-for-digging-into-your-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[里克的自习室 &raquo; Blog Archive &raquo; EZAdmin，一个简易的asp企业站管理后台]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn/index.php/blog/ezadmin</wp:comment_author_url>
			<wp:comment_author_IP>203.171.231.111</wp:comment_author_IP>
			<wp:comment_date>2008-08-30 23:45:37</wp:comment_date>
			<wp:comment_date_gmt>2008-08-30 23:45:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[gem] SQL Hacks：100个业界最尖端的技巧和工具 [gem]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Git：中文教程及资料整理</title>
		<link>http://railser.cn/blog/git-tutorial-cn</link>
		<pubDate>Sun, 17 Aug 2008 13:21:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[置顶：<a href="http://railser.cn/index.php/blog/sql-hacks-tips-tools-for-digging-into-your-data" target="_self">SQL Hacks：100个业界最尖端的技巧和工具</a>

写在前面：在忙于生计的一段时间里，Rails升级到2.1，并且带来了一个新的工具：git。忽然之间，git成了专心开发的朋友们的话题。我由于不专心，所以没有去更多的关注它，最多知道它是一个新的版本控制工具。

我依旧在用svn和code.google.com，并且把几个asp的网站也放了上去，连一直在研究的comsenz的UCHome也放上去，原因是：我需要知道我几天前改了什么。但是就是这样长期依赖svn，对git还是没有立刻转变过来。（脑袋比较直）。所以从吃完晚饭到现在，我才明白一些git的东西。现在整理一下吧。

1、工具

git自然不必说，但是我是windows系统，所以需要windows的git。可怕的是当我听说git的时候，就被告知git只能在linux下。但是随着时间迅速的推进，这个问题已经是2个月，甚至是更长时间之前的问题了。不要被google和baidu忽悠，他们告诉我的资料明显记载着很久以前的日期。

在windows上使用git，我安装的是 <a href="http://code.google.com/p/msysgit/" target="_self">msysgit</a> ，被它先入为主了。这样在目标文件夹上，多出了Git Gui Here和Git Bash Here两个命令。（这不是具体的使用教程，我想能用到git的朋友也绝非新人了。呵呵。在此只是个人笔记分享一下，绝无说教之意。）

2、教程

baidu一下找到了<a href="http://www.bitsun.com/documents/gittutorcn.htm" target="_self">Git中文教程</a>，不过职业习惯让我看了一下最后，写的“Last updated 27-Mar-2006 15:20:34 UTC ”表明，这篇文章是2年多前的了。而其他的文章多数是爬虫的结果，看着难受。

官网上的教程是最新的，更新日期为2008-7-15

官网：<a href="http://www.kernel.org/pub/software/scm/git/docs/gittutorial.html" target="_self">git tutorial(7) Manual Page </a>

对于linux来说，看它的速度远不如自己机器上 man 一下，可惜我是windowsgem。当然bash上git help git 也可以找到帮助手册。不过就两篇教程来说，官网的更加易懂，按照步骤操作一下，也就明白什么是git了。对于git，本人明白后发现自己最大的误解是：git 不是 svn 。

3、资料

官网上的资料比较全啦，不找啦。
<div class="sectionbody">
<div class="para">

<a href="http://www.kernel.org/pub/software/scm/git/docs/gittutorial-2.html">gittutorial-2(7)</a>, <a href="http://www.kernel.org/pub/software/scm/git/docs/gitcvs-migration.html">gitcvs-migration(7)</a>, <a href="http://www.kernel.org/pub/software/scm/git/docs/gitcore-tutorial.html">gitcore-tutorial(7)</a>, <a href="http://www.kernel.org/pub/software/scm/git/docs/gitglossary.html">gitglossary(7)</a>, <a href="http://www.kernel.org/pub/software/scm/git/docs/everyday.html">Everyday git</a>, <a href="http://www.kernel.org/pub/software/scm/git/docs/user-manual.html">The Git User's Manual</a>

补充几句：那篇虽然是2年前的中文教程，但是内容还是很精要的。一些命令已经改动，读的时候小心。比如 git status。难怪我最开始的时候总是不成功呢。呵呵

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2008-08-17 13:21:57</wp:post_date>
		<wp:post_date_gmt>2008-08-17 13:21:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-tutorial-cn</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[bugx]]></wp:comment_author>
			<wp:comment_author_email>halflifexp@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.82.57.22</wp:comment_author_IP>
			<wp:comment_date>2008-09-15 04:24:36</wp:comment_date>
			<wp:comment_date_gmt>2008-09-15 04:24:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[GIT是不错，可以试试国内提供git服务的平台，文档好像少了点，需要自己会用
http://www.githost.cn]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>EZAdmin，一个简易的asp企业站管理后台</title>
		<link>http://railser.cn/blog/ezadmin</link>
		<pubDate>Fri, 29 Aug 2008 07:45:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[置顶：

<a href="http://railser.cn/index.php/blog/git-tutorial-cn" target="_self">Git：中文教程及资料整理</a>

<a href="http://railser.cn/index.php/blog/sql-hacks-tips-tools-for-digging-into-your-data" target="_self">SQL Hacks：100个业界最尖端的技巧和工具</a>

最近的两个月，偶尔有公司的asp网站单子做做。刚开始是发来一些原来的企业站后台，在基础上改改。但是状况是：所有这些后台都是改了N遍，代码早已面目全非，更别说什么div+css，只要能完成客户要求，谁管什么代码。所以，在那个基础上改，等于自残。

所以在改了一套之后，（具体说是三个网站）之后，开始准备自己的一个企业站后台。其实是在一个自己改过N遍的基础页面框架上，加入自由的设定方法。

原来的框架好处在于比较舒服，是见过的所有后台最舒服的。而且这个框架该过N遍，已经变成自己的了，现在差的是整理一下，去掉多余代码，并且重新构架一遍页面。

所以，有了这个EZAdmin。<a href="http://railser.cn/wp-content/uploads/2008/08/ezadmin.rar" target="_blank">点击下载</a>

登陆：liwei/liwei

功能：

1、新闻列表和单页采用同一个数据库

2、使用fckeditor，可以让任何维护人员粘贴word，excel这种格式的内容，或者直接粘贴其他页面内容。实现在一个大编辑框内设计要求的页面。（大多数企业站的维护人员只懂word和excel，或复制粘贴）

3、每个新闻有自己的单张图片上传和单个文件上传

4、产品表与新闻表分离

TODO：

1、马上要在新的单子要求里，增加会员管理功能

2、会加一个留言板功能。

说明：

1、这个版本根本不会有什么完成版，稳定版。因为它存在于大大小小的N多网站中，没有网站会完整到下载的状态。这个程序是给咱们<span style="color: #ff6600;">伟大的程序员</span>朋友的，节省大家的时间（如果你真的需要并且真的节省了时间的话）。

2、这个版本没有完全查错，只要客户没提我就不改了。

3、里面的fckeditor是我删减后的，原版下载请到官网。并且这个版本的上传已经改成asp方式，默认是php的。

4、下载的朋友，这个程序需要你修改的地方很多，几乎就是方便一次次的就该而做的。所以<span style="color: #0000ff;">asp修改有障碍</span>的朋友，请认真考虑哦。使用了这个程序的朋友，请留言，提供嗷嗷宝贵的意见。

ps：工作笔记而已]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2008-08-29 07:45:42</wp:post_date>
		<wp:post_date_gmt>2008-08-29 07:45:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ezadmin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="ezadmin"><![CDATA[EZAdmin]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[yimeng]]></wp:comment_author>
			<wp:comment_author_email>dongyimeng@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.china-visa.cc</wp:comment_author_url>
			<wp:comment_author_IP>58.244.43.6</wp:comment_author_IP>
			<wp:comment_date>2008-09-19 14:51:20</wp:comment_date>
			<wp:comment_date_gmt>2008-09-19 14:51:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[good]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[小毛]]></wp:comment_author>
			<wp:comment_author_email>242676008@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>58.216.143.178</wp:comment_author_IP>
			<wp:comment_date>2009-04-08 07:43:37</wp:comment_date>
			<wp:comment_date_gmt>2009-04-08 07:43:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有过弄和你一样东西的想法。不过是PHP的。想在天使文章系统的基础上改。
收藏了。。碰到要用ASP的就用你的。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.88.59.138</wp:comment_author_IP>
			<wp:comment_date>2009-04-12 13:26:04</wp:comment_date>
			<wp:comment_date_gmt>2009-04-12 13:26:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[一定要改成自己的，我那个有问题，都没办法出一个合适所有站的版本。也可能是我没想好，再说asp的东西再也不想弄]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>1.1 什么是元编程？</title>
		<link>http://railser.cn/blog/what-is-metaprogramming</link>
		<pubDate>Wed, 22 Oct 2008 14:02:53 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=52</guid>
		<description></description>
		<content:encoded><![CDATA[从今天开始，我将陆续在这里复制别人翻译好的书。这是很无耻的一件事，但是为了流量。我就无耻一把了。翻译者如果看到本文，有权利要求我删除相关内容。希望你们看不到。

********************************* 我 是 分 割 线 *********************************

Rails 使元编程变得大众化。虽然它肯定不是第一个利用Ruby的广泛功能进行内省（introspection）的应用，但它却很可能是最受欢迎的Ruby应用。为了理解Rails，我们必须首先搞清楚Ruby中使Rails的实现变为可能的那些部分。本章介绍了后文中讨论的技术的基础。

元编程是一种使用代码来编写其它代码以及进行自省的编程技术。Meta（源于希腊语）这个前缀在这里的意思是抽象。使用了元编程技术的代码在两个抽象层次上同时进行工作。

元编程技术在多种编程语言中都可以使用，但更多的还是被应用于动态语言中，因为动态语言提供了更多的在运行时将代码视为数据进行操纵的能力。虽然像C#和Java这样较为静态的语言也提供了反射机制，但是仍然没有诸如Ruby这样的更趋动态性的语言那么透明，这是因为静态语言在运行时其代码和数据是分布在两个层次上的。

自省通常是在这两个层次上的某一个层上完成的。语法层的自省是最底层的——直接检查程序文本或者符号流。基于模板和基于宏的元编程一般来说都是在语法层进行的。

Lisp 通过既可以用于代码也可以用于数据的S表达式（本质上是程序抽象语法树的直接翻译）支持语法层的元编程。Lisp的元编程大量的使用了宏，宏的本质是代码模板。Lisp的这种方式带来的好处是可以在单一的层次上进行编程，代码及数据都以相同的方式表现，唯一的区别在于是否会被估值（evaluate）。然而语法层的元编程模式也有其弊端，用在同一命名空间下运行和估值的代码对两个抽象层次进行操作，会直接导致变量捕获（Variable Capture）和不经意的多次估值这类问题的出现。纵使有标准的Lisp惯用法可以处理这些问题，Lisp程序员仍然是需要学习和考虑更多的东西。

Ruby可以通过ParseTree库来完成语法层的自省，ParseTree可以将Ruby源代码翻译成<a href="http://www.zenspider.com/ZSS/Products/ParseTree" target="_blank">S表达式</a>。使用此库来编写的一个有趣的应用叫做<a href="http://rubyforge.org/projects/seattlerb" target="_blank">Heckle</a>，它是一个“测试的测试”框架，能够对Ruby代码解析及改变，例如改变字符串或者将‘true’和‘false’进行来回的调换。其想法是如果测试覆盖率很好，那么对代码任何部分的任何变更都应该导致单元测试的失败。

与语法自省相对应的一种更高层次的自省叫做语义自省，既通过语言更高层次的数据结构对程序进行探查。在不同的编程语言中语义自省的方式十分不同，在Ruby语言中一般来说都是作用于类及方法层上：创建方法，重写方法，给方法赋予别名（alias）；截取方法调用；操纵继承链。这些技术和语法层自省相比与已有的代码更为正交（相关度更小），因为它们倾向于将已存在的方法视为黑盒而不是修改其内部实现。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2008-10-22 14:02:53</wp:post_date>
		<wp:post_date_gmt>2008-10-22 14:02:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-is-metaprogramming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[test-this-blog]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e4%bb%80%e4%b9%88%e6%98%af%e5%85%83%e7%bc%96%e7%a8%8b]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[贺晋]]></wp:comment_author>
			<wp:comment_author_email>hejin1026@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.174.150.10</wp:comment_author_IP>
			<wp:comment_date>2009-05-05 02:37:13</wp:comment_date>
			<wp:comment_date_gmt>2009-05-05 02:37:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[请问你帖的书是什么书，有没下载地址？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.88.51.188</wp:comment_author_IP>
			<wp:comment_date>2009-05-06 02:20:56</wp:comment_date>
			<wp:comment_date_gmt>2009-05-06 02:20:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好像是一些文章的简要翻译，整理出来的。一个朋友写的，被我拿来帖了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>1.1.1 别重复自己</title>
		<link>http://railser.cn/blog/don-not-repeat-yourself</link>
		<pubDate>Wed, 22 Oct 2008 15:27:40 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[站在更高的角度看可以发现元编程对实现DRY（Don’t Repeat Yourself）原则很有帮助，该原则也被称作“一次且仅仅一次（Once and Only Once）”，DRY原则主张在系统中要表达的一则特定信息只需要出现一次就足够了。重复往往是没必要的，特别是诸如Ruby这样的动态语言。就像函数化抽象可以使我们得以避免重复编写相同或者相似的代码一样，元编程使得我们可以避免重复那些在整个应用中多次出现的概念。

元编程主要是为了简单化。体验元编程技术最简单的方法之一就是寻找出重复的代码并将其提取出来。多次重复的代码可被抽取为函数；多次重复的函数或模式通常可以通过使用元编程将其提取出来。

在这里所说的设计模式是几个领域的交集；模式的设计是为了将解决同一问题时需要重复的次数降低到最小。在Ruby社区中，设计模式没有获得很好的评价。对于一些开发人员来说，模式仅仅是一个很普通的词汇，它用于描述应用中重复出现的问题的解决方案。对于另外的一些开发人员来说，它们则太过工程化了。

固然，模式可能被过度的使用，但是明智的使用则另当别论。设计模式到目前为止只是在减少认知复杂性方面非常有用。在Ruby中，一些细粒度的模式因为其透明性非常高，已不适于称其“模式”了；它们事实上已经成为一种习惯用法，大多数 “以Ruby方式思考（think in Ruby）” 的程序员都会不加思索的使用它们。模式应该被当作描述架构的一个词汇，而不是实现了某种解决方案的一个预先打包好的库文件。从这个角度想，好的Ruby设计模式与好的C++设计模式相比有非常大的差别。

元编程通常不应该被简单的用来减少代码重复。你应该经常评估是否有另外的技术选择能更好的解决问题，例如函数化抽象。但是，在少数情况下通过使用元编程来减少重复代码是最佳的解决方式。例如，当几个非常相似的函数必须得定义在相同的一个对象上时，就像ActiveRecord helper方法，元编程就可以发挥其作用了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2008-10-22 15:27:40</wp:post_date>
		<wp:post_date_gmt>2008-10-22 15:27:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>don-not-repeat-yourself</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e5%88%ab%e9%87%8d%e5%a4%8d%e8%87%aa%e5%b7%b1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之创建项目</title>
		<link>http://railser.cn/blog/creating-a-project</link>
		<pubDate>Wed, 22 Oct 2008 17:05:18 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=85</guid>
		<description></description>
		<content:encoded><![CDATA[用TextMate创建项目是贼简单的。你可以创建一个空的项目并往里面放你需要的文件。选择File下的New Project (Ctrl+Apple+N)。空白的项目创建之后，有一个很大的提示告诉你如何操作下一步。就像它说的一样，随便把一些文件拖拽到那个边栏里面，他就会成为你项目中的文件并且一直显示在边栏里面了。

你可以用鼠标拖拽的方式操作边栏里面的文件。也可以用边栏下面那个文件夹按钮来创建一个文件夹。按住Apple键并且选择多个文件然后点边栏下面的那个动作菜单里面的Group Selected Files命令，就可以把这些文件搞成一个分组。

<a href="http://railser.cn/wp-content/uploads/2008/10/group-select-files.gif"><img class="alignnone size-medium wp-image-87" title="group-select-files" src="http://railser.cn/wp-content/uploads/2008/10/group-select-files-300x200.gif" alt="" width="300" height="200" /></a>

你可以选择是否显示边栏，快捷键是Ctrl+Option+Apple+D。当你的TextMate窗口靠右侧的时候，边栏会自动出现在左侧，反之亦然。而且它会自动记录你边栏是出现在哪一侧的，下次仍然会出现在那一侧。

最后你可以保存项目了，快捷键是Ctrl+Apple+S]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2008-10-22 17:05:18</wp:post_date>
		<wp:post_date_gmt>2008-10-22 17:05:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-a-project</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[textmate%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之在选取文件</title>
		<link>http://railser.cn/blog/moving-between-files</link>
		<pubDate>Thu, 23 Oct 2008 03:29:28 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[项目中最重要的一点是快速访问项目中的文件。你可以用鼠标打开任何你需要打开的文件。TextMate中，如果你单击的是一个文本文件，单击会打开它。TextMate会根据文件的扩展名或者读取文件的前8KB来判断它是不是一个合法的UTF-8(ASCII)文本。

如果你需要更改TextMate和文件的关联类型，在边栏中选中文件，然后点边栏最下面的动作按钮选择 Treat Files with “ext” Extension as Binary/Text。这样TextMate就会记住这个文件类型的设置。在边栏中双击一个文件，会用默认关联的程序打开它，有可能不是TextMate。比如你在TextMate的边栏中双击了一个pdf文件，会用相关阅读器打开它。

你可以在代码窗口和边栏之间迅速切换，快捷键是Ctrl+Tab。当边栏得到焦点的时候，你可以使用方向键上，下来移动选取，也可以用方向键右来展开一个文件夹或者用方向键左来折叠它们。当你选取了一个想打开的文件，按一下回车键就和单击鼠标一样会打开这个文件。当你选取了文件时，单击空格键就可以给文件改名。

用上面介绍的方式来打开一个文件的确挺简单滴，但是如果你的项目有20个顶级文件夹和7000个文件。当你想这么打开一个文件或许累屁了。下面叫你一个简单滴方法。

加入你知道你要打开的文件的名字，那么选择Navigation中的Go to File按钮(Apple+T)。在打开的对话框中输入文件名，在下方的文件列表中用方向键来选取文件并用回车来打开这个文件。你会发现这个功能比你想的还强大，例如你要打开的文件名是pitches_controller_test.rb，那么你只需要输入pct，下面的文件列表就会自动列出相关的文件(看图)。现在选择这个pitches_controller_test.rb，TextMate会记住你的这次操作。下次你再用这个功能的时候，当你输入pct那么pitches_controller_test.rb会自动列到第一项来。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102302.gif"><img class="alignnone size-medium wp-image-95" title="2008102302" src="http://railser.cn/wp-content/uploads/2008/10/2008102302-300x221.gif" alt="" width="300" height="221" /></a>

当你打开了7.8个文件咋整呢？就像Firefox能切换标签页一样。TextMate也让你这么干。你可以用Apple+数字键1-9来切换不同的代码窗口。也可以用Option+Apple+方向键左右来切换(看图)。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102301.gif"><img class="alignnone size-medium wp-image-96" title="2008102301" src="http://railser.cn/wp-content/uploads/2008/10/2008102301-300x175.gif" alt="" width="300" height="175" /></a>

等等，我知道看这个文章的你跟我一样也是一个傻了吧机的程序员。那么还有一个快捷键你能用的上，那就是Option+Apple+方向键上。它会在你项目中的同名（但扩展名不同）的文件之间切换。举个例子，你可以用这个快捷键在项目中的 widget.h 和  widget.c 之间切换。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2008-10-23 03:29:28</wp:post_date>
		<wp:post_date_gmt>2008-10-23 03:29:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-between-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之用快捷键创建项目</title>
		<link>http://railser.cn/blog/shortcuts-for-creating-projects</link>
		<pubDate>Thu, 23 Oct 2008 03:41:01 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=98</guid>
		<description></description>
		<content:encoded><![CDATA[手动拖入文件和文件夹到TextMate项目中只是创建项目的一种方式，也是我最不常用的。有一个常用的办法是，把TextMate放到你的Dock上，确认TextMate处于运行中(看看你的Dock的TextMate图标下面有没有一个圆珠)。现在你可以把文件和文件夹拽到TextMate的图标上，它就会自动创建一个项目了，不过别忘了保存这个项目。不然你就白忙乎了。

在Terminal中创建TextMate项目是俺最喜欢的形式。你可以在mate命令后跟随多个文件名，文件夹或者一个shell命令。它会自动创建一个包含这些文件的TextMate项目。样例代码如下：
<pre class="ruby">mate . # a project of the current directory
mate a.txt b.txt # a project of two files
mate *.csv # a project of CSV files in the current directory</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2008-10-23 03:41:01</wp:post_date>
		<wp:post_date_gmt>2008-10-23 03:41:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcuts-for-creating-projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.1.2 警告 和 1.1.3 自底向上编程</title>
		<link>http://railser.cn/blog/bottom-up-programming</link>
		<pubDate>Thu, 23 Oct 2008 03:53:47 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[警告：重写自身的代码可能会非常难以编写和维护。你所选择的编程工具应该切合你的编程需要——它们带给你更多的便利而不是更繁琐。这里介绍的技术应该成为你工具箱中的更多工具之一，而不是唯一的工具。

自底向上编程是从Lisp世界借用过来的一个概念。其根本的思想就是从最底层开始建立抽象。先构建好最底层的结构之后，本质上你就是在基于这些抽象来构建其余的程序了。从某种意义上讲，你构建程序的过程就是在编写一种特定领域语言(domain-specific language)，然后用这种语言来实现你的程序。

此概念在ActiveRecord中极度的有用。在建立了基本的schema和model对象后，你就可以开始基于此来搭建抽象了。许多Rails 项目都是这样，在还没有编写一行controller代码，甚至在没有进行Web 界面的设计的时候，就已开始了基于模型进行抽象的工作了。

<pre name="code" class="ruby">
class Order < ActiveRecord::Base
  has_many :line_items
  def total
    subtotal + shipping + tax
  end

  def subtotal
    line_items.sum(:price)
  end

  def shipping
    shipping_base_price + line_items.sum(:shipping)
  end

  def tax
    subtotal * TAX_RATE
  end
end
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2008-10-23 03:53:47</wp:post_date>
		<wp:post_date_gmt>2008-10-23 03:53:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bottom-up-programming</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[112-%e8%ad%a6%e5%91%8a-%e5%92%8c-113-%e8%87%aa%e5%ba%95%e5%90%91%e4%b8%8a%e7%bc%96%e7%a8%8b]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.2.1 类和模块</title>
		<link>http://railser.cn/blog/class-and-module</link>
		<pubDate>Thu, 23 Oct 2008 03:56:47 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=105</guid>
		<description></description>
		<content:encoded><![CDATA[类（class）和模块（module）是Ruby面向对象编程的基础。类主要负责封装及分离事物。模块则用于mixin——将一系列功能打包添加到类上为该类增加新行为，可以代替多重继承。模块也可用来将类分隔到不同的命名空间中。

在Ruby中，每个类名都是一个常量，因此Ruby要求类名必须以大写字母开始。此常量代表类对象，也就是一个Class类的对象，但它区别于“Class”对象，后者表示真正的Class类。当我们说“class object”（小写的c）的时候是指任何一个表示类的对象（包括Class自己）。当我们说“Class object”（大写的C）的时候是指Class 类，它是所有类对象的超类。
注：如果我们还不够迷糊的话——Class对象也有Class类。

Class类继承自Module类；每个类也都是一个模块。但是有个非常重要的区别。类不能mixin到其它类中，也不能扩展对象；只有模块可以这么做。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2008-10-23 03:56:47</wp:post_date>
		<wp:post_date_gmt>2008-10-23 03:56:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>class-and-module</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.2.2 方法查找(1)</title>
		<link>http://railser.cn/blog/method-lookup-1</link>
		<pubDate>Thu, 23 Oct 2008 05:37:05 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[Ruby中的方法查找可以让人很困惑，但它却非常有规律。理解复杂情况的最简单方法就是将Ruby在后台创建的数据结构直观化。每个Ruby对象在内存中都有一个域的集合：
<em>注：除了立即对象（immediate objects），如Fixnums，symbols，true，false和nil；我们在后面会介绍这些。</em>
<ul>
	<li><strong>klass</strong> 指向这个对象的类对象的指针。（它是klass而不是class，这是因为后者在Ruby和C++中是保留字；如果叫做class，Ruby将用C编译器而不是用C++编译器编译。这些有意的误拼在Ruby的每个地方都有使用）。</li>
</ul>
<ul>
	<li><strong>iv_tbl</strong> “实例变量表”，是一个包含了属于此对象实例变量信息的哈希表。</li>
</ul>
<ul>
	<li> <strong>flags</strong> 一个比特组，含有一些状态信息的布尔值，例如对象是否被污染，垃圾收集标记位，以及对象是否被冻结等。</li>
</ul>
每个Ruby类或模块不但具有上边的这些域，它们还有另外两个域：
<ul>
	<li><strong>m_tbl</strong> “方法表”,一个包含了类或者模块中的所有实例方法信息的哈希表。</li>
</ul>
<ul>
	<li> <strong>super</strong> 指向此类或者模块的超类的指针。</li>
</ul>
这些域在方法查找中扮演重要的角色，理解这些都非常必要。要特别指出的是，你应该密切关注klass与类对象的super指针之间的区别。
<h4>规则</h4>
方法查找规则非常简单，但需要知道Ruby数据结构是如何工作的。当一个消息发送到一个对象时，将会有下面的这些步骤依次发生：
<em>注：Ruby中通常使用Smalltalk的消息传递术语，当一个方法被调用时，被叫做在发送一个消息，消息接收者是这个消息被发送到的对象。</em>
<ol>
	<li>Ruby 根据接收者的klass 指针指向的对象中搜索m_tbl 中的方法并进行匹配。（klass 指针的目标总是一个类对象）</li>
	<li>如果没有发现匹配的方法，Ruby将进而根据此类对象的super指针指向的超类m_tbl中继续搜索。</li>
	<li>Ruby以这种方式处理直到方法被找到或者直到到达了超类链的顶端。</li>
	<li>如果在此链的所有对象上都未发现有匹配的方法，Ruby在原有方法调用者上调用method_missing 方法。这将重新开始上边的那些处理过程，但这次是查找method_mssing而不是原来的那个方法了。</li>
</ol>
这些规则应用的很普遍。所有这些在方法寻找中涉及到的有趣事情（混合，类方法，及自由类）都是因为有了klass和super指针。现在开始将更细致的讨论这个过程。
<h4>类继承</h4>
方法寻找过程可能会很让人困惑，所以我们要从简单的开始。下面的代码是Ruby中最简单的类定义：
<pre name="code" class="ruby">class A
end</pre>
这段代码在内存中将生成下面这样的数据结构
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102303.gif"><img src="http://railser.cn/wp-content/uploads/2008/10/2008102303-300x160.gif" alt="" title="2008102303" width="300" height="160" class="alignnone size-medium wp-image-114" /></a>
上图是单个类的数据结构。双线边的方框表示类对象——它的klass指针指向Class 对象。A的super指针指向的是Object类对象，表示A继承了Object。为了清晰起见，从现在开始我们将在不会引起歧义的地方忽略指向Class，Module及Object的默认klass指针。

其次简单的情况是从一个类进行继承。类的继承简单的遵循了super指针的指向。例如，我们将创建一个继承自类A的类B：
<pre name="code" class="ruby">class B < A
end</pre>
这段代码的最终数据结构如图
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102304.gif"><img src="http://railser.cn/wp-content/uploads/2008/10/2008102304-124x300.gif" alt="" title="2008102304" width="124" height="300" class="alignnone size-medium wp-image-118" /></a>
super 关键字总是指示出方法查找的链路方向，以下面的代码为例：
<pre name="code" class="ruby">
class B
  def  initialize
    logger.info “Creating 8 object”
    super
  end
end
</pre>
在initialize方法中的super调用将遵循标准的方法查找链，以A#initialize开始。
<h4>类的实例化</h4>
现在我们有机会看看方法查找是如何进行的了。首先创建类B的一个实例：
<pre name="code" class="ruby">
obj = B.new
</pre>
这将创建一个新的对象并且设置其klass指针指向B的类对象（见图）。
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102305.gif"><img src="http://railser.cn/wp-content/uploads/2008/10/2008102305-300x299.gif" alt="" title="2008102305" width="300" height="299" class="alignnone size-medium wp-image-120" /></a>
在单边方框中的obj表示一个传统意义上（plain-old）的对象实例。需要注意的是图中的每个方框都是一个对象实例。不过双线方框代表的是Class类的实例对象（因此它们的klass指针指向Class对象）。

当发送一个消息到obj时
<pre name="code" class="ruby">
obj.to_s
</pre>
将遵循下面的这些链路：
<ol>
	<li>obj的klass指针将传递到B；在B所拥有的方法（在m_tbl中）中查找匹配的方法。</li>
	<li>如果在B中没有找到相应的方法，那么将根据B的super指针指向的对象进行搜索，也就是在A中搜索相应的方法。</li>
	<li>如果在A中仍然没有发现有相应的方法，那么将在A的super指针指向的对象中进行查找，即在Object中进行查找。</li>
	<li>Object类在其原生代码（rb_any_to_s）中含有to_s方法。它将被调用并且产生一个类似于“#<b:0x1cd3c0>” 的值。rb_any_to_s 方法检查接收者的klass指针以便决定要显示哪个类的名字；因此，虽然被调用的方法存在于Object中但仍然显示为B。</li>
</ol>
<h4>模块的引入</h4>
当我们利用模块进行mixin的时候情况将变得更加复杂。Ruby使用ICLASSes 来处理模块的引入，这是模块的代理。当将一个模块引入到类的时候，一个代表了被引入模块的ICLASS 将被Ruby插到引用此模块的类对象的super链路上。

在下面的模块引入示例中，为了简单起见这里暂时忽略了B的存在。先定义一个模块并将其混入A，这将生成如图1-4的数据结构：
<pre name="code" class="ruby">
module Mixin
  def mixed_method
    puts "Hello from mixin"
  end
end
class A
  include Mixin
end
</pre>
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102306.gif"><img src="http://railser.cn/wp-content/uploads/2008/10/2008102306-290x300.gif" alt="" title="2008102306" width="290" height="300" class="alignnone size-medium wp-image-122" /></a>
从这儿开始ICLASS将登堂入室开始发挥起作用。从A指向Object的super链路被一个新的ICLASS阻隔了开来（即图中的虚线方框）。ICLASS是Mixin模块的代理，它包含指向Mixin的iv_tbl（实例变量）和 m_tbl（方法）的指针。

从图上可以很容易的看得出为什么需要代理类；这是因为同样的一个模块可能被任意多个不同的类混合而且这些类可能继承自其它的不同类（这样它们就有了不同的super指针）。将Mixin直接插入到查找链路是不合适的，因为当他被两个拥有不同父类的类混合时其super指针将不得不指向两个不同的物体。

实例化后的A类，其结构如图所示：
<pre name="code" class="ruby">
objA = A.new
</pre>
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102307.gif"><img src="http://railser.cn/wp-content/uploads/2008/10/2008102307-300x202.gif" alt="" title="2008102307" width="300" height="202" class="alignnone size-medium wp-image-123" /></a>
在objA上调用混合方法mixed_method:
<pre name="code" class="ruby">
objA.mixed_method
#&gt;&gt;Hello from mixin
</pre>
将有下面的方法查找过程发生：
<ol>
<li>objA的类，即在A专用查找匹配的方法。将不会找到匹配的方法。</li>
<li>根据A的super指针指向的Mixin的代理ICLASS中进行查找，看看是否有匹配的方法。因为代理的m_tbl与Mixin的m_tbl一模一样，所以mixed_method方法将被查找到并进行调用。</li>
</ol>

在很多种编程语言中的多重继承都深受菱形难题的困扰，它是指当解析一个对象上的方法调用的时候发现此对象的类拥有一个菱形的继承路径，而这将导致解析过程中出现不二意性，如下图所示。
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102308.gif"><img src="http://railser.cn/wp-content/uploads/2008/10/2008102308-300x280.gif" alt="" title="2008102308" width="300" height="280" class="alignnone size-medium wp-image-129" /></a>
如图，如果通过类D的一个对象调用定义在类A中的一个方法，而类A中的这个方法被B和C都进行覆盖，这样就产生了歧义，系统不知道到底调用哪个方法了。Ruby是通过线性化引入的顺序来解决这个问题的。当进行方法调用的时候，查找链以线性的方式搜索，当然也包括那些被插入到查找链路中的ICLASS。

首先，Ruby不支持多重继承；然而，多个模块可以被混入到类中或者其他的模块中。因此，A、B、及C必须是模块。可以看出这样就没有歧义发生了，这是因为被选择为调用的方法是最后一个被插入到查找链路的那个：
<pre name="code" class="ruby">
module B
  include A
  def hello
    "Hello from B"
  end
end
module C
  include A
  def hello
    "Hello from C"
  end
end
class D
  include B
  include C
end
D.new.hello # => "Hello from C"
</pre>

如果将引入的顺序改变一下其输出结果也会相应的改变：
<pre name="code" class="ruby">
class D
  include C
  include B
end
D.new.hello # => "Hello from B"
</pre>
在最后的这个示例中，B被最后引入，那么其对象图将与如下图所示的一致（简单起见，指向Object与Class的指针在此被省略了）。
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102309.gif"><img src="http://railser.cn/wp-content/uploads/2008/10/2008102309-300x202.gif" alt="" title="2008102309" width="300" height="202" class="alignnone size-medium wp-image-130" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>111</wp:post_id>
		<wp:post_date>2008-10-23 05:37:05</wp:post_date>
		<wp:post_date_gmt>2008-10-23 05:37:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>method-lookup-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[method-lookup]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.2.2 方法查找(2)</title>
		<link>http://railser.cn/blog/method-lookup-2</link>
		<pubDate>Thu, 23 Oct 2008 07:09:32 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[<h4>单例类</h4>
单例类（又称元类或者本征类，请参阅下面的“单例类术语”解释）允许一个对象的行为能够区别于同一类的其他对象的行为。你以前可能已经见过打开单例类的一些语句了：
<strong>单例类术语</strong>

<em>将元类这个术语用在单例类上似乎并不很准确。当称一个类为“元”的时候意味着它在某种意义上比普通的类更抽象。但也有例外，单例类仅仅是属于某特定实例的一个类。</em>

<em>真正的元类见于诸如提供了丰富的元对象协议的Smalltalk等语言中。Smalltalk的元类本身就是类而且其实例也是类。同样的，Ruby中唯一一个元类是Class，因为在Ruby中的所有类均是Class的实例。</em>

<em>另一个较普遍的用于替代单例类的术语叫做本征类，它源于德语eigen（意为“它自己的”）。一个对象的元类就是它的本征类（它自己的类）。</em>
<pre name="code" class="ruby">class A
end

objA = A.new
objB = A.new

objA.to_s # =&gt; "#&lt;A:0x1cd0a0&gt;"
objB.to_s # =&gt; "#&lt;A:0x1c4e28&gt;"

class &gt;&gt; objA #打开objA的单例类
  def to_s; "Object A"; end
end

objA.to_s # =&gt; "Object A"
objB.to_s # =&gt; "#&lt;A:0x1c4e28&gt;"</pre>
class &gt;&gt; objA 表示打开objA的单例类。添加到单例类的实例方法与查找链路上的实例方法是一样的。其数据结构如图所示
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102310.gif"><img class="alignnone size-medium wp-image-132" title="2008102310" src="http://railser.cn/wp-content/uploads/2008/10/2008102310-286x300.gif" alt="" width="286" height="300" /></a>

上例中的objB是类A的一个实例。如果你问Ruby解释器，它将会告诉你objA也是类A的实例：
<pre class="ruby">objA.class # =&gt; A</pre>
然而这仅仅是表象，其背后隐藏着其他的一些情况。另一个类对象已经被插入到查找链路中了。它就是objA的单例类。本文当中将其标识为“Class：objA”。Ruby也给他起了一个相似的名字：#&lt;Class:#&lt;A:0x1cd0a0&gt;&gt;。与所有的其它类一样，单例类的klass指针（未显示出来）也指向Class对象。

单例类在此被标记为虚类（flags中的一个标记位被用来标识其为一个虚类）。虚类不能被实例化，而且一般来说在Ruby中看不到它，除非我们特意去找它。当我们问Ruby objA的类是哪个的时候，它将跟随klass和super指针的继承路径上溯到第一个非虚类为止。

因此，Ruby将告诉我们objA的类是A。需要记住的一点是：一个对象的类可能与klass指向的对象并不一致。单例类之所以称其为单例是是因为每个对象仅有一个单例类。这样，我们才能够毫无歧义的找到“objA的单例类”或者Class:objA。在我们的代码中可以假设单例类确实存在；但事实上考虑到执行效率，它只有在第一次使用的时候才被创建。

Ruby允许单例类被创建在除了Fixnums和symbol的任意对象上。Fixnums和symbol是立即值(immediate values)（为了提高执行效率，它们本身将被直接存入到内存中，而不是用一个指针指向其数据结构）。因为它们自身被保存了进去，所以它们是没必要拥有klass指针的，进而也没有办法改变其方法查找路径。

你可以为true，false或者nil创建单例类，但是被返回的单例类与该对象原来的类一样。这些值分别是TrueClass，FalseClass及NilClass的单例实例（仅有的实例）。当你询问true的单例类是什么的时候，你将会得到TrueClass，因为立即值true是TrueClass唯一可能的实例。在Ruby中：
<pre name="code" class="ruby">true.class # =&gt; TrueClass
class &lt;&lt; true; self; end # =&gt; TrueClass
true.class == (class &lt;&lt; true; self; end) # =&gt; true</pre>
<h4>类对象的单例类</h4>
这一节会比较复杂。要时刻记得方法查找的基本规则：首先Ruby根据对象的klass指针指向的对象进行方法查找；然后Ruby继续沿着查找链中的super指针的方向查找，直到找到合适的方法或者到达到最顶层。

需要牢记的另一重要事项就是类本身也是对象。就像传统的对象有一个单例类一样，类对象亦有其自己的单例类。这些单例类也可以象所有其他对象一样能够有各种各样的方法。既然一个类对象可以通过其klass指针来访问它的单例类，那么单例类的实例方法也就是这个类对象的类方法。下一段代码的完整数据结构如图所示：
<pre name="code" class="ruby">class A
end</pre>
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102311.gif"><img class="alignnone size-medium wp-image-144" title="2008102311" src="http://railser.cn/wp-content/uploads/2008/10/2008102311-282x300.gif" alt="" width="282" height="300" /></a>
类A继承自Object。A的类对象就是Class类型。Class继承自Module而Module继承自Object。存储在A的m_tbl中的方法是A的实例方法。那么当在A上调用一个类方法将发生什么呢？
<pre name="code" class="ruby">A.to_s # =&gt; "A"</pre>
将A作为接收者并以相同的方法查找规则进行方法的查找。（记住，A是一个代表A的类对象的常量）首先Ruby根据A指向Class的klass指针，在Class的m_tbl中查找名字为to_s的方法。没有查找到，Ruby继续跟随Class指向Module的super指针，在此处找到了to_s方法(在原始代码中为rb_mod_to_s)。

请不要感到惊奇，也没什么不可思议的。类方法可以被像实例方法相同的方式查找的到——唯一不同的是判断接收是类还是类的一个实例。

到现在为止我们已经知道类方法是如何被查找到的，这给了我们这样一种印象，那就是，似乎可以通过在Class对象（将它们插入到Class的m_tbl）上定义实例方法来达到在任何类上定义更多类方法。事实上，确实也是这样的：
<pre name="code" class="ruby">class A; end
# from Module#to_s
A.to_s # =&gt; "A"
class Class
  def to_s; "Class#to_s"; end
end
A.to_s # =&gt; "Class#to_s"</pre>
这是个非常有趣的小技巧，但实用程度很有限。通常我们希望在每个类中定义其独有的类方法。在这个时候类对象的单例类就要被用到了。为了开启一个类的单例类，只需要在定义单例类的语句中将类名当作对象传递给进去就可以了：
<pre name="code" class="ruby">class A; end
class B; end
class &lt;&lt;A
  def to_s; "Class A"; end
end
A.to_s # =&gt; "Class A"
B.to_s # =&gt; "B"</pre>
其结果数据结构如图所示。为了清晰起见，在这里类B被省略了。
<a href="http://railser.cn/wp-content/uploads/2008/10/2008102311.png"><img class="alignnone size-medium wp-image-145" title="2008102311" src="http://railser.cn/wp-content/uploads/2008/10/2008102311-300x212.png" alt="" width="300" height="212" /></a>
to_s方法被加到A的单例类或者Class:A。现在，当调用A.to_s的时候，Ruby将跟随A指向Class:A的klass指针并且调用相适应的方法。

在方法定义中还有一点需要指出：在类或者模块的定义中，self总是指向类或模块对象：
<pre name="code" class="ruby">class A
  self # =&gt; A
end</pre>
因为在内部A与self均指向同一个对象，所以在A的类定义中，class &lt;&lt; A 也可以被 写为class &lt;&lt; self。这种惯用法在Rails的类方法定义中随处可见。下例将展示定义类方法的所有方式：
<pre name="code" class="ruby">class A
  def A.class_method_one; "Class method"; end
  def self.class_method_two; "Also a class method"; end
  class &lt;&lt; A
    def class_method_three; "Still a class method"; end
  end
  class &lt;&lt; self
    def class_method_four; "Yet another class method"; end
  end
end
def A.class_method_five
  "This works outside of the class definition"
end
class &lt;&lt; A
  def A.class_method_six
    "You can open the metaclass outside of the class definition"
  end
end

# Print the result of calling each method in turn
%w(one two three four five six).each do |number|
  puts A.send(:"class_method_#{number}")
end
# &gt;&gt; Class method
# &gt;&gt; Also a class method
# &gt;&gt; Still a class method
# &gt;&gt; Yet another class method
# &gt;&gt; This works outside of the class definition
# &gt;&gt; You can open the metaclass outside of the class definition</pre>
这也意味着在一个单例类的定义中——就像在任何其他类的定义一样——self指向被定义的类对象。既然代码块或类定义的返回值是最后一条语句执行的返回值，那么class &lt;&lt; objA; self; end 的值就是objA的单例类。代码class &lt;&lt; objA将开启单例类，self（即单例类）就是从类定义中返回的。

将他们放在一起，我们能够开发Object类，可以添加一个实例方法到那些能够返回对象单例类的对象上：
<pre name="code" class="ruby">class Object
  def metaclass
    class &lt;&lt; self
       self
    end
  end
end</pre>
此方法奠定了Metaid的基础，稍后将详述之。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date>2008-10-23 07:09:32</wp:post_date>
		<wp:post_date_gmt>2008-10-23 07:09:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>method-lookup-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之项目的文件夹引用</title>
		<link>http://railser.cn/blog/textmate-folder-references</link>
		<pubDate>Thu, 23 Oct 2008 04:18:00 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[TextMate 支持两种项目。前面那章创建的是第一种项目，不管文件在硬盘上存在哪里只把它拖入到TextMate的边栏就可以。另外一种是保存文件系统。当你创建的项目文件在同一个文件夹里面，就创建了第二种项目。

项目中的文件夹引用的是硬盘上的真实对象。这有两个好处。第一，当应用程序得到焦点的时候 TextMate 会自动扫描该文件夹，如果其中的内容有更改则自动更新文件。其次，边栏下面那个文件夹按钮会在硬盘上创建真实的文件夹。新创建的文件夹在你当前所选的文件夹之内。

所以，你可以直接在TextMate里面操作和管理文件，而不用再跑到Finder里面去。所以我觉得还是第种组织项目的办法更棒。你慢慢会发现，整个项目处于同一个顶级文件夹是最方便的。因为你可以很方便的用svn来提交或者更新项目。很难想象，你把项目放到不同的文件夹去你该如何更新？麻烦死你！以后我会继续翻译如何用TextMate操作SVN命令，不过估计至少得2个月之后。哈哈。

那什么时候采用文件和组的项目呢？当你想操作不同文件夹下面的文件或者想在边栏中从新排列文件但是不想影响硬盘上的实际对象时。读者可能被我绕晕了，没关系举个例子。假如你是一个CSSer，每天的任务可能就是给公司的10个项目修改CSS，那么你就可以建立一个名为CSS-Work的项目，把不同项目的css文件都拖放到边栏中，并且根据轻重缓急组成不同的分组。明白了？

不论你采用的是哪种方式来组织项目文件，都可以使用边栏下面的Rename 或者 Remove Selected Files按钮。注意，根据你文件的组织方式不同。Remove Selected Files按钮可能仅仅是把文件从边栏里面删除或者是真的把它们扔到Trash去。

当然你也可以用边栏下面那个创建文件的按钮，如果你使用的是文件夹引用的方式来管理项目文件。那你在TextMate里面创建的文件就会在你边栏所选的那个文件夹里面创建，同时TextMate会提示你在本地保存文件。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2008-10-23 12:18:00</wp:post_date>
		<wp:post_date_gmt>2008-10-23 04:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>textmate-folder-references</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之限制文件夹引用</title>
		<link>http://railser.cn/blog/limiting-folder-references</link>
		<pubDate>Thu, 23 Oct 2008 08:00:02 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[当把文件夹引入TextMate项目中的时候，你可以过滤一部分不需要的文件和文件夹。如果你的项目是通过分组来组织项目文件的话，这个功能你就用不了啦，当然你也可以手动来完成。选中你项目边栏中的顶级文件夹，然后点边栏右下角那个 information按钮，看图：

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102320.png"><img class="alignnone size-medium wp-image-160" title="2008102320" src="http://railser.cn/wp-content/uploads/2008/10/2008102320-300x173.png" alt="" width="300" height="173" /></a>

这里有两个地方可以输入正则表达式来过滤，用正则来过滤掉那些你不希望出现在边栏列表里面的文件吧。贼拉方便。你也可以修改TextMate的属性，用快捷键Apple+,打开属性窗口选择文件夹设置。你可以在这里同样用正则来修改其中的内容。它不会影响目前的项目。

何时用这个功能？比如我有一个Rails项目叫做simple。它位于版本控制之下，我可以过滤掉这个项目中的script,log,tmp和doc文件夹。至少我一直都是这么干的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date>2008-10-23 16:00:02</wp:post_date>
		<wp:post_date_gmt>2008-10-23 08:00:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>limiting-folder-references</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之移动光标</title>
		<link>http://railser.cn/blog/moving-around</link>
		<pubDate>Thu, 23 Oct 2008 22:28:01 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=164</guid>
		<description></description>
		<content:encoded><![CDATA[当你停止打字的时候，可能是需要操作光标了。发现上一行有一个错字，你有两个选择。要么用鼠标移动过去，要么用键盘移动光标到该错字的位置。你通常用哪个呢？想想，你的右手离开键盘到鼠标的时间再移动回来。每天你要为此多付出多少时间呢？所以用键盘来进行这一操作无疑是个好主意，TextMate也为这一过程提供了很多快捷键。别担心，他们都是很容易记忆的。

这有一些白痴都知道的操作计算机的通用快捷键：

方向键上 - 光标移动到上一行
方向键下 - 光标移动到下一行
方向键左 - 光标往左移动一个字符
方向键右 - 光标往右移动一个字符

如果这些快捷键加上一个Apple键的话，那么它就会移动到一行甚至文档的边界了：

Apple+方向键上 - 光标移动到文档的开头
Apple+方向键下 - 光标移动到文档的结尾
Apple+方向键左 - 光标移动到本行的开头
Apple+方向键右 - 光标移动到本行的结尾

你也可以使用Option键

Option+方向键上 - 光标移动到列的开头
Option+方向键下 - 光标移动到列的结尾
Option+方向键左 - 光标移动到当前单词的开头
Option+方向键右 - 光标移动到当前单词的结尾

这里列的概念你可能搞不清，看一下下图，按Option+方向键下光标会从 “ﬁrst” 移动到 “data”。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102401.png"><img class="alignnone size-medium wp-image-167" title="2008102401" src="http://railser.cn/wp-content/uploads/2008/10/2008102401-300x101.png" alt="" width="300" height="101" /></a>

如果你是个程序员，可以试试用Ctrl代替Option。他会在 CamelCaseWords 和 snake_case_words 这类的单词之间切换。第一种呢，会依次切换光标到C,C,W。第二种呢会依次切换到s,c,w。

可能你是一个emacs的支持者，没关系TextMate也支持那些你常用的快捷键：

Ctrl+P - 光标移动到上一行
Ctrl+N - 光标移动到下一行
Ctrl+B - 光标向左移动一个字符
Ctrl+F - 光标向右移动一个字符
Ctrl+A - 光标移动到该行开头
Ctrl+E - 光标移动到该行结尾
Ctrl+V -光标移动到文档结尾

这一章介绍滴这些快捷键在mac中的其他程序里面也能用到。比如Mail和Safari，所以好好记住它们吧。有个小提示，最后介绍的这些快捷键有可能跟你使用的TextMate的插件包冲突啊。比如Ctrl+P在Rails这个插件包就是prams[:id]的快捷键了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>151</wp:post_id>
		<wp:post_date>2008-10-24 06:28:01</wp:post_date>
		<wp:post_date_gmt>2008-10-23 22:28:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-around</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e7%a7%bb%e5%8a%a8%e5%85%89%e6%a0%87]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之在行，符号和书签之间移动</title>
		<link>http://railser.cn/blog/moving-to-a-line-symbol-or-bookmark</link>
		<pubDate>Fri, 24 Oct 2008 00:17:58 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[TextMate提供了快捷键让你明确定位。例如你想跳转到指定的行。利用快捷键Apple+L，然后输入行号再按回车就行。

这个方法是挺好，但是实际应用中很少有人会这么用，因为你不可能一直都知道你要去操作第几行吧。好在几乎所有的文档都有自己的组织形式。拿Ruby代码来说，它们都是在一个function或者method定义里的。TextMate会注意到这些，并且用快捷键辅助你迅速定位。

用鼠标点一下编辑窗口的右下角，那里列出了目前文档的header, class, method, 和 functio。随便选择一个，光标会定义到那一行的开头位置。看图：

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102402.png"><img class="alignnone size-medium wp-image-171" title="2008102402" src="http://railser.cn/wp-content/uploads/2008/10/2008102402-300x140.png" alt="" width="300" height="140" /></a>

但是在实际项目中，我们不会去常常拿鼠标选择这个地方。通常咱哥们都是用快捷键。Shift+Apple+T打开Navigation菜单中的Go to Symbol对话框。你可以用方向键来选择，也可以跟前面介绍的一样，使用缩写字母来选择某一个方法。例如输入s w r会选择save_without_revision( )。

如果这些都不能满足你的需要，你可以自己定义书签。定义书签很简单，你可以用Apple+F2键为当前行定一个书签，或者用鼠标点行号前面那个位置。看下面的图。利用快捷键Option+Apple+B可以显示或者隐藏那个书签栏。如果当前页面你已经定义了几个书签那么可以使用F2或者Shift+F2在书签之间顺序或倒序切换。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102403.png"><img class="alignnone size-medium wp-image-172" title="2008102403" src="http://railser.cn/wp-content/uploads/2008/10/2008102403-300x110.png" alt="" width="300" height="110" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2008-10-24 08:17:58</wp:post_date>
		<wp:post_date_gmt>2008-10-24 00:17:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-to-a-line-symbol-or-bookmark</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e5%9c%a8%e8%a1%8c%ef%bc%8c%e7%ac%a6%e5%8f%b7%e5%92%8c%e4%b9%a6%e7%ad%be%e4%b9%8b%e9%97%b4%e7%a7%bb%e5%8a%a8]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Method Missing</title>
		<link>http://railser.cn/blog/method-missing</link>
		<pubDate>Fri, 24 Oct 2008 06:18:00 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[解决了前几篇所有的疑惑后，理解method_missing就变得非常简单。其准则是：如果整个方法查找过程中，直到到达了Object都以失败而告终，那么将再次执行方法查找，但这次查找的是method_missing方法而不是原来调用的方法。如果method_missing方法被找到，它将被传入原方法的调用参数并调用，原调用的代码块也会被传入method_missing方法。

Object中的缺省method_missing（rb_method_missing）函数将抛出一个异常。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2008-10-24 14:18:00</wp:post_date>
		<wp:post_date_gmt>2008-10-24 06:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>method-missing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="post_tag" nicename="ruby"><![CDATA[ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.2.3 Metaid</title>
		<link>http://railser.cn/blog/123-metaid</link>
		<pubDate>Fri, 24 Oct 2008 06:26:09 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[“<a href="http://whytheluckystiff.net/articles/seeingMetaclassesClearly.html" target="_blank">why the lucky stiff</a>”为Ruby元编程创建了一个极小的库，叫做metaid.rb。在任何需要元编程的项目中都可以引进这段非常有用的代码：
<pre name="code" class="ruby">
class Object
  # The hidden singleton lurks behind everyone
  def metaclass; class < < self; self; end; end
  def meta_eval &blk; metaclass.instance_eval &blk; end
  # Adds methods to a metaclass
  def meta_def name, &blk
    meta_eval { define_method name, &blk }
  end
  # Defines an instance method within a class
  def class_def name, &blk
    class_eval { define_method name, &blk }
  end
end
</pre>
这个库在每个对象（函数调用接收者）上定义了四个方法：
<ul>
	<li>metaclass 指向接收者的单例类（self）</li>
	<li>meta_eval 与单例类的class_eval等价。在接收者的单例类上下文中执行给定代码块。</li>
	<li>meta_def 在接收者的单例类中创建一个方法。如果接收者是一个类或者模块，那么创建出来的是类方法（即接收者的单例类的实例方法）。</li>
	<li>class_def 在接收者中创建一个实例方法（接收者必须是类或者模块）。</li>
</ul>
Metaid简短的代码却带来了不小的便利。通过使用这些简洁的方式来引用和增强元类，你的代码将变得比到处都放置诸如class &lt;&lt; self; self; end等代码更清晰。这些技巧越简洁易懂，你就越可能在自己的代码中恰到好处的使用它们。这个例子展示了如何使用Metaid来检查和简化对单例类的更改：
</pre><pre name="code" class="ruby">
class Person
  def name; "Bob"; end
  def self.species; "Homo sapiens"; end
end
</pre>
Person类的类方法作为其单例类的实例方法被添加：
<pre name="code" class="ruby">
Person.instance_methods(false)             # => ["name"]
Person.metaclass.instance_methods -
  Object.metaclass.instance_methods        # => ["species"]
</pre>
通过使用Metaid中提供的方法，我们的方法定义可以编写为如下形式：
<pre name="code" class="ruby">
Person.class_def(:name) { "Bob" }
Person.meta_def(:species) { "Homo sapiens" }
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2008-10-24 14:26:09</wp:post_date>
		<wp:post_date_gmt>2008-10-24 06:26:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>123-metaid</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.2.4 变量查找</title>
		<link>http://railser.cn/blog/variable-lookup</link>
		<pubDate>Fri, 24 Oct 2008 06:46:34 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=181</guid>
		<description></description>
		<content:encoded><![CDATA[在Ruby中有四种类型的变量，它们是全局变量、类变量、实例变量及局部变量。全局变量作用于全局，局部变量只作用于局部，因此下面的讨论均不涉及它们，因为它们不与Ruby的类系统进行交互。
<em>注：还有常量，但是它们不应该被改变。（事实上可以改变，但是Ruby会发出警告。）</em>

实例变量是与特定对象相关的。实例变量以一个@符号开始：@price既是一个实例变量。因为每个Ruby对象都有一个iv_tbl结构，所以任何一个对象都可以有实例变量。由于一个类也是一个对象，所以一个类亦可以拥有实例变量。下面的代码展示了如何访问一个类实例变量的方法：
<pre name="code" class="ruby">
class A
  @ivar = "Instance variable of A"
end

A.instance_variable_get(:@ivar) # => "Instance variable of A"
</pre>
实例变量总是基于self指针指向的对象来解析的。上面的代码，因为self是在class A … end中定义A的类对象，所以@ivar又属于A的类对象。

但是，类变量则不同。任何一个类的实例都可以访问其类变量（就是以@@开头的变量）。类变量也可以被其类定义自身所引用。虽然一个类变量和实例变量相似，但他们不是一回事：
<pre name="code" class="ruby">
class A
  @var = "Instance variable of A"
  @@var = "Class variable of A"
  def A.ivar
    @var
  end
  def A.cvar
    @@var
  end
end

A.ivar # => "Instance variable of A"
A.cvar # => "Class variable of A"
</pre>
在这段代码示例中，@var 与@@var被存储在同一个地方：即A的iv_tbl。然而，他们是不同的变量，这是因为他们具有不同的名字（@符被当作变量名的一部分存储）。Ruby提供了一些方法用于检查被访问的实例变量和类变量，以便保传递中的变量名具有正确的格式：。
<pre name="code" class="ruby">
A.instance_variable_get(:@@var)
# ~> -:17:in `instance_variable_get': `@@var' is not allowed as an instance
    variable name (NameError)
</pre>
类变量的使用有点让人疑惑。因为，它们被共享于整个继承链中，所以在子类中改变一个类变量时其父类的类变量值也被改变。
<pre name="code" class="ruby">
>> class A; @@x = 3 end
=> 3
>> class B < A; @@x = 4 end
=> 4
>> class A; @@x end
=> 4
</pre>
这可能有用，但也可能令人迷惑。通常来说，你需要的会是类实例变量和ActiveSupport提供的可继承类属性（class inheritable attributes）这两者之一，前者独立于继承链，后者以一种受约束定义良好的方式在继承链中进行值传递。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2008-10-24 14:46:34</wp:post_date>
		<wp:post_date_gmt>2008-10-24 06:46:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>variable-lookup</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.2.5 代码块，方法和过程</title>
		<link>http://railser.cn/blog/blocks-methods-and-procs</link>
		<pubDate>Fri, 24 Oct 2008 07:07:42 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[Ruby中的一个强大的特性是有能力将一段代码当作一个对象来处理。这个特性涉及到如下三个类：
<ul>
	<li><strong>Proc</strong>  一个过程（Proc）代表了一个代码块：一段可以在被调用时接收参数并且有返回值的代码。</li>
	<li><strong>UnboundMethod</strong>  它类似于一个过程：它代表一个特定类的实例方法（类方法是类对象的实例方法，因此UnboundMethods同样也可以代表类方法）。一个UnboundMethod 能够在其被调用前必须绑定到一个类。</li>
	<li><strong>Method</strong>  Method对象是已经通过UnboundMethod#bind方法绑定到一个对象上的UnboundMethod。它也可以通过Object@method方法来得到。</li>
</ul>
下面让我们来看看都有哪些途径能够获得Proc和Method对象。我们在例子中使用Fixnum#+方法。我们通常通过二元形式来调用它。
<pre name="code" class="ruby">
3 + 5 # => 8
</pre>
然而，它也可以被当作Fixnum对象的一个实例方法来调用，就像任意其它实例方法一样：
<pre name="code" class="ruby">
3.+(5) # => 8
</pre>
我们可以使用Object#method方法来获得一个表示这个实例方法的对象。这个方法将被绑定到方法被调用的那个对象上，在上面的例子中就是3。
<pre name="code" class="ruby">
add_3 = 3.method(:+)
add_3 # => #&lt;Method: Fixnum#+&gt;
</pre>
此方法可被转换为一个块，或者可被直接带参数调用：
<pre name="code" class="ruby">
add_3.to_proc # => #&lt;Proc:0x00024b08@-:6&gt;
add_3.call(5) # => 8
# Method#[] is a handy synonym for Method#call.
add_3[5] # => 8
</pre>
有两种途径获得非绑定方法。可以在类对象上调用instance_method：
<pre name="code" class="ruby">
add_unbound = Fixnum.instance_method(:+)
add_unbound # => #&lt;UnboundMethod: Fixnum#+&gt;
</pre>
我们同样可以解绑定一个已经被绑定的对象的方法：
<pre name="code" class="ruby">
add_unbound == 3.method(:+).unbind # => true
add_unbound.bind(3).call(5) # => 8
</pre>
也可以绑定UnboundMethod到任何同类的其它对象。
<pre name="code" class="ruby">
add_unbound.bind(15)[4] # => 19
</pre>
但是，目标绑定对象必须是一个同类的实例，否则会得到一个TypeError错误：
<pre name="code" class="ruby">
add_unbound.bind(1.5)[4] # =>
# ~> -:16:in `bind': bind argument must be an instance of Fixnum (TypeError)
# ~>     from -:16
</pre>
得到这个错误是因为+被定义在了Fixnum类上；因此，获得到的UnboundMethod对象必须绑定到一个Fixnum对象（通过kind_of?方法来检验）。假如+ 方法在Numeric(Fixnum和Float都继承自它)上有定义，前述代码应该返回5.5。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2008-10-24 15:07:42</wp:post_date>
		<wp:post_date_gmt>2008-10-24 07:07:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blocks-methods-and-procs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之折叠代码片段</title>
		<link>http://railser.cn/blog/folding-sections-of-code</link>
		<pubDate>Sat, 25 Oct 2008 02:25:07 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=187</guid>
		<description></description>
		<content:encoded><![CDATA[当你移动光标的时候，折叠代码片段不是必须的技术。但是如果你要在文档中跳过大段不需要的代码，或许他还是有用滴。

当你用TextMate编辑一个它能理解的结构文档的时候，编辑窗口的左侧应该有一个折叠标记栏。使用View -&gt; Gutter -&gt; Foldings确认它已经显示出来。

你可以单击折叠符号来选择展开或者折叠代码。也可以使用F1键来进行这一操作，F1会折叠目前光标所在一行的最接近的可折叠代码。如果你进行了这一操作，TextMate会把该代码片段折叠为一行，后面用省略号结尾。而且编辑窗口左侧的折叠符号也会相应的变化。

如果你需要瞄一眼折叠了哪些代码，只需要把鼠标移动到省略号的位置就可以看到了。如下图。点一下省略号，或者把光标移动到折叠代码的这一行并且按F1，就可以展开代码。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102501.png"><img class="alignnone size-medium wp-image-189" title="2008102501" src="http://railser.cn/wp-content/uploads/2008/10/2008102501-300x132.png" alt="" width="300" height="132" /></a>

你可以使用View -&gt; Toggle Foldings at Level或者快捷键来完成大部分的折叠和展开功能。根据文档类型，通常建议你用Option+Apple+2或者Option+Apple+3来折叠代码，尤其当你编辑的是Rails Controller的时候，这个快捷键尤其好用。根据文档嵌套层次的不同，你也可以使用其他数字键来配合使用。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2008-10-25 10:25:07</wp:post_date>
		<wp:post_date_gmt>2008-10-25 02:25:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>folding-sections-of-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e6%8a%98%e5%8f%a0%e4%bb%a3%e7%a0%81%e7%89%87%e6%ae%b5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之文本选择器</title>
		<link>http://railser.cn/blog/making-selections</link>
		<pubDate>Sat, 25 Oct 2008 03:13:34 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=192</guid>
		<description></description>
		<content:encoded><![CDATA[编辑文本的第一部是选择它，选择一些文本之后你可以通过命令移动它，在搜索其中的代码或者干脆过滤删除掉它。这也是为什么TextMate尽可能简单的让你选择任意数量的文本的原因。

首先俺要告诉你一个好消息，前几章里面讲的移动光标的快捷键在选择文本这里一样可以用哦。注意上文介绍的来自于Emacs的那些快捷键不能跟Shift共用。按住Shift键然后再利用移动光标的快捷键。根据光标位置的不同你就可以选取，扩大所选或者撤销所选的文本。下面举个例子
<ol>
	<li>按 Apple+右 把光标移动到行的末尾。</li>
	<li> 按 Shift+Apple+左 选取从行末尾至行开头的全部文本。</li>
</ol>
如果对你来说这一操作需要2步还太麻烦的话。你可以用自定义快捷键或者宏命令来简化。如果可能我会继续翻译那部分。不过那是很遥远很遥远的事啦。还好TextMate内置了这样一条命令，Shift+Apple+L可以选取当前行的文本。另外我个人介绍一个快捷键，Ctrl+W可以选择光标所在的单词。

TextMate有一个唯一的内置选择器Current Scop，快捷键是Ctrl+Option+B。它根据当前文档的语法检查来改变选择范围。你可以使用这个快捷键来选择编程语言特有的元素。例如你可以像下图一样（说实话我很少用这个快捷键）。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102502.png"><img class="alignnone size-medium wp-image-193" title="2008102502" src="http://railser.cn/wp-content/uploads/2008/10/2008102502-300x124.png" alt="" width="300" height="124" /></a>

你可以在Edit -&gt; Select下面找到全部内置的选择器。花点时间在这里，下次当你选择文本的时候你就知道你该用哪个快捷键了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2008-10-25 11:13:34</wp:post_date>
		<wp:post_date_gmt>2008-10-25 03:13:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-selections</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之列选择器</title>
		<link>http://railser.cn/blog/column-selections</link>
		<pubDate>Sat, 25 Oct 2008 07:16:11 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=196</guid>
		<description></description>
		<content:encoded><![CDATA[在传统的选择器基础上，TextMate允许你使用直角选择器或者列选择器。在你拖动鼠标进行选择的时候，可以按住Option键，这样就启用了直角选择器。也可以使用 Edit -&gt; Change to Column Selection或者Option切换是否使用列选择器。

下面的例子告诉你如何快速的产生一个名字列表：
<ol>
	<li>创建一个新的TextMate文档 File -&gt; New 快捷键Apple+N</li>
	<li>输入一些 ﬁrst names，每一个单独占一行。 Jim,Marsha, James, Dana, Andrew。</li>
	<li>Apple+上 移动光标到文档的开头</li>
	<li>Shift+Option+下 选取到列结尾的全部文档。这个快捷键看起来好像没有选取整个列文档，但是由于你的倒数第二行有一个换行符。事实上列选择器已经扩展到最后一行的开头了。下一步会让这一切更清晰。</li>
	<li>按Option打开列选择器，仔细看你所有选取的列前面都有一列细线，大概1像素，这回知道了吧上一步已经选取了整个列。</li>
	<li>输入 last name 例如 Gray，随后跟一个逗号和空格。你会发现刚才选取的所有行同时都增加了。</li>
</ol>
移动光标到新的一行，离开列选择器模式。

令人惊讶的，当使用软包围行的时候列选择器会起冲突。和其它的编辑器不同，TextMate支持打开列选择器View -&gt; Soft Wrap (Option+Apple+W)。然而，列选择器不会把包含的内容当作新行。勾选上View -&gt; Gutter -&gt; Soft Wrap Indicators 之后你可以通过编辑器窗口左边的原点看到哪一行被包含了。 （这一段翻译的不好，我自己也迷糊回头好好研究一下这个用法会修改）。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2008-10-25 15:16:11</wp:post_date>
		<wp:post_date_gmt>2008-10-25 07:16:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>column-selections</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之插入新内容</title>
		<link>http://railser.cn/blog/inserting-new-content</link>
		<pubDate>Sun, 26 Oct 2008 20:12:37 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[TextMate有两个功能在你输入文档的时候会给你提供很大的帮助。当然它们也很常见，单词补完和符号自动配对。

我只需要教你一个键，就可以让单词补完帮你节省大量时间。每当你要更改文档内容的时候，输入几个开头字母，然后按ESC键。TextMate可以自动用其开头的变量，方法，标签或者其他文档中已经存在的单词来自动补完。此外，语法检查器为每种语言都提供了一套默认的自动补完。这对程序员来说是一个非常重要的功能，它可以避免很多打字错误。

如果有多个相关单词供你选择，你只需要多次按ESC就可以在它们之间移动选择。TextMate会根据你本次的选择自动为你排序出现相关词语的顺序，以便为你今后的操作节省更多时间。如果不小心多按了一下ESC，那么可以按Shift+ESC选择前一个。

例如你在编写一些服务端的程序。首先你要敲入一个很长的变量名字  idle_connections 。以后你可是按 idl 然后按ESC来迅速补完这个变量名。根据你文档中以这3个字母开头单词的数量，有时候你可能得多按1，2次ESC键。不过别忘了，TextMate会记录你选择每个单词的次数来帮你排序。这会确保你不会因为手得瑟一下，输入错误的变量名。不单单是编程相关的这些变量，任何你文档中出现的又长又难拼写的单词你都可以这样补完。

你可以在Edit -&gt; Completion下找到这个自动补完的命令，这或许是你最重要的键盘快捷键。相信我，除了担心它可能磨损你的ESC键之外，你真的没理由不常常使用它！

如果你已经开始使用TextMate有段时间了，你可能早就不自觉的用上了符号自动配对功能。大多数情况下，你输入一个左括号(，TextMate会自动给你补上一个右括号)。并且把你的光标定位在括号之间。当你输入完其中的内容后，你手动输入一个右括号)，光标会自动跳出到括号之外。这个功能在大部分符号自动配对功能中都可以使用，包括引号。每种语言都有一些自己特殊的符号配对，例如在CSS中，你输入一个冒号: 会自动给你在其后增加一个分号;

符号自动配对功能的另一个优点它结合文字选择区域。当你选取了一部分文字之后，如果你输入一个可以配对的符号，那么符号的开始符会自动插入到文字之前，而符号的结尾符会插入到文字后面。如下图，相信你会喜欢上这个功能。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008102701.png"><img class="alignnone size-medium wp-image-204" title="2008102701" src="http://railser.cn/wp-content/uploads/2008/10/2008102701-300x80.png" alt="" width="300" height="80" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2008-10-27 04:12:37</wp:post_date>
		<wp:post_date_gmt>2008-10-26 20:12:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>inserting-new-content</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之移动文本</title>
		<link>http://railser.cn/blog/moving-text</link>
		<pubDate>Sun, 26 Oct 2008 20:36:41 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[你可能常常需要把文字移动到不同的地方，Text -&gt; Move Selection为你提供如下功能：
<ul>
	<li>Ctrl+Apple+上 向上移动一行（如果没有选择任何文本则移动当前行）</li>
	<li>Ctrl+Apple+下 向下移动一行（如果没有选择任何文本则移动当前行）</li>
	<li>Ctrl+Apple+左 移动当前所选文字向左一个字符</li>
	<li>Ctrl+Apple+右 移动当前所选文字向右一个字符</li>
</ul>
TextMate的 Text 菜单也可以让读者很容易的进行文本缩进：
<ul>
	<li>Apple+[ 或者 Option + Tab 减少缩进（如果没有选择任何文本则减少当前行的缩进）</li>
	<li>Apple+] 或者 Option + Shift + Tab 增加缩进（如果没有选择任何文本则增加当前行的缩进）</li>
	<li>Option+Apple+[ 根据目前编辑文档的语言类型自动格式化缩进</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2008-10-27 04:36:41</wp:post_date>
		<wp:post_date_gmt>2008-10-26 20:36:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-text</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>代码块转换为过程和过程转换为代码块</title>
		<link>http://railser.cn/blog/blocks-to-procs-and-procs-to-blocks</link>
		<pubDate>Mon, 27 Oct 2008 00:27:09 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[当前的Ruby实现有一点不足：Blocks代码块不总是Procs过程，Procs过程也不总是Blocks代码块。普通的代码块（定义在do…end 或者{}中）必须依附在一个方法调用上，而不能自动成为对象。例如，你不能把代码写成code_block = {puts “abc”}。这就是Kernel#lambda 和Proce.new 的用途：将代码块转换为过程。
<pre name="code" class="ruby">
block_1 = lambda { puts "abc" } # => #&lt;Proc:0x00024914@-:20>
block_2 = Proc.new { puts "abc" } # => #&lt;Proc:0x000246a8@-:21>
</pre>
Kernal#lambda与Proc.new之间仅存在着些许区别。由Kernel#lambda 创建的Proc被调用时返回给调用方法的值是在Proc中给定的值；而由Proc.new 创建的Proc被调用的时候，Proc将试图从当前的函数方法中返回，但是，如果不能从方法调用中返回那么它就抛出LocalJumpError错误。下面是一个具体的例子：
<pre name="code" class="ruby">
def block_test
  lambda_proc = lambda { return 3 }
  proc_new_proc = Proc.new { return 4 }
  lambda_proc.call # => 3
  proc_new_proc.call # =>
  puts "Never reached"
end
block_test # => 4
</pre>
lambda_proc 中的返回语句从lambda中返回3。相反地，proc_new中的返回语句是从函数方法返回，因此——block_test，其返回的值是4。那个puts 语句将永远不能被执行到，因为proc_new_proc.call 语句首先从block_test返回。

通过将块传给一个方法，也能将其转换为过程，与常规的参数传递有所不同的是需要在其前面加上一个&符：
<pre name="code" class="ruby">
def some_function(&b)
  puts "Block is a #{b} and returns #{b.call}"
end

some_function { 6 + 3 }
# >> Block is a #&lt;Proc:0x00025774@-:7> and returns 9
</pre>
相反的，可以将前面加了&符的过程传递给一个需要块作参数的方法：
<pre name="code" class="ruby">
add_3 = lambda {|x| x+3}
(1..5).map(&add_3) # => [4, 5, 6, 7, 8]
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2008-10-27 08:27:09</wp:post_date>
		<wp:post_date_gmt>2008-10-27 00:27:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blocks-to-procs-and-procs-to-blocks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>闭包</title>
		<link>http://railser.cn/blog/%e9%97%ad%e5%8c%85</link>
		<pubDate>Mon, 27 Oct 2008 00:40:38 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[在代码块或者过程访问定义在其作用范围以外的变量时，就会创建闭包（Closures）。即使包含原始变量的代码块已经超出作用范围了，但那些被其它块和过程引用的变量也会被一直被保留着，直到引用它们的块和过程全部超出作用范围。下面的这个极度简化的例子，虽然确实是没有什么实际的用途，但能够很好的解释上面的情景：
<pre name="code" class="ruby">
def get_closure
  data = [1, 2, 3]
  lambda { data }
end
block = get_closure
block.call # => [1, 2, 3]
</pre>
从get_closure中的匿名方法（即lambda）返回的是定义在其作用范围外的局部变量data。只要块变量一直在作用范围内，它将保存其对data的引用，而且这个data的实例也不会被消除(即使get_closure方法已经返回)。需要注意的是每次get_closure被调用时，data将指向不同的变量(因为它是方法局部变量)：
<pre name="code" class="ruby">
block = get_closure
block2 = get_closure
block.call.object_id # => 76200
block2.call.object_id  # => 76170
</pre>
闭包的一个典型的例子就是make_closure方法，它返回一个累加方法，当被执行时进行累加并返回累加的当前值。在Ruby中，make_counter 实现代码如下：
<pre name="code" class="ruby">
def make_counter(i=0)
  lambda { i += 1 }
end
x = make_counter
x.call # => 1
x.call # => 2
y = make_counter
y.call # => 1
y.call # => 2
</pre>
lambda方法创建了一个闭包，它覆盖了局部变量i的当前值。该变量不仅可以被访问，其值亦可以被修改。每个闭包获得的是各自不同的变量实例（因为实例化make_counter的时候它们都是局部变量），因此x与y引用了不同的局部变量i的实例，这些实例拥有自己独立的状态。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2008-10-27 08:40:38</wp:post_date>
		<wp:post_date_gmt>2008-10-27 00:40:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%97%ad%e5%8c%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.3.1 运行时方法延迟查找</title>
		<link>http://railser.cn/blog/delaying-method-lookup-until-runtime</link>
		<pubDate>Mon, 27 Oct 2008 00:48:59 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[我们常常想创建一个能够随着运行时的数据变换其方法的接口。Rails中这方面最突出的一个例子就是ActiveRecord的属性存取方法。ActiveRecord对象的方法调用（例如person.name）在运行时将被转换成属性存取。在类方法级别，ActiveRecord提供了极大的灵活性：Person.find_all_by_user_id_and_active(42,true)被转换成相应的SQL查询，如果被查询的属性不存在那么就会抛出一个标准的NoMethodError错误。

其背后的秘密是Ruby的method_missing方法。当对象上的一个不存在的方法被调用的时候，Ruby在抛出NoMethodError前首先检查此对象的类是否存在method_missing方法。method_missing的的第一个参数是被调用方法的名称；剩下的那些参数对应那些传递到被调用方法的参数。任何传递到方法的块也会被传递到method_missing方法。因此，一个完整方法的轮廓如下：
<pre name="code" class="ruby">
def method_missing(method_id, *args, &block)
gem
end
</pre>
使用method_missing有下面的几个缺点：
<ul>
	<li>在方法查找时它要比普通的方法慢。简单的测试表明用method_missing来调用方法的时间要比用常规方式进行调用多耗费两到三倍的时间。</li>
	<li>因为被调用的那些方法根本不实际存在，所以他们只有在方法查找整个过程的最后一步才能被截取到，也就是说它们不会像常规的方法那样被生成文档或者内省。</li>
	<li>因为所有的动态方法都必须通过method_missing方法，所以当一个方法含有各种各样代码，而这些代码又需要动态添加方法时其方法体将变得异常庞大。</li>
	<li>使用method_missing将限制其与API后续版本的兼容性。一旦依赖method_missing生成的那些未定义的方法来完成特定的操作后，在API的后续版本中引入的那些新方法也许会使你的用户失望。</li>
</ul>

ActiveRecord中提供的generate_read_methods 特性是一个弥补这些缺失很好的替代方案。ActiveRecord 不是等待method_missing来截取方法调用而是自己实现了属性的设置和读取方法，这样它们就可以通过常规方法的分派来被调用了。

总的来说这是个强大的方法，Ruby的动态本性使得那些方法在其被第一次调用时，用其更优化的版本来替代其本身成为可能。它也被用于要求迅速响应的Rails路由；我们将在本章的后续部分看到它的影子。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2008-10-27 08:48:59</wp:post_date>
		<wp:post_date_gmt>2008-10-27 00:48:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>delaying-method-lookup-until-runtime</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.3.2 生成式编程：在运行中编写代码</title>
		<link>http://railser.cn/blog/generative-programming-writing-code-on-the-fly</link>
		<pubDate>Mon, 27 Oct 2008 00:55:45 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=223</guid>
		<description></description>
		<content:encoded><![CDATA[生成式编程（Generative Programming）——即用代码来编写代码，是一个包含了若干种技术的一种强大的技术。这种技术可以以最简单的方式实现，例如编写一段用于自动完成编程中一些单调乏味的操作的shell脚本。举个例子，假设你想为每个用户生成一个示例项目的测试fixture：
<pre name="code" class="ruby">
brad_project:
  id: 1
  owner_id: 1
  billing_status_id: 12
john_project:
  id: 2
  owner_id: 2
  billing_status_id: 4
gem
</pre>
如果这种语言不支持可脚本化（可编程）的测试fixture，你恐怕不得不手工编写了。当数据持续增加时这将会变得混乱，而且当这些测试fixture和源数据层有着奇怪的依赖关系的时候手工编写几乎变得不可能。

朴素的生成式编程能够让你编写脚本来从源数据生成这些测试fixture。虽然还不够理想，但是比起全部手工编写已经算是个巨大的进步了。但其维护仍然让人头痛，因为你不得不将那个脚本放在编译过程中，而且需要保证源数据发生了变化时测试fixture被重新生成了。

令人欣慰的是在Ruby或Rails中，这种烦恼几乎是不需要的。几乎每个方面的Rails应用的配置都是可脚本化的，这主要归因于使用了内部的特定领域语言（DSL)。在一个内部的DSL中，你能够支配使用Ruby语言的所有特性，而不仅仅是库文件作者决定要提供给你的那些特定接口。

再返回去看前面的例子，ERb将这个过程变得异常简单。我们可以通过使用ERb的&lt;% %&gt;和&lt;%= %&gt;标签在上面用到的YAML文件中插入任意的Ruby代码，包括我们需要的任何逻辑：
<pre name="code" class="ruby">
< % User.find_all_by_active(true).each_with_index do |user, i| %>
< %= user.login %>_project:
  id: < %= i %>
  owner_id: < %= user.id %>
  billing_status_id: < %= user.billing_status.id %>
< % end %>
</pre>
ActiveReacord中对这个功能的实现几乎不能再简单了：
<pre name="code" class="ruby">
yaml = YAML::load(erb_render(yaml_string))
</pre>
使用了helper方法erb_render:
<pre name="code" class="ruby">
def erb_render(fixture_content)
  ERB.new(fixture_content).result
end
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2008-10-27 08:55:45</wp:post_date>
		<wp:post_date_gmt>2008-10-27 00:55:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generative-programming-writing-code-on-the-fly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之剪切，复制和粘贴</title>
		<link>http://railser.cn/blog/cut-copy-and-paste</link>
		<pubDate>Wed, 29 Oct 2008 06:27:13 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[另一项常用的操作是利用 Edit 菜单的剪切，复制和粘贴功能。这些都是其他软件常见的功能，但是TextMate在这些标准方法的基础之上增加了历史剪贴板。让我们做一个简单的例子来加深理解：
<ul>
	<li>新建一个 TextMate 文档 (Ctrl+N)</li>
	<li>输入下面的文字
Line Three.
Line One.
Line Two.</li>
	<li>你可以通过历史剪贴板来重新安排它们的顺序。移动到文档的第一行(Apple+上)，选择这一行(Shift+Apple+L)，剪切它(Apple+X)。对最后一行进行一样的操作(Apple+下，Shift+Apple+L，Apple+X)。然后再如此操作最后一行(上，Shift+Apple+L，Apple+X)。</li>
	<li>现在你可以依次粘贴它们。用Apple+V粘贴你历史剪贴板里面的最后一个记录。如果你想粘贴历史剪贴板里面的上一条记录的话需要按Shift+Apple+V，再次按这个组合键你可以粘贴出最后历史剪贴板里面的第一条记录。现在你可以按希望的顺序来排列这些行了。</li>
</ul>
如果排序顺序和你想的不一样，别害怕。按Ctrl+Option+Apple+V或者选择Edit -&gt; Paste from Histor, TextMate会打开一个历史剪贴板列表。你可以用方向键来选择条目并按回车选择该条目。或者按ESC退出列表。

注意，粘贴出来的文本的缩进位置是由TextMate根据当前文档而决定的。虽然大多数情况下这个特性可以节省你不少时间，但是可能你偏偏不想这样。希望 Paste Without Re-indent。打开Edit菜单并按下Ctrl键你能看到这个命令。当然你也可以直接使用Ctrl+Apple+V来进行这个操作。如果这个特性让你感到讨厌，你可以在配置中禁用它。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2008-10-29 14:27:13</wp:post_date>
		<wp:post_date_gmt>2008-10-29 06:27:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cut-copy-and-paste</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之一次编辑多行</title>
		<link>http://railser.cn/blog/editing-multiple-lines-at-once</link>
		<pubDate>Wed, 29 Oct 2008 08:13:27 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[TextMate允许你一次编辑多行文本。你可以使用这个功能添加新内容或者删除旧内容。这个功能在你操作列表数据的时候尤其方便。让我们仍然用一个例子来熟悉这个用法：
<ul>
	<li>创建一个新的TextMate文档，Ctrl+N</li>
	<li>选择当前工作的语言环境 Ctrl+Option+Shift+H</li>
	<li>增加一些基础的文档结构，doctype+Tab键然后选择2.增加必须的根节点html然后按Ctrl+&lt; 然后按回车会给你留一些空间输入内容。</li>
	<li>现在输入header区域，head+Tab键。在title中输入Apple Products。按两次方向键下，按回车给body留出空间。</li>
	<li>输入body然后按Ctrl+&lt; 然后按回车键。</li>
	<li>离开head区域，现在创建一个标签元素。按Ctrl+&lt; 然后输入h1 再按Tab键跳到内容区输入 Computers TextMate Runs On: 然后按Apple+回车两次。跳过关闭标签。并留出一些空白区域。</li>
	<li>同样的办法，创建ul标签。输入下面内容
Mac mini
iMac
Mac Pro
Macbook
Macbook Pro
你需要选择这些内容，然后才能一次给它们添加上标签。首先把你的光标移动到最后Macbook Pro的右边，然后按Shift+Option+左两次来选择这一行，再按Shift+Option+上最后按Shift+Option+左把空格也选上。现在使用最牛B的Ctrl+Shift+Apple+W组合键。</li>
	<li>使用Ctrl+Option+Apple+P来预览</li>
</ul>
接下来我要教你如何给刚刚的列表增加点东西以便识别哪些是台式机哪些是笔记本：
<ul>
	<li>按Ctrl+Shift+L选择第一行。按住Shift再按两次方向键下。</li>
	<li>编辑选择行快捷键是Option+Apple+A</li>
	<li>按Option+左 两次输入( desktop )</li>
	<li>同样给后两行增加 ( laptop )</li>
</ul>
如同你看到的 Edit Each Line in Selection 允许你一次给多行添加或者删除内容。它和列选择器很像，它通常用来给一堆列内容增加新内容。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2008-10-29 16:13:27</wp:post_date>
		<wp:post_date_gmt>2008-10-29 08:13:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>editing-multiple-lines-at-once</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之编辑模式</title>
		<link>http://railser.cn/blog/editing-modes</link>
		<pubDate>Thu, 30 Oct 2008 04:13:33 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=240</guid>
		<description></description>
		<content:encoded><![CDATA[TextMate支持两种额外的编辑模式，当你输入固定宽度的文本或者ASCII的时候尤其有用。它们是Freehanded Editing和 Overwrite，你可以在 Edit -&gt; Mode 下找到它们。

当你切换 Freehanded Editing 模式（Option+Apple+E）,TextMate允许你使用键盘来移动光标或者用鼠标点击。你可以放到一行的结尾外，或者列的中间。如果你增加新内容，TextMate会在特定区域补充上空白。

在使用列选择器的时候，这个功能通常是激活的，所以你可以把内容区域扩充。如果你希望单击鼠标切换这个模式，那么当你单击的时候请按住Option键。

另一个编辑模式Overwrite Mode (Option+Apple+O)，用来改变目前存在的文本。你很容易就能辨识出现在现在是否激活了这个模式，因为它会让你的光标成为一个下划线。和在两个字符中间插入新字符不同，TextMate的这种编辑模式会用你输入的字符替换当前字符。当你要进行文本替换的时候，这个模式可以很好的避免行内后面的文本窜位。

这些模式会引起自动化操作的异常，如果你看到了一些奇怪的结果请确保已经关闭了这些模式。如果有必要，请每次需要使用这些模式的时候手动开启。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2008-10-30 12:13:33</wp:post_date>
		<wp:post_date_gmt>2008-10-30 04:13:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>editing-modes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之文本对齐</title>
		<link>http://railser.cn/blog/textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e6%96%87%e6%9c%ac%e5%af%b9%e9%bd%90</link>
		<pubDate>Thu, 30 Oct 2008 21:45:42 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=244</guid>
		<description></description>
		<content:encoded><![CDATA[你会看到TextMate支持常见得对齐方式，它们在 Text 菜单得子菜单下。Text菜单包含3个有用得方法
<ul>
	<li>Ctrl+Q 左对齐段落</li>
	<li>Ctrl+J 使段落两边对齐</li>
	<li>Ctrl+Option+Q 把段落合并为一行</li>
</ul>
当使用列选择器的时候，这些快捷键可以很方便的调整你的内容。这一过程是很容易的，选择文本内容中的一部分按Ctrl＋Q。如下图

<a href="http://railser.cn/wp-content/uploads/2008/10/2008103001.png"><img class="alignnone size-medium wp-image-242" title="2008103001" src="http://railser.cn/wp-content/uploads/2008/10/2008103001-300x185.png" alt="" width="300" height="185" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date>2008-10-31 05:45:42</wp:post_date>
		<wp:post_date_gmt>2008-10-30 21:45:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e6%96%87%e6%9c%ac%e5%af%b9%e9%bd%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之使用制表符</title>
		<link>http://railser.cn/blog/working-with-tabs</link>
		<pubDate>Thu, 30 Oct 2008 22:13:14 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[如下图所示，你可以在编辑窗口的下面修改制表符的大小或者使用Soft Tabs模式。如果你选择了Soft Tabs类型，那么TextMate会移除目前的制表符，当你保存文档的时候，它会用空格来替代。并且今后编辑同样语言类型文档，也会如此。

<a href="http://railser.cn/wp-content/uploads/2008/10/2008103101.png"><img class="alignnone size-medium wp-image-250" title="2008103101" src="http://railser.cn/wp-content/uploads/2008/10/2008103101-300x131.png" alt="" width="300" height="131" /></a>

在TextMate里面你大概还会遇到Smart Tab的情况，当你按一个Tab键的时候，会根据目前的缩进级别自动在前面填充相应数量的制表符。当你选取一部分文字的时候，可以使用 Text －&gt; Convert -&gt; Spaces to
Tabs 或者 Text -&gt; Convert -&gt; Tabs to Spaces功能，如果你没有选择任何文本，则该操作会影响当前文档。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2008-10-31 06:13:14</wp:post_date>
		<wp:post_date_gmt>2008-10-30 22:13:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-with-tabs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e4%bd%bf%e7%94%a8%e5%88%b6%e8%a1%a8%e7%ac%a6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[php]uc实名认证的修改，使其他系统调用uch的实名</title>
		<link>http://railser.cn/blog/uc-verfy-name-and-usement-in-others</link>
		<pubDate>Fri, 31 Oct 2008 06:54:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：jp加入本站后，博客立刻火了起来。我奥运会后一直在做php的开发，而且是专门研究，hack康盛的uch，uc和supesite，给客户做php的站，一直没有做Rails的开发，有点遗憾。不过jp带着我还算没太落后，碰到好的Rails项目肯定还会继续Railser的开发的。

这是一篇笔记，边写边整理代码，比较复杂。贴在这里吧。

uc有个问题，就是在uch打开实名认证时，其他与uc通信的应用，仍旧显示uc里的username字段，而独uch显示认证的名字。为了使整站统一，需要在别的应用里显示uchome_space.name字段的内容。

思路：
<span style="color: green;"><strong>1、在uc_members中增加name和namestatus字段。</strong></span>
<pre name="code" class="sql">ALTER TABLE `uc_members` ADD COLUMN `name` char(20) NOT NULL default '';
ALTER TABLE `uc_members` ADD COLUMN namestatus tinyint(1) NOT NULL default '0';</pre>
<span style="color: green;"><strong>2、uch的source/cp_profile.php 82行后，增加同步更新uc实名字段。</strong></span>
//同步更新uc主表实名
<pre class="php" name="code">update_uc_table('uc_members',Array('name'=&gt;$setarr['name'], 'namestatus'=&gt;$setarr['namestatus'], 'uid'=&gt;$_SGLOBAL['supe_uid']));</pre>
<span style="color: darkgreen;"><strong>3、管理后台 admin/admincp_space.php 批量管理实名时，同步更新uc表</strong></span>
75行后：
//同步更新uc表，单个用户
<pre class="php" name="code">update_uc_table('uc_members',Array('name'=&gt;$setarr['name'], 'namestatus'=&gt;$setarr['namestatus'], 'uid'=&gt;$uid));</pre>
需要在 <span style="color: blue;">source/function_common.php</span> 中添加一个方法。和updatetable一样的，取消了table的前缀。
<pre class="php" name="code">function update_uc_table($tablename, $setsqlarr) {
global $_SGLOBAL;

$setsql = $comma = '';
foreach ($setsqlarr as $set_key =&gt; $set_value) {
$setsql .= $comma.'`'.$set_key.'`'.'=\''.$set_value.'\'';
$comma = ', ';
}
$where = $comma = '';
if(empty($wheresqlarr)) {
$where = '1';
} elseif(is_array($wheresqlarr)) {
foreach ($wheresqlarr as $key =&gt; $value) {
$where .= $comma.'`'.$key.'`'.'=\''.$value.'\'';
$comma = ' AND ';
}
} else {
$where = $wheresqlarr;
}
$_SGLOBAL['db']-&gt;query('UPDATE '.$tablename.' SET '.$setsql.' WHERE uid='.$setsqlarr['uid']);
}</pre>
//122行后，批量更新
<pre class="php" name="code">case '1':
//通过实名认证
$_SGLOBAL['db']-&gt;query("UPDATE ".tname('space')." SET namestatus='1' WHERE uid IN (".simplode($_POST['uids']).") AND name!=''");
$_SGLOBAL['db']-&gt;query("UPDATE uc_members SET `namestatus`='1' WHERE uid IN (".simplode($_POST['uids']).") AND name!=''");
$url .= 'namestatus=0';
$createlog = true;
break;
case '2':
//取消实名认证
$_SGLOBAL['db']-&gt;query("UPDATE ".tname('space')." SET namestatus='0' WHERE uid IN (".simplode($_POST['uids']).")");
$_SGLOBAL['db']-&gt;query("UPDATE uc_members SET `namestatus`='0' WHERE uid IN (".simplode($_POST['uids']).")");
$url .= 'namestatus=1';
$createlog = true;
break;
case '3':
//清空姓名
$_SGLOBAL['db']-&gt;query("UPDATE ".tname('space')." SET name='',namestatus='0' WHERE uid IN (".simplode($_POST['uids']).")");
$_SGLOBAL['db']-&gt;query("UPDATE uc_members SET `name`='' WHERE uid IN (".simplode($_POST['uids']).")");
break;</pre>
<strong>4、在需要的应用中，修改方法其实应该放到uc_client中</strong>，<span style="color: red;">但是我未找到一个很重要的方法究竟在哪定义，就是uc_client/client.php 中的 call_user_func 方法，我需要hack这个方法，来将name和namestatus属性包装进来，但是没找到，高手指点下呗。</span>答：最终，还是在modoer里修改了user class，而且在feed的时候，还要使用实名，就只能这样hack了。不过还是没有明白这个<span style="color: red;">call_user_func方法是怎么调用的。</span>
所以用了个土办法。这里有个设置问题，当实名未认证时，是否显示该实名。
<pre class="php" name="code">$tmp = Array();
$tmp = $db-&gt;get_one('SELECT name, namestatus from uc_members where `username`="'.$user-&gt;username.'"');
if($tmp['namestatus']){
$user-&gt;name = $tmp['name'];
}else{
$user-&gt;name = $tmp['name']."(未认证)";
}</pre>
这里还有个顾虑就是，在这个新系统中，是否沿用uch的认证机制，如果需要，这个改动讲很大，还是依附于uc过来的数据处理。

其实完美的方案应该该是完全放到uc_client中，但是我4里的问题我还没解决。目前的只是按照常规的方法hack相关代码解决的。

modoer是开源的点评程序，非常出色，从代码里学到很多知识，不仅是php，可能对今后开发Rails都有帮助。在此感谢作者的工作！！！

广告下自己的新站：

<a href="http://www.51zoon.com" target="_blank">时尚51区</a>

<a href="http://7ent.cn" target="_blank">7#娱乐圈</a>

<a href="http://7news.cn">7#早新闻</a>

对了，我们现在用的新插件是这个，http://code.google.com/p/syntaxhighlighter，非常强]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2008-10-31 06:54:35</wp:post_date>
		<wp:post_date_gmt>2008-10-31 06:54:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uc-verfy-name-and-usement-in-others</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="comsenz"><![CDATA[comsenz]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="modoer"><![CDATA[modoer]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="uc"><![CDATA[uc]]></category>
		<category domain="post_tag" nicename="uch"><![CDATA[uch]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[php]uchome中的两个字段含义的解释</title>
		<link>http://railser.cn/blog/uchome-2-column-meanings</link>
		<pubDate>Sat, 01 Nov 2008 06:17:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=266</guid>
		<description></description>
		<content:encoded><![CDATA[在uchome的spacefield表中，有两个看似明确，实际很别扭的两个字段名，friend和feedfriend。

在处理feed的时候，这两个字段经常会让人搞混乱，一时想不起来意思。

其实friend是表明该空间的好友，这和blog的friend不一样，blog的friend是定义的blog的开放级别。

feedrfriend，基本上和friend是同样内容，但是当设置屏蔽时，会从这个表中去掉被屏蔽的人的id，所以，这个字段保存的是可以查看该空间feed的id。

那么，现在我在做的是增加同组查看功能，比如，设置某一个组只能本组人查看，外组的人无法查看任何消息。这时，就用上了这里的方法。

未完，待续]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2008-11-01 06:17:56</wp:post_date>
		<wp:post_date_gmt>2008-11-01 06:17:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uchome-2-column-meanings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="uch"><![CDATA[uch]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之使用emacs中常用的快捷键</title>
		<link>http://railser.cn/blog/emacs-key-bindings</link>
		<pubDate>Wed, 05 Nov 2008 05:38:26 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[就像你前面看到的一样TextMate支持一些emacs常见的快捷键。
<ul>
	<li>Ctrl+D 删除光标右侧的一个字符</li>
	<li>Ctrl+T 调换选中文本的顺序，如果没有选择任何文本则对换光标左右字符的位置。并且将光标置于下一个位置</li>
	<li>Ctrl+K 删除光标到行尾的文字</li>
	<li>Ctrl+Y 复制出删除的最后一次文本</li>
	<li>Ctrl+O 不移动光标插入新的一行</li>
</ul>

当然这些快捷键在Mac系统中的其它应用中也可以使用，比如Mail。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>238</wp:post_id>
		<wp:post_date>2008-11-05 13:38:26</wp:post_date>
		<wp:post_date_gmt>2008-11-05 05:38:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>emacs-key-bindings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<category domain="post_tag" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e4%bd%bf%e7%94%a8emacs%e4%b8%ad%e5%b8%b8%e7%94%a8%e7%9a%84%e5%bf%ab%e6%8d%b7%e9%94%ae]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[jquery]近来jquery的两次应用</title>
		<link>http://railser.cn/blog/jquery-in-works</link>
		<pubDate>Fri, 07 Nov 2008 12:53:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=283</guid>
		<description></description>
		<content:encoded><![CDATA[最近的开发，都和Rails无关，但是两次用到了jquery。上次做完一个项目后，买了2本js的书，打算好好学下jquery和js，可惜看了前几章就又没时间专心看了。这两次也是借着一点点了解，解决了2个jquery的应用。不忙的时候，一定要认真复习一遍。

1、用jquery解密淘宝图片地址

从淘宝过来的数据，图片地址是加密的。查的资料上看，可以用一段js代码解密，可问题是那段代码需要点击后才会解密。我的程序里需要直接显示图片。怎么办？

<a href="http://railser.cn/wp-content/uploads/2008/11/e6b798e5ae9de59bbee78987e59cb0e59d80e8a7a3e5af86.rar" target="_blank">下载淘宝图片解密js文件</a>

解决办法是，将拿回来的加密字串放到js的方法里，将解密结果更新img的src属性。所以在上面那个文件提供的方法下面，加上了jquery的方法。做了个典型的方法调用。
<pre class="js" name="code">
$(document).ready(function() {
	var whoback = "";
	whoback = '$results[image]';
	var iamback = Button1_onclick(whoback);
	$('#taobao_pic').attr('src', iamback);
	$('#image_url').attr('value', iamback);
});</pre>
2、wslide插件

这是一个可以实现新闻列表分页显示的jquery插件，地址：<a href="http://www.webinventif.fr/wslide-plugin/" target="_blank">http://www.webinventif.fr/wslide-plugin/</a>

可惜没有上，下一页按钮。页面是法文的，不懂。所以用完这个，真的需要找时间专心看一下那两本书了。《jquery基础教程》和《精通javascript》。

写在最后：感谢最近的几位朋友与我联系开发的意向。感谢大家的信任。目前答应了俩个朋友的邀请，在这个月中（结束手头两个项目）跟他们谈合作的细节。每个项目周期可能在2周左右。真的很期待。我会在这个过程中不断充实自己。再次感谢大家，感谢wordpress，以及这次博客界面的改版，mac真的可以带来好运。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2008-11-07 12:53:59</wp:post_date>
		<wp:post_date_gmt>2008-11-07 12:53:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-in-works</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之扫描</title>
		<link>http://railser.cn/blog/scanning</link>
		<pubDate>Sat, 08 Nov 2008 23:55:53 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=287</guid>
		<description></description>
		<content:encoded><![CDATA[让我们通过一个例子来了解这个功能。TextMate有完备的发行说明，介绍了不同版本之间的新功能和改变。如果你想了解新特点：
<ul>
	<li>选择  Help -&gt; Release Notes，在文字编辑窗口打开一个列表。</li>
	<li>按 Ctrl ＋S 注意在编辑栏的最下面出现了什么</li>
	<li>在其中输入 [ n e w ]，注意你每输入一个字符TextMate都会自动帮你匹配搜寻文档中相应的字符</li>
	<li>按Ctrl＋S 会在文档中搜索下一个相同的单词</li>
	<li>按Shift＋Ctrl＋S 后退至上一个</li>
	<li>按回车或者ESC键退出扫描功能</li>
</ul>
<a href="http://railser.cn/wp-content/uploads/2008/11/e59bbee78987-2.png"><img class="alignnone size-medium wp-image-296" title="e59bbee78987-2" src="http://railser.cn/wp-content/uploads/2008/11/e59bbee78987-2-300x113.png" alt="" width="300" height="113" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2008-11-09 07:55:53</wp:post_date>
		<wp:post_date_gmt>2008-11-08 23:55:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scanning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e6%89%ab%e6%8f%8f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之搜索</title>
		<link>http://railser.cn/blog/textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e6%90%9c%e7%b4%a2</link>
		<pubDate>Sun, 09 Nov 2008 03:45:07 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=291</guid>
		<description></description>
		<content:encoded><![CDATA[你可以通过Edit -&gt; Find -&gt; Find或者按Ctrl＋F调出搜索功能。当你没有选择正则表达式功能的时候，这个对话框和其它Mac的应用程序使用方法一样。

你可以在Find字段输入一些想匹配的文本，并且在replace字段输入一些想用来替换的文本。因为Tab键盘会跳转到输入框的焦点而回车键会出发搜索动作。所以你不能输入这两个字符。当然如果你确实需要输入它们，你可以按Option＋Tab键和Option＋回车键来替代。当你想输入更多字符的时候，可以拖动对话框右下角的按钮。点一下淡蓝色的按钮可以开始搜索最近一个符合的条目了。按钮的名称是Next。

在你开始搜索之前可以用鼠标选择一下搜索选项或者使用快捷键，Ctrl+Apple+R, Ctrl+Apple+I, Ctrl+Apple+W。后面的章节会重点介绍正则表达式不过现在先让我们选择忽略大小写和循环搜索两个功能。

当你完成搜索定义，可以用回车键触发搜索功能。或者按Previous搜索前一个。我不太喜欢用Replace 或者 Replace
&amp; Find 按钮。建议你用Σ按钮，它会告诉你Replace All一共发生了多少次替换。你可以用快捷键Ctrl＋Apple＋F触发Replace All功能。

<a href="http://railser.cn/wp-content/uploads/2008/11/e59bbee78987-1.png"><img class="alignnone size-medium wp-image-294" title="e59bbee78987-1" src="http://railser.cn/wp-content/uploads/2008/11/e59bbee78987-1-300x106.png" alt="" width="300" height="106" /></a>

需要注意下面这些常用的快捷键，都是你不需要打开搜索对话框就可以使用的。Apple＋E 替换当前Find字段里面的文字。Apple+G，搜索下一个符合条件的单词。Option＋Apple＋F替换当前所选并定位到下一个符合条件的单词。Shift＋Apple＋E替换当前搜索字段。你可以用快捷键Shift＋Ctrl＋Apple＋F触发Replace AlI In Selectionl功能。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2008-11-09 11:45:07</wp:post_date>
		<wp:post_date_gmt>2008-11-09 03:45:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>textmate%e4%b8%ad%e6%96%87%e6%95%99%e7%a8%8b%e4%b9%8b%e6%90%9c%e7%b4%a2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby for rails 摘录</title>
		<link>http://railser.cn/blog/ruby-for-rails-1</link>
		<pubDate>Mon, 10 Nov 2008 07:19:54 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[<pre name="code" class="ruby">
def all
  @order = params[:order] || "number"
  sort_proc = case @order
    when "author" then lambda {|r| [r.user.name.downcase, r.number]}
    when "status",
             "title", then lambda {|r| [r.send(@order).downcase, r.number]}
    when "number" then lambda {|r| -r.number}
  end
  @rcrs = Rcr.find(:all).sort_by &sort_proc
end
</pre>
下面是一个 respond_to? 和 send 方法的例子
<pre name="code" class="ruby">
request = gets.chomp

if ticket.respond_to?(request)
  puts ticket.send(request)
else
  puts "No such information available"
end
</pre>
参数的默认值
<pre name="code" class="ruby">
def m(a, b=1, *m)
end

m(1,2,3,4)

a = 1, b = 1, m = [3, 4]
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2008-11-10 07:19:54</wp:post_date>
		<wp:post_date_gmt>2008-11-10 07:19:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-for-rails-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="r4r"><![CDATA[r4r]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e4%b8%8d%e8%af%a5%e5%86%99%e5%88%b0controller%e4%b8%ad%ef%bc%8c%e4%bd%86%e6%98%af%e5%8f%af%e4%bb%a5%e7%9c%8b%e7%9c%8b%e8%af%ad%e6%b3%95]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[a-bad-controller]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate中文教程之在项目中搜索</title>
		<link>http://railser.cn/blog/find-in-project</link>
		<pubDate>Fri, 14 Nov 2008 05:07:50 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=312</guid>
		<description></description>
		<content:encoded><![CDATA[当你一次需要修改许多文件的时候，你可以选择 Edit -> Find -> Find in Project 快捷键 Shift＋Apple＋F 。虽然看起来略有不同，但是仍然和上一章的搜索对话框基本一样。

在输入搜索的信息之后，按一下回车键会触发搜索过程。TextMate会在整个项目中搜索匹配的文本，并把它们显示在搜索框的下面。你可以点选任意一个匹配记录，TextMate会自动跳转到该文件。

这里最好用的功能应该是替换。你可以使用 Replace All 按钮来替换全部匹配文本。或者你可以手动来一个一个的替换掉。用鼠标在下面显示搜索结果的地方点一条记录，你可以使用Shift或者Apple来选择或者删除多个匹配记录。当你选择了需要替换的记录之后，按一下 Replace Selected 按钮。就会替换掉刚才选择的那些记录。
<a href="http://railser.cn/wp-content/uploads/2008/11/2008111401.png"><img src="http://railser.cn/wp-content/uploads/2008/11/2008111401-300x165.png" alt="" title="2008111401" width="300" height="165" class="alignnone size-medium wp-image-314" /></a>
搜索整个项目需要花很多时间。如果你有兴趣可以限制只搜索某些文件。你可以让TextMate创建一个新的临时项目。只包含你感兴趣想搜索的文件。搜索之后再销毁这个临时项目。利用 mate 命令你可以很容易的做到这些。 例如我想创建一个项目，仅包含 lib 和 test 文件夹下面的 ruby 文件,那么你需要在 Terminal 下面输入：

$ find {lib,test} -name '*.rb' -print0 | xargs -0 mate

你也可以用鼠标做一样的事。拖动一些文件或文件夹到Dock，并放于TextMate的图标上。这告诉 TextMate 创建一个新项目并且过滤掉你不希望存在的。

当项目打开的时候，我可以搜索项目然后关闭它。当关闭项目的时候搜索也停止。这可以让我只在需要的时候才搜索并且能提高不少速度。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>269</wp:post_id>
		<wp:post_date>2008-11-14 05:07:50</wp:post_date>
		<wp:post_date_gmt>2008-11-14 05:07:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>find-in-project</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>回复一篇关于Ruby开发ucenter项目的帖子</title>
		<link>http://railser.cn/blog/ruby-on-rails-with-ucenter</link>
		<pubDate>Fri, 14 Nov 2008 14:15:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：我忘了我je的密码了，就贴到自己博客吧。

帖子地址：http://galaxystar.javaeye.com/blog/210934

目前看官方可能不会在今年放出ruby的包了，不过从长远（非常长远啊）的角度看，这个ruby包还是有前途的，毕竟大量的网站可能会安装使用ucenter，与uc的互通是有必要的。

但是，ucenter的概念很简单，1-2个程序员完全可以用ruby来开发一套基于rails或其他框架的ucenter包来。

关键的关键，ucenter的理念对我个人影响很深，我在逐渐用这个方式来思考新的设计项目-------------松耦合，目标是：每一个部分可以单独安装。

从近来对ucenter的了解，uc包含如下几个关键功能：用户验证（注册，登陆），web应用管理，积分换算，feed，好友，站内短信，黑名单等。（从uc_client包内的client.php可以看到这些）。其中的要点是要解决好积分换算和feed，uc是为多个系统服务的，之间的积分，金币换算非常重要。feed是要告诉各个应用，当前应用的当前用户的操作是什么。

不过这里有个问题，就是uchome将我们带进了一个弯路。uchome是一个代表性的uc应用，可是在开发上，比如实名，用户资料扩展，就对uc的定义产生了影响。例如，实名在别的系统无法使用，因为它不存在uc中，后果是如果每个应用都有一个关键的用户资料扩充或feed扩充，将会无法实现（我只能hack了）。

另外：ucenter设计真的合理吗？

所以，我想在下一个Rails项目之前，了解下facebook的设计，如果我能快速理解的话。希望来的朋友多提供宝贵看法，谢谢。

再补充些观点：uchome1.5的推出，必将在江湖上产生无数的sns应用，这对开发者是个好机会，基于uch的应用必将收到欢迎。但是同时，sns概念也将从火热转为平淡，没有灵魂的sns也将死去。所以，基于sns，或者是摒弃传统sns的开发，将会给web应用带来生机。庆幸，下一个项目就是这样的。。。。。

ps：很看好web game。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2008-11-14 14:15:42</wp:post_date>
		<wp:post_date_gmt>2008-11-14 14:15:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-on-rails-with-ucenter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="ucenter"><![CDATA[ucenter]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby for rails 摘录</title>
		<link>http://railser.cn/blog/ruby-for-rails-2</link>
		<pubDate>Sun, 16 Nov 2008 05:37:35 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=319</guid>
		<description></description>
		<content:encoded><![CDATA[实例变量使得单个对象可以记忆状态。实例变量的名字以@开头。实例变量仅仅对于它所属的对象来说是可见的。在一个特定类的某一方法中初始化的实例变量，与同一个类的其他方法定义中引用的同名实例变量是同一个。
<pre name="code" class="ruby">
class c
  def inst_var_init(value)
    puts "Setting an instance variablegem"
    @ivar = value
  end

  def inst_var_report
    puts "Inspection the value of the instance variablegem"
    puts @ivar
  end
end
</pre>

初始化对象状态
<pre name="code" class="ruby">
class c
  def initialize(venue, date)
    @venue = venue
    @date = date
  end

  def venue
    @venue
  end

  def date
    @date
  end
end
</pre>

=号方法和语法糖衣，Ruby允许定义以等号结束的方法。另外当解释器看到一个裸词后面有等号的时候。它会自动忽略等号前面的空格。从而得到一条单独的消息，例如 price= 。
<pre name="code" class="ruby">
class Ticket
  def price=(amount)
    @price = amount
  end

  def price
    @price
  end
end
</pre>

字符串内建的split方法的示例
<pre name="code" class="ruby">
month, day, year = date.split('/')
</pre>

ActiveRecord自动生成与数据库表的字段名相对应的设置方法。通过 params 方法，ActiveRecord 收集了所有属于 customer 的值， 并将它们成批地传递到新生成的 Customer 对象中。
<pre name="code" class="ruby">
customer = Customer.new(params[:customer])
</pre>

自动生成属性方法，attr_accessor, attr_reader, attr_writer

常量的名字是以一个大写字母开头。可以在类外引用常量，Ticker::VENUES
<pre name="code" class="ruby">
class Ticket
  VENUES = ["Convention Center", "Fairgrounds", "Town Hall"]
end
</pre>

每个类有自己的实例方法，可以继承链上面的类的实例方法。定义一个动作，就是给控制器类添加一个实例方法。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2008-11-16 05:37:35</wp:post_date>
		<wp:post_date_gmt>2008-11-16 05:37:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-for-rails-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="r4r"><![CDATA[r4r]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby for rails 摘录</title>
		<link>http://railser.cn/blog/ruby-for-rails-3</link>
		<pubDate>Sun, 16 Nov 2008 09:06:23 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=325</guid>
		<description></description>
		<content:encoded><![CDATA[模块没有实例，模块被混含在类中。这样类的实例可以调用定义在模块中的实例方法。混含操作由 include 语句实现。require 或 load 时，加载的内容放在引号里。但是使用 include 时，不使用引号。
<pre name="code" class="ruby">
module Stacklike
  attr_reader :stack

  def initialize
    @stack = Array.new
  end

  def add_to_stack(obj)
    @stack.push(obj)
  end

  def take_from_stack
    @stack.pop
  end
end
</pre>
<pre name="code" class="ruby">
require "stacklike"
class CargoHold
  include Stacklike

  def load_and_report(obj)
    pust obj.object_id
    add_to_stack(obj)
  end

  def unload
    take_from_stack
  end
end
</pre>
使用名称作为类名，使用形容词作为模块的名。上面的例子演示了如何进一步发挥模块的作用。

当给对象发送它不理解的消息的时候，会触发内建方法 method_missing 调用。
<pre name="code" class="ruby">
class Bicycle
  attr_reader :gears, :wheels, :seats

  def initialize(gears = 1)
    @wheels = 2
    @seats = 1
    @gears = gears
  end
end

class Tandem < Bicycle
  def initialize(gears)
    super
    @seats = 2
  end
end
</pre>
以super提升方法查找路径。以裸词的方式调用时，自动向前传递调用 super 的发给你发所获得的参数。这个是默认滴。用空参数表调用 super() 时，不给上一级方法传递任何参数，即使是当前方法的谙熟也不传递。用特定参数 super(a, b, c) 时，传递这些指定的参数。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2008-11-16 09:06:23</wp:post_date>
		<wp:post_date_gmt>2008-11-16 09:06:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-for-rails-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="r4r"><![CDATA[r4r]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby for rails 摘录</title>
		<link>http://railser.cn/blog/ruby-for-rails-4</link>
		<pubDate>Mon, 17 Nov 2008 07:02:05 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=336</guid>
		<description></description>
		<content:encoded><![CDATA[class, module, def 标志着切换到新的 self， main 是默认的 self 对象用来引用自己的专门术语。self 作为消息默认的接受者，如果消息接受者是 self ，可以省略接受者和圆点。

如果存在同名的方法名和变量，而且你使用裸词标识符，那么变量具有优先权。要强制 Ruby 将标识符当作方法名，你必须使用 self.talk 或者用参数列表为空的 talk() 来调用方法。

有一个场合，即使是发送消息给当前的 self，也必须使用完整的“对象 圆点 消息”记法，那就是在调用写方法的时候。因为 Ruby 总之将序列“裸词＝值”解释为对局部变量的赋值。为了调用当前对象的 venue= 方法，必须显示的给出 self。

private 和 protected 的区别
私有方法意味着该方法不能使用显式的接收者来调用。Ruby 认为你想要发送消息给当前对象 self。所以仅当 self 是一个可以响应消息的对象时，该消息才有对象接收。那啥时候 self 才会是类的实例呢？当执行类的任何一个实例方法时。所以看如下代码
<pre name="code" class="ruby">
class Baker
  def bake_cake
    @batter = []
    pour_flour
    add_egg
    return Cake.new
  end

  def pour_flour
    @batter.push(Flour.new)
  end

  def add_egg
    @batter.push(Egg.new)
  end

  private :pour_flour, :add_egg
end
</pre>

总结，当 add_egg 标记为私有的，就是说Baker的实例对象可以将此消息发送给它自己，但是其它任何对象都不可以给该Baker实例对象发送该消息。Ruby 通过禁止对私有方法使用显示的接收者来获得此私有性。

保护方法的规则是：只要默认对象 self 和你想要调用的方法所属的对象是同一个类的实例，你就可以调用该保护方法。如果某个对象调用其所属的保护方法，而该对象所属的类和self所属的类相同，那么该调用是合法的。
<pre name="code" class="ruby">
class C
  def initialize(n)
    @n = n
  end

  def n
    @n
  end

  def compare(c)
    if c.n > n
      puts "The other object's n is bigger."
    else
      puts "The other object's n is the same or smaller"
    end
  end

  protected :n
end

c1 = C.new(100)
c2 = C.new(201)
c1.compare(c2)
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2008-11-17 07:02:05</wp:post_date>
		<wp:post_date_gmt>2008-11-17 07:02:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-for-rails-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="r4r"><![CDATA[r4r]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ruby for rails 摘录</title>
		<link>http://railser.cn/blog/ruby-for-rails-5</link>
		<pubDate>Thu, 27 Nov 2008 08:15:32 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[if 关键字
<pre name="code" class="ruby">
if condition
  # code here, executed if condition evaluates to true.
end

if x > 100 then puts x end

if x > 100; puts x end

if condition
  # code executed if condition is true.
else
  # code executed if conditions is false.
end

if condition1
  # code executed if condition1 is true.
elsif condition2
  # code executed if condition2 is true.
elsif condition3
  # code executed if neither condition1
  # nor condition2 is true, but condition3 is true.
end

print "Enter a integer: "
n = gets.to_i
if n > 0
  puts "Your number is positive."
elsif n < 0
  puts "Your number is negative."
else
  puts "Your number is zero."
end

puts "Big numbe!" if x > 100
</pre>

unless
<pre name="code" class="ruby">
if not (x == 1)
if !(x == 1)
unless x == 1
</pre>

case 语句以一个表达式开始，然后处理列出得各种可能得匹配。每一个可能的匹配包含在一个 when 表达式中，该表达式由一个或多个可能的匹配和一段代码构成。
<pre name="code" class="ruby">
print "Exit the program? (yes or no): "
answer = gets.chomp
case answer
when "yes", "y"
  puts "Good-bye"
  exit
when "no", "n"
  puts "OK, we'll continue"
else
  puts "That's an unknow answer -- assuming you meant 'no'"
end
</pre>

用 loop 方法实现无条件循环。loop 方法不带任何参数，但它可以带一个代码块。代码块包含想要循环执行的代码。代码块可以是大括号 {} 或者用关键字 do 和 end 。当然你也可以使用 break 来中断循环。或者使用 next 来跳到下一个循环。
<pre name="code" class="ruby">
n = 1
loop do
  n = n + 1
  if unless n == 7
  break if n > 9
end
</pre>

条件循环可以根据 while 和 until 实现。
<pre name="code" class="ruby">
n = 1
while n < 11
  puts n
  n = n + 1
end
puts "Done!"

n = 1
begin
  puts n
  n = n + 1
end while n < 11
puts "Done!"

n = 1
until n > 10
  puts n
  n = n + 1
end

n = 1
n = n + 1 until n == 10
puts "We've reached 10!"
</pre>

基于值列表的循环
<pre name="code" class="ruby">
celsius = [0, 10, 20, 30, 40, 50, 60, 70]
puts "Celsius\tFahrenheit"
for c in celsius
  puts "c\t#{Temperature.c2f(c)}"
end
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date>2008-11-27 08:15:32</wp:post_date>
		<wp:post_date_gmt>2008-11-27 08:15:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-for-rails-5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1.3.3 Continuations</title>
		<link>http://railser.cn/blog/133-continuations</link>
		<pubDate>Thu, 27 Nov 2008 12:47:28 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=349</guid>
		<description></description>
		<content:encoded><![CDATA[Continuations 是一种非常强大的控制流机制。一个 Continuation 代表了调用栈和词法变量的特定状态。它是 Ruby 代码执行过程中特定点的一个快照。不幸的是，在 Ruby1.8 的实现中 Continuations 是如此的慢以至于对于许多的应用来说根本无法使用。在即将到来的 Ruby1.9 虚拟机中情况可能会有所改善，但最好不要期望在使用了 Ruby1.8 的 Continuation 的情况下能够获得好的性能。尽管如此，Continuations 仍然是非常有用的概念，基于 Continuations 的 web 框架提供了 Rails 的一些有趣的选择，因此在这里我们会对它们做一下考察。

Continuations之所以非常强大有下面几个原因：
<ul>
	<li>Continuations其实就是一些对象；它们可以被传递在函数之间。</li>
	<li>可以从任何位置调用Continuations。只要持有对Continuation的引用，就可以对其进行调用。</li>
	<li>Continuations是可重入的。可以使用Continuations从一个函数多次返回。</li>
</ul>

Continuations常常被描述为“结构化的GOTO“。因此，它们应该像任何类型的GOTO概念一样被谨慎的对待。在应用代码中不应该出现或者应该极少出现Continuations；它们通常应该被封装在库文件中。我不这么说是因为我认为开发人员应该被与它们隔离开来。

Continuations是如此普遍的一个概念，以至于通常来说在其之上建立抽象比直接使用它更合理。程序员在构建应用软件的时候应考虑使用”外部迭代（external iterator）“或者”协同程序（coroutine）“（两个都是在Continuations之上的抽象）而不是”continuation“。

SeaSide是一个基于Continuations的Smalltalk Web应用框架。Continuations 在SeaSide 中用于管理会话状态。每个用户的会话都对应一个服务器端的Continuation。当一个请求到达的时候Continuation将被调用而且更多的代码被执行。其结果是整个的事务能够被编写为单独的一段代码流，即使它们跨越了多个HTTP请求。这种能力是由于Smalltalk的Continuation能够被序列化；它们可以被写到一个数据库或者文件系统，然后被取出和反序列化，并在请求中重新调用。Ruby的Continuation不能被序列化。在Ruby中，Continuation只能被装载到内存中而不能被转换为一个字节流。

Borges(http://borges.rubyforge.org/)是直接移植到Ruby的Seaside 2实现。SeaSide与Borges的最根本的区别就是Borges必须将所有当前的Continuations保存在内存中，因为它们不能被序列化。这个巨大的限制很不幸地阻止了Borges在任何规模的Web应用中被成功使用。只要Continuation在任何一种Ruby实现中被支持，这个限制就可以被克服了。

Continuation的能力可以通过下面的Borges示例代码来见证，它用于渲染在线商店的一系列条目：
<pre name="code" class="ruby">
class SushiNet::StoreItemList < Borges::Component
  def choose(item)
    call SushiNet::StoreItemView.new(item)
  end


  def initialize(items)
    @batcher = Borges::BatchedList.new items, 8
  end
  def render_content_on(r)
    r.list_do @batcher.batch do |item|
      r.anchor item.title do choose item end
    end
    r.render @batcher
  end
end # class SushiNet::StoreItemList
</pre>
Action的功能render_content_on方法中完成，使用了BatchedList（一个分页器）来渲染一组分页的产品链接。有趣的地方在于anchor方法的调用，它存储了choose方法，当相应的链接被点击时调用。

但是，关于Continuations在Web编程中有多大的用处仍然存在着很大争议，HTTP被设计为无状态的协议，使用Continuations来实现Web事务与无状态的想法正好相反。所有的Continuations都被存在服务器端，这需要占用额外的内存和硬盘空间。需要粘性会话（sticky session）来将一个用户始终导向同一台服务器。因此，如果一台服务器当机，它的所有会话都会丢失。最流行的基于Seaside的应用DabbleDB（http://dabbledb.com）事实上很少使用Continuations。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2008-11-27 12:47:28</wp:post_date>
		<wp:post_date_gmt>2008-11-27 12:47:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>133-continuations</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>重读AWDWR笔记</title>
		<link>http://railser.cn/blog/awdwr-1</link>
		<pubDate>Fri, 28 Nov 2008 06:57:05 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[感恩节放假，抓紧时间重读一下AWDWR把一些知识点记录如下。
第6章
<ul>
	<li>迁移习惯 create 来创建表，add 给现有表增加字段。你可以会看到 002_add_price.rb 的迁移。</li>
	<li>model 中验证方法设置为 protected 是因为该方法必须在特定的模型上下文中调用，不能在外部调用。</li>
</ul>
<pre name="code" class="ruby">
protected
def validate
  errors.add(:price, "should be at least 0.01") if price.nil? || price < 0.01
end
</pre>
<ul>
	<li>errors.add() 方法第一个参数是字段名称，第二个参数是出错信息的正文。</li>
	<li>在将价格和 0.01 比较之前，先检查它是不是 nil。试图将 nil 和数字比较会引发异常。</li>
	<li>下面代码演示了如何用正则表达式验证模型属性。</li>
</ul>
<pre name="code" class="ruby">
validates_format_of :image_url,
  :with => %r{\.(gif|jpg|png)$}i,
  :message => "must be a URL for a GIF, JPG, or PNG image"
</pre>
<ul>
	<li>cycle 交替的设置两个属性。</li>
	<li>h() 方法用于对内容进行格式化，去除其中的 HTML。</li>
	<li>link_to 方法后面的 :confirm =>"Are you sure?"。</li>
	<li>stylesheet_link_tag</li>
	<li>关于渲染表格的方法。</li>
</ul>
<pre name="code" class="ruby">
&lt;table&gt;
	&lt;tr&gt;
	<% for column in Product.content_columns %>
		&lt;th&gt<%= column.hunman_name %>&lt;/th&gt;
	<% end %>
	&lt;/tr&gt;
	&lt;tr&gt;
	<% for column in Product.content_columns %>
		&lt;td&gt<%= h product.send(column.name) %>&lt;/td&gt;
	<% end %>
	&lt;/tr&gt;
&lt;/table&gt;
</pre>
第7章
<ul>
	<li>number_to_currency(product.price) 格式化价格的方法。</li>
	<li>如何使用类方法。</li>
</ul>
<pre name="code" class="ruby">
class StoreController < ApplicationController
  def inde
    @products = Product.find_products_sale
  end
end

class Product < ActiveRecord:Base
  def self.find_products_sale
    find(:all, :order => "title")
  end
end
</pre>
第8章
<ul>
	<li>如何把 session 放在数据库中。</li>
	<li>在 session 中保存尽可能简单的东西：字符串，数字，等等。应用层面的对象应该放在数据库，然后把它们的主键放入 session，需要时根据 session 中的主键来查找对象。</li>
</ul>
<pre name="code" class="ruby">
rake db:sessions:create
rake db:migrate
#environment.rb
config.action_controller.sesson_store = :active_recored_store
</pre>
<ul>
	<li>下面是一段非常常见的购物代码。</li>
	<li>注意下面的 controller 中演示了如何防止构造错误的传递参数。</li>
</ul>
<pre name="code" class="ruby">
class StoreController < ApplicationController
  before_filter :find_cart, :except => :empty_cart

  def index
    @products = Product.find_product_for_sale
  end

  def add_to_cart
    begin
      product = Product.find(params[:id])
    rescue ActiveRecord::RecordNotFound
      logger.error("Attempt to access invalid product #{params[:id]}.")
      redirect_to_index unless request.xhr?
    end
  end

  def empty_cart
    session[:cart] = nil
    redirect_to_index
  end

  def checkout
    if @cart.item.empty?
      redirect_to_index("Your cart is empty.")
    else
      @order = Order.new
    end
  end

  def save_order
    @order = Order.new(params[:order])
    @order.add_line_items_from_cart(@cart)
    if @order.save
      session[:cart] = nil
      redirect_to_index("Thank you for your order.")
    else
      render :action => :checkout
    end
  end

  private

  def redirect_to_index(msg = nil)
    flash[:notice] = msg if msg
    redirect_to :action => :index
  end

  def find_cart
    @cart = (session[:cart] ||= Cart.new)
  end
end

class Cart
  attr_reader :items

  def initialize
    @items = []
  end

  def add_product(product)
    current_item = @items.find {|item| item.product == product}
    if current_item
      current_item.increment_quantity
    else
      current_item = CartItem.new(product)
      @items << current_item
    end
    current_item
  end

  def total_items
    @items.sum {|item| item.quantity}
  end

  def total_price
    @items.sum {|item| item.price}
  end
end

class CartItem
  attr_reader :product, :quantity

  def initialize(product)
    @product = product
    @quantity = 1
  end

  def increment_quantity
    @quantity += 1
  end

  def title
    @product.title
  end

  def price
    @product.price * @quantity
  end
end
</pre>
<ul>
	<li>Mac 用户使用 Console.app，在 Application 的 Utilities 中，可以很方便的跟踪日志文件，只要使用 open 命令，并传入日志文件的名称即可。</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2008-11-28 06:57:05</wp:post_date>
		<wp:post_date_gmt>2008-11-28 06:57:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awdwr-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile-web-development-with-rails"><![CDATA[AWDWR]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在windows和netbeans6.5上，准备Rspce开发</title>
		<link>http://railser.cn/blog/rspec-on-windows-and-netbeans65</link>
		<pubDate>Fri, 28 Nov 2008 08:40:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[一、环境

ruby -v

&gt;&gt; ruby 1.8.6 (2007-09-24 patchlevel 111) [i386-mswin32]

rails -v

&gt;&gt; Rails 2.1.2

二、需要安装的gem和plugin

gem install ZenTest

因为我的Rails是2.1.2，所以在安装plugin时，用了下面的方法：
<pre>ruby script/plugin install git://github.com/dchelimsky/rspec.git
ruby script/plugin install git://github.com/dchelimsky/rspec-rails.git
ruby script/generate rspec</pre>
另外还有一些辅助的工具，不在此详述

三、出现的问题

1、netbeans加载autotest时候的环境变量

解决：在系统环境中，需要加入home=当前项目的根文件夹，这样nb就能正常启用autotest了

2、restful_authentication的rspec时，出现mysql的Mysql::Error: Incorrect datetime value错误

mysql配置文件my.ini中，注释掉 sql-mode="STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" 一行（我的在87行）

下面添加一行：sql-mode=""

重启mysql

四：参考文章

<a href="http://wiki.netbeans.org/RubyTesting">RubyTesting</a>

<a href="http://guides.rubyonrails.org/creating_plugins.html">The Basics of Creating Rails Plugins，创建Rails插件的基础教程</a>

RSpec的很重要的中文文档：
<a href="http://www.letrails.cn/archives/20" target="_blank">http://www.letrails.cn/archives/20</a>
<a href="http://www.letrails.cn/archives/advanced-rspec-tutorials-rspec-scaffold" target="_blank">http://www.letrails.cn/archives/advanced-rspec-tutorials-rspec-scaffold</a>
<a href="http://www.letrails.cn/archives/11-02-advanced-rspec-tutorials-basics" target="_blank">http://www.letrails.cn/archives/11-02-advanced-rspec-tutorials-basics</a>
<a href="http://www.letrails.cn/archives/11-07-advanced-rspec-tutorials-mocking" target="_blank">http://www.letrails.cn/archives/11-07-advanced-rspec-tutorials-mocking</a>

《The Rails Way》第18章：Rspec on Rails

<a href="http://dirk.net/2008/01/30/autotest-rails-on-windows/">Autotest Rails on Windows</a>

这里提到的 set home=. 方法，是在cmd环境下可以，集成到netbeans中，还得用上面 三（1） 里的方法。（ps：blogspot又打不开了？）

好了，上面只是一篇准备开发Rspec on Rails 时候的笔记，更多的内容还会以笔记形式更新。

新站广告：一汽家园，一汽的生活圈 <a href="http://www.17jiayuan.com">www.17jiayuan.com</a> ，租房，在线游戏，二手交易，一汽交友圈。

目前状况：正在开发一个Rails项目，没想到和邀请我开发的人想法碰到一起，所以很高兴开发这个项目。项目的主旨是松耦合，高复用。这种程度到了应用的开发也要符合这个要求，这和研究半年多uchome得到的想法很一致。不多说了，等项目上线后，再整理心得吧。

由于个人原因耽误了些进度，在此表示歉意。

<a href="http://drupal.org/project/userpoints">User Points</a>，值得参考。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date>2008-11-28 08:40:10</wp:post_date>
		<wp:post_date_gmt>2008-11-28 08:40:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rspec-on-windows-and-netbeans65</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="rspec"><![CDATA[rspec]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>带着restful_authentication运行rspec时，貌似cookies无效的问题</title>
		<link>http://railser.cn/blog/restful_authentication-rspec-fails</link>
		<pubDate>Fri, 28 Nov 2008 14:40:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=366</guid>
		<description></description>
		<content:encoded><![CDATA[起因：在未做自己开发rspec的时候，只是调试下安装完 restful_authentication 的rspec和部分test时候，出现了几个错误：

1、

Spec::Mocks::MockExpectationError in 'SessionsController Logging in by cookie fails cookie login with bad cookie'
fails cookie login with bad cookie(Spec::Rails::Example::ControllerExampleGroup::Subclass_1::Subclass_4) expected :cookies with (any args) once, but received it 0 times
./spec/controllers/authenticated_system_spec.rb:85:

2、

'SessionsController Logging in by cookie logs in with cookie' FAILED
expected true, got false
./spec/controllers/authenticated_system_spec.rb:81:

3、

'AccessControlTestController requesting xml; I am logged in and Login is required succeeds' FAILED
expected "&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;hash&gt;\n  &lt;success&gt;xml&lt;/success&gt;\n&lt;/hash&gt;\n", got "HTTP Basic: Access denied.\n"
./spec/controllers/access_control_spec.rb:65:

这是为什么呢？

经过N个小时的思考和google，还是没有发现问题，但是刚才检查 logged_in?.should be_true 一句时，发现我在application_helper.rb里 竟然定义了个同名的方法。就是这个同名方法，搞乱了正常的测试结果。so，改名后，一切都正常了。

经验：1、学习和使用TDD开发还是需要时间的，2、下次应该不会犯了吧。。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2008-11-28 14:40:47</wp:post_date>
		<wp:post_date_gmt>2008-11-28 14:40:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>restful_authentication-rspec-fails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="rspec"><![CDATA[rspec]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[游客]]></wp:comment_author>
			<wp:comment_author_email>123@123.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.8.2.68</wp:comment_author_IP>
			<wp:comment_date>2008-11-30 00:07:32</wp:comment_date>
			<wp:comment_date_gmt>2008-11-30 00:07:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你得搞清楚 rails 的各个文件目录加载顺序]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>重读AWDWR笔记</title>
		<link>http://railser.cn/blog/awdwr-2</link>
		<pubDate>Sat, 29 Nov 2008 02:14:39 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[第12章
<ul>
	<li>使用 :through 声明，可以通过间接关联来联系两张表。</li>
	<li>可以使用 curl 或者 wget 工具来模拟请求xml。</li>
</ul>
<pre name="code" class="ruby">
class Product < ActiveRecord::Base
  has_many :orders, :through => :line_items
end

class Order < ActiveRecord::Base
  has_many :line_itemss
end

class LineItem < ActiveRecord::Base
  belongs_to :orders
  belongs_to :product
end
</pre>

<pre name="code" class="ruby">
curl http://localhost:3000/info/who_bought/1
</pre>

第11章
<ul>
	<li>after_destroy 钩子方法于 delete 同在一个事务中，因此只要该方法里抛出异常，整个事务会回滚。after_destroy 会在 delete 语句执行之后被调用。</li>
	<li>这里关键概念是，用异常来表示删除用户的过程中出现了错误。这里的异常同时承担两个任务。首先，在事务内部，异常会导致自动回滚；如果在删除用户之后 user 表为空，抛出异常可以撤销删除操作，恢复最后一个用户。</li>
	<li>其次，异常可以把错误信息带回给控制器。</li>
</ul>
<pre name="code" class="ruby">
# app/model/user.rb
def after_destroy
  if User.count.zero?
    raise "Can't delete last user."
  end
end

# app/controllers/login_controller.rb
def delete_user
  if request.post?
    user = User.find(params[:id])
    begin
      use.destroy
      flash[:notice] = "User #{user.name} deleted"
    rescue Exception => e
      flash[:notice] = e.message
    end
  end
  redirect_to :action => :list_users
end
</pre>
<ul>
	<li>before_filter 前置过滤器进行访问控制。</li>
	<li>利用 session 存储登录前的 uri 做出更有友好的登录系统。</li>
</ul>
<pre name="code" class="ruby">
# app/controllers/application.rb
private

def authorize
  unless User.find_by_id(session[:user_id])
    session[:original_uri] = request.request_uri
    flash[:notice] = "Please log in."
    redirect_to :action => :login, :controller => :login
  end
end

# app/controllers/login_controller.rb
before_filter :authorize, :except => :login
</pre>
<ul>
	<li>登录的一个典型做法。</li>
</ul>
<pre name="code" class="ruby">
# app/controllers/login_controller.rb
def login
  session[:user_id] = nil
  if request.post?
    user = User.authenticate(params[:name], params[:password])
    if user
      session[:user_id] = user.id
      redirect_to :action => :index
    else
      flash[:notice] = "Invalid user/password combination"
    end
  end
end
</pre>
<ul>
	<li>看一下完整的 user model。</li>
</ul>
<pre name="code" class="ruby">
# app/models/user.rb
require "digest/sha1"

class User < ActiveRecord::Base
  validates_presence_of :name
  validates_uniqueness_of :name

  attr_accessor :password_confirmation
  validates_confirmation_of :password

  def validate
    errors.add_to_base("Missing password") if hashed_password.blank?
  end

  def self.authenticate(name, password)
    user = self.find_by_name(name)
    if user
      expected_password = encrypted_password(password, user.salt)
      if user.hashed_password != expected_password
        user = nil
      end
    end
  end

  # 'password' is a virtual attribute
  def password
    @password
  end

  def password =(pwd)
    @password = pwd
    return if pwd.blank?
    create_new_salt
    self.hashed_password = User.encrypted_password(self.password, self.salt)
  end

  private

  def self.encrypted_password(password, salt)
    string_to_hash = password + "wibble" + salt
    Digest::SHA1.hexdigest(string_to_hash)
  end

  def create_new_salt
    self.salt = self.object_id.to_s + rand.to_s
  end
end
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date>2008-11-29 02:14:39</wp:post_date>
		<wp:post_date_gmt>2008-11-29 02:14:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awdwr-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile-web-development-with-rails"><![CDATA[AWDWR]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[awdwr-1-2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>重读AWDWR笔记</title>
		<link>http://railser.cn/blog/awdwr-3</link>
		<pubDate>Sat, 29 Nov 2008 06:49:31 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=382</guid>
		<description></description>
		<content:encoded><![CDATA[第9章
<ul>
	<li>使用局部模板。</li>
</ul>
<pre name="code" class="ruby">
render :partial => "cart", :object => @cart
render :partial => "cart_item", :collection => @cart.items
</pre>
<ul>
	<li>辅助方法的一个示例。</li>
</ul>
<pre name="code" class="ruby">
# app/views/layout/stroe.rhtml
<%= hidden_div_if(@cart.items.empty?, :id => "cart") %>
  <%= render :partial => "cart", :object => @cart %>
&lt;div&gt;

# app/controllers/store_controller.rb
def hidden_div_if(condition, attributes = {})
  if condition
    attributes["style"] = "display: none;"
  end
  attrs = tag_options(attributes.stringify_keys)
  "<div #{attrs}>"
end
</pre>

第10章
<ul>
	<li>validates_inclusion_of 方法验证某属性，在指定的列表中存在。防止别人构造不存在的支付方法逃避支付。</li>
</ul>
<pre name="code" class="ruby">
PAYMENT_TYPES = [
    ["Check", "check"],
    ["Credit Card", "cc"],
    ["Purchase Order", "po"]
  ]

validates_inclusion_of :pay_type, :in => PAYMENT_TYPES.map {|disp, value| value}
</pre>
<ul>
	<li>一个向 Order 中填充 Cart 里面订购项目的过程。</li>
</ul>
<pre name="code" class="ruby">
# app/controller/stroe_controller.rb
def save_order
  @cart = find_cart
  @order = Order.new(params[:order])
  @order.add_line_items_from_cart(@cart)
  if @order.save
    session[:cart] = nil
    redirect_to_index("Thank you for your order")
  else
    render :action => :checkout
  end
end

# app/models/order.rb
def add_line_items_from_cart(cart)
  cart.items.each do |item|
    li = LineItem.from_cart_item(item)
    line_items << li
  end
end

# app/models/line_item.rb
def self.from_cart_item(cart_item)
  li = self.new
  li.product = cart_item.product
  li.quantity = cart_item.quantity
  li.total_price = cart_item.price
  li
end
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>327</wp:post_id>
		<wp:post_date>2008-11-29 06:49:31</wp:post_date>
		<wp:post_date_gmt>2008-11-29 06:49:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awdwr-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile-web-development-with-rails"><![CDATA[AWDWR]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>重读AWDWR笔记</title>
		<link>http://railser.cn/blog/awdwr-4</link>
		<pubDate>Sat, 29 Nov 2008 17:44:20 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=385</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>加载路径</strong>
标准的环境配置回自动将下列目录纳入应用程序的加载路径。
<ul>
	<li>test/mocks/environment 由于该目录位于加载路径的第一位，在这里定义的类回自动覆盖真正的实现类，这样你就可以在测试阶段使用这些替代品。</li>
	<li>app/controllers 目录及其子目录。</li>
	<li>app/models 和 components 目录下所有以下划线或者小写字母开头的目录。</li>
	<li>app, app/models, app/controllers, app/helps, app/services, app/apis, components, config, lib 以及 vendor 目录</li>
	<li>检查 vendor/rails 目录，如果存在就从这里加载 Rails 库。</li>
</ul>
<strong>命名约定</strong>
<ul>
	<li>变量名全部小写，单词之间以下划线分割。</li>
	<li>类和模块的名称没有下划线，短语中每个单词的首字母大写。</li>
	<li>表应该像变量一样，采用小写字母，并且是复数形式。</li>
	<li>文件名全部小写，以下划线分割。</li>
	<li>controller 用名词，action 用动词。当你创建了一个 action 的名字是 动词_名词 这样的格式，那么有必要再创建一个新的controller了 。</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date>2008-11-29 17:44:20</wp:post_date>
		<wp:post_date_gmt>2008-11-29 17:44:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awdwr-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile-web-development-with-rails"><![CDATA[AWDWR]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>随便写写</title>
		<link>http://railser.cn/blog/2008-11-30</link>
		<pubDate>Sun, 30 Nov 2008 08:28:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[刚才看了gmail里发来的<a href="http://www.infoq.com/cn/news/2008/11/Database-Martin-Fowler" target="_blank">一篇文章</a>，引用一句话


<blockquote>
应用开发者都应该思考到底哪种选择才是最符合其需要的
</blockquote>

08年11月即将过去了]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2008-11-30 08:28:28</wp:post_date>
		<wp:post_date_gmt>2008-11-30 08:28:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2008-11-30</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate的HTML快捷键</title>
		<link>http://railser.cn/blog/textmate-html</link>
		<pubDate>Tue, 02 Dec 2008 04:42:54 +0000</pubDate>
		<dc:creator>wangjiaopeng</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=392</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li>选中文字后按 appli ＋ I 是 em</li>
	<li>选中文字后按 appli ＋ B 是 strong</li>
	<li>选中一行文字后按 shift ＋ctrl ＋W 是用一对标签包裹它 </li>
	<li>选中一行文字后按 ctrl ＋ apple＋H 是用 h* 标签包裹它</li>
	<li>选中文字后按 ctrl ＋ apple＋B 是用块标签包裹它</li>
	<li>选中多行文字后按 shift ＋ctrl ＋ apple＋W 是用一组标签包裹各行</li>
	<li>选中多行文字后按 ctrl ＋ apple＋L 是用列表标签包裹各行</li>
	<li>插入一对标签 ctrl + < </li>
	<li>插入一个结尾标签 Option ＋ apple + .</li>
	<li>apple + & 进行URL编码</li>
	<li>ctrl + H 帮助文件</li>
	<li>shift + ctrl + V 校验W3C规范</li>
	<li>option + ESC 自动补完html标签和属性</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date>2008-12-02 04:42:54</wp:post_date>
		<wp:post_date_gmt>2008-12-02 04:42:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>textmate-html</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails中基于属性的动态查询</title>
		<link>http://railser.cn/blog/dynamic-attribute-based-finders</link>
		<pubDate>Sun, 07 Dec 2008 02:26:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=397</guid>
		<description></description>
		<content:encoded><![CDATA[这是个很简单的Rails2.1.2的 find 的应用，来自Rdoc ActiveRecord::Base

一、find :first 和find :all

使用 Model.<span style="color: #ff0000;">find</span>_by_user_name ，来简写 Model.find(:first, :conditions=&gt;["user_name=?",user_name])

使用 Model.<span style="color: #ff0000;">find_all</span>_by_user_name ，来简写 Model.find(:all, :conditions=&gt;["user_name=?",user_name])

这里也可以使用and，比如典型的用户名和密码查询：Person.find_by_user_name_and_password(user_name, password)

find也支持带参数的查询，比如Payment.find_all_by_amount(50, :order =&gt; "created_on")

二、<span style="font-family: Courier New;">find_or_create_by_和find_or_initialize_</span>

<span style="font-family: Courier New;">find_or_create_by_：当查询的内容不存在时，<span style="color: #0000ff;">创建并保存</span>该记录</span>

<span style="font-family: Courier New;">find_or_initialize_：更上面的相似，只是<span style="color: #0000ff;">创建不保存</span><span style="color: #000000;">该记录，需要自己再次save</span></span>

<span style="font-family: Courier New;">这里也支持参数和代码块，如</span>

User.find_or_create_by_name('Bob', :age =&gt; 40) { |u| u.admin = true }

三、find_by_的时候，支持多属性，如

Tag.find_or_create_by_name(:name =&gt; "rails", :creator =&gt; current_user)

以上文字来自Rails2.1.2的Rdoc文档ActiveRecord::Base]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2008-12-07 02:26:43</wp:post_date>
		<wp:post_date_gmt>2008-12-07 02:26:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-attribute-based-finders</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>开发笔记：rails分页和acts_as_taggable插件的应用[重发]</title>
		<link>http://railser.cn/blog/development-log-rails-pagnate-and-acts-as-taggable</link>
		<pubDate>Thu, 18 Dec 2008 16:15:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/archives/development-log-rails-pagnate-and-acts-as-taggable</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><script type="text/javascript"><!--mce:0--></script>
<script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript"><!--mce:1--></script></pre>
最近一个月在忙于开发项目，所以没有更新博客。不过开发中还是学到不少东西。

对于一个程序员，阅读是相当有帮助的，读别人的博客，读源码，读经验文章 ，即便读别人的开发代码，都是有帮助的。

本次开发的初始，就是在读别人的开发代码，然后一点点找到思路，继续在原有基础上加强功能。由于上一个版本的代码写的相当有水准，所以对自己的开发也提高不少。

本次开发的项目是一个在线视频教学系统。开发中用到了曾经写过的分页代码和一个rails插件：acts_as_taggable。

下面对这两个部分进行总结。
<h3>一、分页</h3>
下面的程序在3个项目上使用过。
models/page.rb
<blockquote>
<pre lang="ruby">class Page
  attr_accessor :pages #分页连接列表，[]类型
  attr_accessor :cur #当前页
end</pre>
</blockquote>
helpers/application_helper.rb
<blockquote>
<pre lang="ruby">  def howtopage_links(pagecls=nil) #在页面输出分页连接，pagecls:分页实例
    if pagecls
      return pagecls.pages.collect {|t|
      [if t.to_s == pagecls.cur
        "<a class="now" href="http://railser.cn/wp-admin/?page=#%7Bt.to_s%7D">"+(t.to_s)+"</a>"
      else
        "<a href="http://railser.cn/wp-admin/?page=#%7Bt.to_s%7D">"+(t.to_s)+"</a>"
      end]
      }
    end
  end</pre>
</blockquote>
controllers/application.rb
<blockquote>
<pre lang="ruby">  def howtopage(totalcount=0, per_page=6)
    cur_page = params[:page] || 1 #直接从页面取得page变量
    x = (cur_page.to_i - 1) * per_page
    pagecount = totalcount / per_page
    if totalcount % per_page != 0
      pagecount += 1
    end
    page = Page.new
    page.pages = (1..pagecount).collect
    page.cur = params[:page] || "1"
    return page, x #page为一个包装的分页类，x为find方法的偏移量
  end</pre>
</blockquote>
在一个notebook_controller.rb中
<blockquote>
<pre lang="ruby">@notes_count = Notebook.count(:conditions=&gt;['user_id = ?', params['user_id']])
per_page = 6 #每页记录数
@page, x = howtopage(@notes_count, per_page)
@notes = Notebook.find(:all, :conditions=&gt;['user_id = ?', params['user_id']],
 :order=&gt;"id desc", :offset=&gt;x, :limit=&gt;per_page)</pre>
</blockquote>
在对应的页面中
<blockquote>
<pre lang="ruby">&lt; %=howtopage_links(@page)%&gt;</pre>
</blockquote>
这段方法有很多可以改进的地方，但是能用就好。
不过这个分页绝对算是ruby和rails入门的练习，如果想使用更专业的分页，还是推荐will_paginate插件。可以通过下面的方法安装：
script/plugin install svn://errtheblog.com/svn/plugins/will_paginate
介绍页面：<a href="http://errtheblog.com/posts/56-im-paginating-again">http://errtheblog.com/posts/56-im-paginating-again</a>

08年12月19日补充：

这篇博客是去年12月2日写的，一年的时间足够改变世界了。现在这个插件的地址在：http://github.com/mislav/will_paginate/tree/master
<h3>二、acts_as_taggable</h3>
虽然标题写的是acts_as_taggable，但是首先要说明，我用的是acts_as_taggable_on_steroids，可以通过下面的方法进行安装：
ruby script/plugin install
http://svn.viney.net.nz/things/rails/plugins/acts_as_taggable_on_steroids
<blockquote>注意不同之处：
在<a href="http://www.slashdotdash.net/articles/2006/04/29/acts_as_taggable-per-user-tagging"> acts_as_taggable per user tagging</a>篇提到：also an acts_as_taggable的gem安装和plugin安装结果是不一样的. acts_as_taggable的plugin仅适用与Rails 1.1.
里克：其实上面写这句话的人是针对不同版本的，仅供参考。

所以，选择哪个tag插件，需要注意下。不同的插件使用的方法是不一样的。DDH的acts_as_taggable<a href="http://taggable.rubyforge.org/">文档</a>是关于那个插件的，它可以通过
svn co http://dev.rubyonrails.com/svn/rails/plugins/legacy/acts_as_taggable/ acts_as_taggable
获得。目前看也仅能从这里获得。</blockquote>
非常详细的适用方法请看<a href="http://agilewebdevelopment.com/plugins/acts_as_taggable_on_steroids">Plugins - Acts As Taggable On Steroids</a>
<h3>其他Rails插件</h3>
本部分被转移到 <a href="http://railser.cn/archives/mephistoblog-vender-and-plugins">MephistoBlog使用的插件和第三方代码介绍</a>

参考资料：
<a href="http://taggable.rubyforge.org/">RDoc</a>
<a href="http://wiki.rubyonrails.org/rails/pages/Acts+As+Taggable+Plugin">Acts As Taggable Plugin</a>
<a href="http://wiki.rubyonrails.org/rails/pages/ActsAsTaggablePluginHowto">ActsAsTaggablePluginHowto</a>
<a href="http://agilewebdevelopment.com/plugins/acts_as_taggable_on_steroids">Plugins - Acts As Taggable On Steroids</a>
<a href="http://www.slashdotdash.net/articles/2006/04/29/acts_as_taggable-per-user-tagging"> 为每个用户曾加tag功能[acts_as_taggable per user tagging]</a>
<a href="http://baike.baidu.com/view/15482.htm">ASCII</a>
<a href="http://rubylib.cn/">Ruby Lib中文站</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date>2008-12-18 16:15:41</wp:post_date>
		<wp:post_date_gmt>2008-12-18 16:15:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>development-log-rails-pagnate-and-acts-as-taggable</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="acts_as_taggable"><![CDATA[acts_as_taggable]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f373c15a1a798b8c6be0074fa38892d6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c0c8c51a84ed6f9dbdacda74fbfb22f0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fd62af2318ccf2056c92fc30e7f3b309</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails Rdoc笔记：respond_to</title>
		<link>http://railser.cn/blog/rails-rdoc-respond_to</link>
		<pubDate>Tue, 30 Dec 2008 13:29:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=404</guid>
		<description></description>
		<content:encoded><![CDATA[首先祝所有的朋友09年工作学习顺利。祝<a href="http://liyuang.com" target="_blank">李猪猪小朋友</a>即将到来的幼儿园生活开心。

刚才看了下respond_to这个方法，想写上一些东西。

最新做的项目，要求松耦合。因为之前2个月一直在做康盛的uchome的项目设计，对这种设计方式有点自己的想法。所以在初级设计这个代号kx2009的Rails项目时，走了些弯路。刚才看到redpond_to的文字，感觉又回到了一个正确使用Rails的方向，就是更加的REST，要web service。

REST的概念在我心里是来做资源管理的，这个资源管理要简单，所以我并不喜欢/users/1/posts/22这种资源嵌套，我更喜欢是/users/1，而他的posts就是/posts/index,/posts/22，足够。

多态。这次用到了很多多态的方法，使得设计上每个部分都很松耦合，能够复用，比如那个photos，就可以给活动，圈子，论坛去承担不同Model的图片上传，显示，管理功能。积分和信誉积分采用了同样的设计，下面的Account就是多态。（不过自动累加上一个Model的total字段稍微麻烦了点，magic有类似counter_cache的功能吗？对belongs_to那方的total字段进行自动加减？）

好了，看看Rdoc的描述。大意是：Rails是一个很好的web-service框架。
<blockquote>
<div class="method-description">

Without web-service support, an action which collects the data for displaying a list of people might look something like this:
<pre>  def index
    @people = Person.find(:all)
  end</pre>
Here‘s the same action, with web-service support baked in:
<pre>  def index
    @people = Person.find(:all)

    respond_to do |format|
      format.html
      format.xml { render :xml =&gt; @people.to_xml }
    end
  end</pre>
What that says is, "if the client wants HTML in response to this action, just respond as we would have before, but if the client wants XML, return them the list of people in XML format." (Rails determines the desired response format from the HTTP Accept header submitted by the client.)

Supposing you have an action that adds a new person, optionally creating their company (by name) if it does not already exist, without web-services, it might look like this:
<pre>  def create
    @company = Company.find_or_create_by_name(params[:company][:name])
    @person  = @company.people.create(params[:person])

    redirect_to(person_list_url)
  end</pre>
Here‘s the same action, with web-service support baked in:
<pre>  def create
    company  = params[:person].delete(:company)
    @company = Company.find_or_create_by_name(company[:name])
    @person  = @company.people.create(params[:person])

    respond_to do |format|
      format.html { redirect_to(person_list_url) }
      format.js
      format.xml  { render :xml =&gt; @person.to_xml(:include =&gt; @company) }
    end
  end</pre>
If the client wants HTML, we just redirect them back to the person list. If they want Javascript (format.js), then it is an RJS request and we render the RJS template associated with this action. Lastly, if the client wants XML, we render the created person as XML, but with a twist: we also include the person‘s company in the rendered XML, so you get something like this:
<pre>  &lt;person&gt;
    &lt;id&gt;gem&lt;/id&gt;
    gem
    &lt;company&gt;
      &lt;id&gt;gem&lt;/id&gt;
      &lt;name&gt;gem&lt;/name&gt;
      gem
    &lt;/company&gt;
  &lt;/person&gt;</pre>
Note, however, the extra bit at the top of that action:
<pre>  company  = params[:person].delete(:company)
  @company = Company.find_or_create_by_name(company[:name])</pre>
This is because the incoming XML document (if a web-service request is in process) can only contain a single root-node. So, we have to rearrange things so that the request looks like this (url-encoded):
<pre>  person[name]=gem&amp;person[company][name]=gem&amp;gem</pre>
And, like this (xml-encoded):
<pre>  &lt;person&gt;
    &lt;name&gt;gem&lt;/name&gt;
    &lt;company&gt;
      &lt;name&gt;gem&lt;/name&gt;
    &lt;/company&gt;
  &lt;/person&gt;</pre>
In other words, we make the request so that it operates on a single entity‘s person. Then, in the action, we extract the company data from the request, find or create the company, and then create the new person with the remaining data.

Note that you can define your own XML parameter parser which would allow you to describe multiple entities in a single request (i.e., by wrapping them all in a single root node), but if you just go with the flow and accept Rails’ defaults, life will be much easier.

If you need to use a MIME type which isn‘t supported by default, you can register your own handlers in environment.rb as follows.
<pre>  Mime::Type.register "image/jpg", :jpg</pre>
</div></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>345</wp:post_id>
		<wp:post_date>2008-12-30 13:29:09</wp:post_date>
		<wp:post_date_gmt>2008-12-30 13:29:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-rdoc-respond_to</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="rdoc"><![CDATA[rdoc]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[CFC]]></wp:comment_author>
			<wp:comment_author_email>zusocfc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zusocfc.pixnet.net/blog</wp:comment_author_url>
			<wp:comment_author_IP>123.204.134.76</wp:comment_author_IP>
			<wp:comment_date>2009-01-23 13:42:39</wp:comment_date>
			<wp:comment_date_gmt>2009-01-23 13:42:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[自動加減似乎沒法做到
只能用:
increment!, decrement!, update_counter
來做了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用attachment_fu实现多图上传</title>
		<link>http://railser.cn/blog/multi-file-uploads-with-attachment-fu</link>
		<pubDate>Sun, 11 Jan 2009 08:32:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=406</guid>
		<description></description>
		<content:encoded><![CDATA[请参考<a href="http://howtomatic.com/category/programming/14-ruby-on-rails-multi-file-uploads-with-attachment-fu" target="_self">这篇文章</a>。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>347</wp:post_id>
		<wp:post_date>2009-01-11 08:32:33</wp:post_date>
		<wp:post_date_gmt>2009-01-11 08:32:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multi-file-uploads-with-attachment-fu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="attachment_fu"><![CDATA[attachment_fu]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>貌似php父路径问题引发的问题</title>
		<link>http://railser.cn/blog/its-not-php-parent-path-problem</link>
		<pubDate>Wed, 04 Feb 2009 12:37:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=354</guid>
		<description></description>
		<content:encoded><![CDATA[问题出现了：

转移了discuz！6.1论坛到新的服务器，因为使用的火狐插件来播放flash，所以打开时发现提示：“failed to open include/common.inc.php”的提示。

分析：

之前，论坛在windows环境下，搭建的php，转来后，虽然还是windows，但是改成了apache做前端。因为php的设置肯定不会转过来，所以应该在配置或权限上出的问题。

检查：

权限上，用论坛自带的检查看了下没有问题，所以可能是apache配置或php的配置问题。

查了下百度和google，大家都在认为貌似是父路径的问题。看了下open_basedir的描述，貌似是问题的关键，<span style="color: #ff6600;">可是里面提到了safe_mode设置</span>，对比了下<span style="color: #ff6600;">windows</span>的php环境和<span style="color: #ff6600;">apache</span>的php环境配置，发现windows下的safe_mode=Off，而新的apache环境是On。

解决：

改成Off后，正常访问了。

后话：

很久没有动apache的配置了，希望这次能是一个好的开始。另：今天，已经搬进新房子了，虽然是租的，但是更多的人感觉我自己开了个工作室。貌似是吧，我可以专心工作，写博客，学习了。李猪猪小朋友不会再跑来抢电脑或者：“闪开，就坐一会”啦~！

希望未来两个月可以把工作重新走上正规。加油，加油~~！！湘北必胜~~！！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>354</wp:post_id>
		<wp:post_date>2009-02-04 12:37:23</wp:post_date>
		<wp:post_date_gmt>2009-02-04 12:37:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>its-not-php-parent-path-problem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apache"><![CDATA[apache]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[asda]]></wp:comment_author>
			<wp:comment_author_email>adfdffsd@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.110.174.244</wp:comment_author_IP>
			<wp:comment_date>2009-03-05 08:31:32</wp:comment_date>
			<wp:comment_date_gmt>2009-03-05 08:31:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看了最好一句话，让我不知道你是男的还是女的！……]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fckeditor on Rails的问题和临时解决办法</title>
		<link>http://railser.cn/blog/fckeditor-on-rails-problems-and-solutions</link>
		<pubDate>Sun, 08 Feb 2009 07:25:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=356</guid>
		<description></description>
		<content:encoded><![CDATA[在目前的项目中使用了Fckeditor On Rails插件，没想到碰到很不少问题，网上google一下，发现大家都有这样的问题，有的是这个plugin的问题，有的是fck的问题。为了方便日后对系统的管理，在此笔记一下目前碰到的诸多问题和临时的解决办法。

问题：

1、无法编辑内容，编辑时出现js问题

2、上传图片时无法准确放入指定Image文件夹路径中

3、上传文件时无法得到params[:Type]变量

4、无法使用 fckeditor 的文件上传配置

5、上传中文rar文件时，出现110错误提示

解决：

1、插件似乎没有考虑修改的问题，之前我的asp做的EZAdmin中，简单的传递内容即可，现在看来插件里并没有去处理传进来的value属性，所以在fckeditor.rb中增加了这个方法，使之能够编辑内容。

2、图片可以传递入Image文件夹内，但是结果中没有后面的文件名，具体原因似乎是版本的事情，这个暂时不去对比了，改了fckeditor_controller.rb中的返回值内容，也就是使 <span style="color: #ff0000;">OnUploadCompleted的第二个参数带上了文件名</span>，暂时得以解决。

3、问题同2类似，这时无法得到params[:Type]参数，看了下fck_image.js里，对图片上传设置了type属性为image，<span style="color: #ff0000;">但是文件上传，或者叫Link上传时，没有设置这个属性</span>。所以在fckeditor_controller.rb中，当该属性为空时，设置为File。这个修改<span style="color: #ff0000;">非常危险</span>，但是目前没有更好的方法。

4、在文件上传时，作者自定义了MIME_TYPE数组，来做校验。这个有点。。。。所以暂时将几个类型加上，解决doc,zip,rar等文件上传先。

application/msword

application/x-zip-compressed

application/octet-stream （rar的）

5、当上面都解决完，发现对中文名文件无法上传，哭吧。。。。。。

下面是我修改完的Fckeditor on Rails plugin，希望朋友们多指正问题。谢谢。

说明：plugin版本：0.5.1，Rails版本：2.1.2，两个部分的，不用安装了。

<a href="http://railser.cn/wp-content/uploads/fckeditor051-for-rails212.rar" target="_blank">fckeditor051-for-rails212</a>

<a href="http://railser.cn/wp-content/uploads/javascripts.rar" target="_blank">javascripts</a>

后记：

记得每次修改完插件内容后要重启一下服务]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>356</wp:post_id>
		<wp:post_date>2009-02-08 07:25:26</wp:post_date>
		<wp:post_date_gmt>2009-02-08 07:25:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fckeditor-on-rails-problems-and-solutions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fckeditor"><![CDATA[fckeditor]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sns ui 设计要看的两篇文章</title>
		<link>http://railser.cn/blog/sns-ui-design-blog</link>
		<pubDate>Mon, 09 Feb 2009 12:40:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=362</guid>
		<description></description>
		<content:encoded><![CDATA[声明：本文转载自<a href="http://www.5gme.com/space-84-do-blog-id-8867.html">http://www.5gme.com/space-84-do-blog-id-8867.html</a>
<div id="blog_article" class="article">
<div class="resizeimg">

浅析facebook的信息架构

facebook的信息架构设计，是目前为止互联网上我见过的最合理的信息架构。

每次<a href="http://ucdchina.com/blog/?p=495" target="_blank">培训</a>，我基本都需要拿20分钟左右的时间来解析它，包括老的、新的、被抄袭的。 一直打算把这个解析过程写下来，但讲的时候可以图音并茂，写的时候确实表达起来很难。
今日权且一试，希望能把培训师讲到的内容表达出30%。(只写现在界面上表现出来的东西，不分析栏目划分已经扩展性问题了)

先看facebook老版界面的信息架构：

 
<div style="cursor: pointer; position: relative;"><img style="margin-top: 5px; margin-left: 472px; position: absolute;" src="http://www.5gme.com/image/zoom.gif" alt="" /><img style="width: 500px;" title="点击图片，在新窗口显示原始尺寸" src="http://uicom.net/blog/attachments/200706/facebook_old.png" alt="" /></div>
<strong>大架构的发展和变迁过程：</strong> 

1、最开始，facebook的整个信息架构主要分成三个部分：“系统核心导航区”（如上图，蓝色部分。包括LOGO和两个全部导航）、“应用导航区”（如上图，黄色部分。包括一个全局应用(搜索)和所有的应用列表）、“内容显示区”（如上图，橙色部分。主要分成局部导航、主内容、辅助内容三个大部分，有N多主要内容）。

由于“系统核心导航区”、“应用导航区”的常态存在和内容繁多，在用户使用时经常会干扰用户对主要内容的关注。所以，facebook在视觉设计上，特意通过错位特别突出了“内容显示区”（如上图，橙色部分。我看到有些设计师说“facebook的视觉很烂，把那个位置扭曲了很傻”，其实他们根本没有看出设计者的意图，很傻！）

2、后来，facebook添加了“协作翻译”，这是一个全局功能。按照一般的设计思路，这个“翻译”的位置选择可以：放在“全部导航3（设置）”的位置，或作为“全部导航2（应用）”的一个常态项目。
但facebook没有这么做，为了更好的表现其牛逼的UGC魅力，facebook的设计师大大加重了“翻译”在导航上的比重。“不伦不类”的把这个应用，突出在了“内容显示区”的右上角，同时在“全部导航3（设置）”里加了一个语言切换的导航（后来大概是发现“语言切换”的使用频率很少，现在给调换到了底部版权信息的右侧）。

3、再后来，facebook推出了IM功能。对于facebook来说这是一个常态应用，在信息架构上必须常态存在。于是他们把“即时通讯”结合了“信息通知”一起作成了“状态栏”的模式。  （我猜想，这个时候facebook的设计师们已经有了“操作系统”的设想）

这是一个很艺术性的设计，处理的非常好。而且IM本身设计做的非常轻巧易用。 在此之前我曾经猜测，他们可能会把IM放到“系统核心导航区”的“收件箱”的位置，结果我错了，他们找到了更好的设计方式。

4、如今，由于“系统核心导航区”（如上图，蓝色部分）、“应用导航区”（如上图，黄色部分）是常态存在的内容，占据了界面很大比例的位置，再加上内容显示区（如上图，橙色部分）本身还需要一些“关联导航”“友好导航”已经“标题”的内容，导致每个页面真正展示“内容”的区域很少很少。
作为一个网站，这没有什么大问题。但作为一个“应用平台”，这无疑有很多的障碍，界面内容展现严重受限，用户的视觉总是浪费“常态导航”上。想一想如果你的操作系统界面，1/3空间长期被系统菜单占据，你会不会崩溃？

.

<strong>我对老版设计的，几个主要评价：</strong>

1、逻辑清晰，层次分明严谨。扩展性好。但在内容呈现上，缺乏创新。

2、facebook整个网站的核心是“我的”，这就是他顶部系统核心导航区（如第一张图，蓝色部分）。另外，顶部还有“全部导航3（设置）”。整个顶部是网站的核心，用户不可能被用户或者第三方改变，也是facebook的官方保留“区域”。

但，这里有个细节他们一直蹑手蹑脚没有真正放开，就是那个权宜之计的“home”。
事实上现在大部分用户返回首页都会点击logo，facebook在主导航上取消了“home”，但又不敢完全取消，于是在“全部导航3（设置）”那个区域前面加了一个“home”，而且还把这个链接和logo的链接作了区分，一直保持着对数据的检测（包括最新的信息架构设计也一样作了链接区分，在检测数据。有兴趣人可以看看logo的链接和home的链接地址不一样）

3、facebook的主要导航其实是“应用导航区”。这里影响了主要内容区的显示。
“系统核心导航区”和“应用导航区”包围着内容显示区的做法，结构和逻辑都很清晰，而且容易理解。

4、主要内容区有一个设计一直存在争议：
比如，在“图片”的页面，facebook加了两个链接“我的图片”“有我的图片”，这两个链接被处理成了“友好导航”，用户点击后到了新的界面，新的界面无法返回当前“图片”的应用。
但，就国内用户（我不是很相信在这个地方存在国内外用户使用习惯的偏差）的使用习惯来看，这两个链接应该被当作“关联导航”甚至“局部导航”处理。这也是UCH在抄袭facebook时做过的为数不多的“好改动”之一。
.
.

<strong>再看看facebook现在新的信息架构设计：</strong>

如上所说，老版的信息架构显示了facebook的主要内容展示区域。使每个界面都背负了严重的“导航任务”。
于是facebook开始尝试改变。刚开始，他们试图拉宽整个内容显示区的空间，把应用导航区和常态提示信息放到系统核心导航区下面，做成windows“开始菜单”的模式。（这个版本有些人看到过，UCH现在准备出的新版抄袭了这个设计。在这里不做详细评价）

（也许他们觉得这样还是太啰嗦，内容显示区还是不够大），现在他们把应用导航区合并到了系统核心导航区里。 不仅是内容布局上作了改变，连栏目的规划都有了新的变化。（这个版本可以在“http://www.new.facebook.com”看到）

 
<div style="cursor: pointer; position: relative;"><img style="margin-top: 5px; margin-left: 472px; position: absolute;" src="http://www.5gme.com/image/zoom.gif" alt="" /><img style="width: 500px;" title="点击图片，在新窗口显示原始尺寸" src="http://uicom.net/blog/attachments/200706/facebook_new.png" alt="" /></div>
 

主要变化：

1、将所有全部导航和引用压缩到顶部的一个区域，甚至不惜大举压缩LOGO尺寸，让这个区域尽可能的小。（如图，蓝色区域）
当然，这样的大变化也伴随着其栏目划分的重新规划。

2、将广告从左边拿到右边。尽可能的放大并在主要的视觉“焦点区”突出具体的页面内容。

3、保持IM和通知的常态显示，并将“翻译”合并到一起。

.

<strong>我对新版设计的，几个主要评价：</strong>

1、新的信息架构设计其实面临着很大的调整。要从一个传统网站到一个应用平台作专门，确实很难很难。对于一般的界面设计师来说，这个任务很难完成。但facebook的设计师做到了，而且从时间上来看他们很有前瞻性，呈现层的设计甚至走到了策略之前。
2、新的设计改的大胆，页面就应该表现出“系统”的感觉。 每一个应用就像一个软件。“应用”列表就应该合并起来，“应用”和“应用”之间的切换根本不需要那么快捷。

3、顶部蓝色的主导航区应该再加宽（只要不是100%宽度就行）、压低，完全做成状态栏的样式。

3、把应用夹杂到“我的”一些选项中间不合理。特别是放在好友和收件箱中间。
如果是我设计，我会把LOGO变成“开始菜单”，把应用放进去。

.
.

<strong>最后，看看一些抄袭者的作品：</strong>（是谁我就不说了）

（作品1）
<div style="cursor: pointer; position: relative;"><img style="margin-top: 5px; margin-left: 472px; position: absolute;" src="http://www.5gme.com/image/zoom.gif" alt="" /><img style="width: 500px;" title="点击图片，在新窗口显示原始尺寸" src="http://uicom.net/blog/attachments/200706/facebook_3.png" alt="" /></div>
<strong>点评： </strong>
这个设计单看一个页面就有问题，属于层次混乱。 单个页面的逻辑不顺畅。
用户经常不知道自己在哪里。
而且没有将关联导航和友好导航区分开，次序和逻辑都交代的十分混乱。 

.

（作品2）
<div style="cursor: pointer; position: relative;"><img style="margin-top: 5px; margin-left: 472px; position: absolute;" src="http://www.5gme.com/image/zoom.gif" alt="" /><img style="width: 500px;" title="点击图片，在新窗口显示原始尺寸" src="http://uicom.net/blog/attachments/200706/facebook_2.png" alt="" /></div>
 

<strong>点评：</strong>
这是某社区专家的网站结构图，单看他的页面没有任何问题，结构清晰，层次分明。
但，用户只要一使用，就晕乎。改动过的信息架构（其实只是把内容区的“关联导航（操作和设置）”的放到了“全局导航2（应用）的上面”）使用起来极其不流畅。（为什么不流畅，在这里不多解释）。

该网站从上线到现在一直充斥着一类投诉：靠，怎么加入群呀？ 怎么设置群？ ….

虽然是借用facebook的信息机构，但足见抄袭之失败。虽然只是一个“关联导航（操作和设置）”的变化而已。

.

.

.

此文为抛砖引玉，我想说的内容大概只表达了1/3不到。（这里只说了布局，并未说栏目、导航划分的原则、延续性、扩展性等问题）
.

结束，简单总结：

好的信息架构设计，可以清楚的表现产品定位，可以清楚的阐述内容层次和关系，可以在使用中保持流畅，并能够让用户迅速的熟悉。

所谓“<strong>清楚的表现产品定位</strong>”：用户一看网站的信息架构，就知道这个网站是干什么的，我是否应该留在这里，我在这里能干什么应该怎么开始去用。
所谓 “<strong>清楚的阐述内容层次和关系</strong>”：用户一看网站的信息架构，就清楚知道页面上有多少内容，内容和内容之间的关系是什么，什么类型的内容在什么位置。
所谓“<strong>可以在使用中保持流畅</strong>”：让用户在使用的过程中感觉不到“跳转”和“障碍”，感觉自己在一个平和世界里畅游，非常流畅，不跳动、不卡机。
所谓“<strong>能够让用户迅速的熟悉</strong>”：用户看到你的第一个界面时，也许需要找一下他需要的内容在那里，也许会觉得这个网站陌生、有距离。但当他很自然的看到第二个、第三个界面后，应该感觉“这个网站很熟悉”，需要任何内容时都不用去“找”，很自然的就能知道什么类型的内容在什么位置。
.

PS:
我敢断言，“呈现层的信息架构和导航”必将成为未来网站产品设计中的核心工作，未来一个网站的设计80%工作都在此。其学问之深并非一两本书能说清楚，更不是一两篇blog能表达明白的。
欢迎有兴趣者深入交流。</div>
</div>
里克：最近的项目和未来的一个项目都是sns为基础的应用，可见现在有点规模的站点sns是必备的。看了下面这个文章的确思路清晰不少。

个人观点：UI的设计是一个简-繁-简的前进路线，目前我给客户设计的站点，可以用下面的图概括

<img class="alignnone" title="demo" src="http://railser.cn/wp-content/uploads/demo.png" alt="" width="800" height="341" />

主要的想法是：同类的功能操作，放在一起，用tab实现并列，tab的current颜色，实现用户的当前定位。

这仅是个人的想法，需要一定时间来改进。毕竟uchome将在几个月后带来审美疲劳，个性风格必将在sns普及的大环境下有更多的需求。（外包的好时机哦。）所以抓紧理论的研究，能给给客户一个满意的方案。里克个人见解，欢迎朋友们讨论。

这篇文章同样值得看一下：

<a href="http://hi.baidu.com/%C2%ED%C1%BCs/blog/item/7bc98638ab83daf4b311c739.html">http://hi.baidu.com/%C2%ED%C1%BCs/blog/item/7bc98638ab83daf4b311c739.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>362</wp:post_id>
		<wp:post_date>2009-02-09 12:40:23</wp:post_date>
		<wp:post_date_gmt>2009-02-09 12:40:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sns-ui-design-blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="ui"><![CDATA[ui]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sns网站ui框架概念图</title>
		<link>http://railser.cn/blog/sns-site-ui-conceptual-graph</link>
		<pubDate>Fri, 13 Feb 2009 12:26:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=370</guid>
		<description></description>
		<content:encoded><![CDATA[最近太多的sns站点需求摆在脑海里（所以晚上睡不着觉，哎），所以画了一张，给予自己目前项目设计的ui框架，姑且是一个概念图吧。在此简单笔记一下思路：

<a href="http://railser.cn/wp-content/uploads/2009/02/layout.png"><a href="http://railser.cn/wp-content/uploads/2009/02/layout1.png"><img class="alignnone size-full wp-image-378" title="layout1" src="http://railser.cn/wp-content/uploads/2009/02/layout1.png" alt="layout1" width="600" height="400" /></a>
</a>

1、header，footer：目前的趋势是更加充分利用header的空间，增加隐藏层，通过鼠标实践显示一个列表内容。header，只提供整站大分类导航

2、sider_bar：应用导航。放到左侧，更加重用户的关注度，用户会更多的点击里面的连接。比如uchome把博客（发布），图片（上传）等操作放到这里。下面是游戏的列表。

但是对于所有页面，side_bar并不全都适合，1、影响到内容的展示，占用了200px空间。2、side_bar内容可能不符合该页面主体内容，比如页面为博客展示页面，side_bar内还出现相册，上传图片，圈子，讨论区等等连接，会给人一种杂乱的感觉。

还有可能对seo产生不良影响。

3、main，当side_bar隐藏时，width为100%。为主体内容提供容器。

4、tab和button：二级页面导航功能，资源页面导航功能。比如 活动 分类，tab包含 全部，热门，最新，登陆后显示我的活动。

这样设计，使得在header进入后，tab可起到位置定位，比如当前tab和其他tab可用式样来区分。

<a href="http://railser.cn/wp-content/uploads/2009/02/tabs.jpg"><img class="alignnone size-full wp-image-373" title="tabs" src="http://railser.cn/wp-content/uploads/2009/02/tabs.jpg" alt="tabs" width="276" height="50" /></a>

button强调该分类下的资源重点操作，如“创建一个新活动”，“发表一个新话题”。

这种设计的考虑是，二级分类多数为资源，button体现了吸引用户操作该资源。

ps：这是uchome中的设计，个人非常喜欢。

5、content和content_bar

content为主要内容展示空间，content_bar辅助显示动态，管理按钮，广告等内容。

content_bar可隐藏，内容不固定，根据content来决定内容。

最后，个人总结的uchome ui中的问题

1、css太过复杂，结构不清晰，没有使用layout和theme分离的设计

2、side_bar部分为全局模板，多数页面显得占地方，不过上面的重点连接也是sns站的主要功能，所以需要灵活设计

3、js设计占用了太多页面代码，html浩如烟海啊

4、mtag这个名字让我很摸不着头脑，类型复用程度低，根本无法实现资源的设计和管理。比如，Rails中的topic和photo的多态设计，使得其他资源均可以使用，但uchome中不可以。

5、uchome不是一个技术产品，它是个市场需求下的产品，不能期望太多，但是，无论是php还是Rails去设计一个sns站点，uchome的设计细节非常值得学习。

里克，2009年2与13日情人节前。情人节给老婆买个平底锅去~~]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>370</wp:post_id>
		<wp:post_date>2009-02-13 12:26:35</wp:post_date>
		<wp:post_date_gmt>2009-02-13 12:26:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sns-site-ui-conceptual-graph</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="ui"><![CDATA[ui]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[shinehao]]></wp:comment_author>
			<wp:comment_author_email>shinehao@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.254.60.35</wp:comment_author_IP>
			<wp:comment_date>2009-08-19 09:20:06</wp:comment_date>
			<wp:comment_date_gmt>2009-08-19 09:20:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这个是原型，不是概念图吧，概念图是一个滤思路的图形，是在用户调研、需求分析之后，信息架构之前的阶段。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>113.213.12.221</wp:comment_author_IP>
			<wp:comment_date>2009-09-17 14:45:39</wp:comment_date>
			<wp:comment_date_gmt>2009-09-17 06:45:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢谢指出]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>47个漂亮的ajax+css表单</title>
		<link>http://railser.cn/blog/47-excellent-ajax-css-forms</link>
		<pubDate>Sun, 15 Feb 2009 02:59:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=375</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.noupe.com/css/47-excellent-ajax-css-forms.html

正在处理Rails的表单，发现的这个，不错，分享下。

另：第一次使用wp的快速发布，挺好]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>375</wp:post_id>
		<wp:post_date>2009-02-15 02:59:49</wp:post_date>
		<wp:post_date_gmt>2009-02-15 02:59:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>47-excellent-ajax-css-forms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ajax"><![CDATA[ajax]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[47%e4%b8%aa%e6%bc%82%e4%ba%ae%e7%9a%84ajaxcss%e8%a1%a8%e5%8d%95]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c5743d81b5505b96ff346ebabcc87a84</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4c712af45666793c63257b1f254eaab0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f0cc0dbd19f76084873fe02a72311620</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jquery和prototype的代码对比</title>
		<link>http://railser.cn/blog/prototype-and-jquery-a-code-comparison</link>
		<pubDate>Fri, 27 Feb 2009 11:22:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=385</guid>
		<description></description>
		<content:encoded><![CDATA[原文：

Remy Sharp has gone through the jQuery and Prototype frameworks, which are probably the two closest to each other, and has done a side by side comparison of the frameworks by showing you how similar things work on both.

The presentation looks into the utility functions, selectors, DOM manipulation, DOM walking, events, Ajax transport, and browser detection.

里克：最近在把jquery应用的两个Rails的项目中，一直在使用jRails和Rails-widgets这两个插件，完成的非常不错，刚才查jquery的oberve的时候看到了这个文档，分享一下。

<div style="width:425px;text-align:left" id="__ss_145849"><object style="margin:0px" height="355" width="425"><param name="movie" value="http://static.slideshare.net/swf/ssplayer2.swf?doc=prototype-jquery-going-from-one-to-the-other-1193346036472971-5"/><param name="allowFullScreen" value="true"/><param name="allowScriptAccess" value="always"/><embed src="http://static.slideshare.net/swf/ssplayer2.swf?doc=prototype-jquery-going-from-one-to-the-other-1193346036472971-5" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed></object><div style="font-size:11px;font-family:tahoma,arial;height:26px;padding-top:2px;"><a href="http://www.slideshare.net/?src=embed"><img src="http://static.slideshare.net/swf/logo_embd.png" style="border:0px none;margin-bottom:-5px" alt="SlideShare"/></a> | <a href="http://www.slideshare.net/remy.sharp/prototype-jquery-going-from-one-to-the-other" title="View this slideshow on SlideShare">View</a> | <a href="http://www.slideshare.net/upload">Upload your own</a></div></div><img style="visibility:hidden;width:0px;height:0px;" border=0 width=0 height=0 src="http://counters.gigya.com/wildfire/IMP/CXNID=2000002.0NXC/bT*xJmx*PTEyMzU3MzM1OTM5NTMmcHQ9MTIzNTczMzYyMDk2OCZwPTEwMTkxJmQ9Jmc9MiZ*PSZvPWY2NzEyMzlmNmE4MDQ*ZWVhNjQwMDFhYTIxNDRiOWQz.gif" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>385</wp:post_id>
		<wp:post_date>2009-02-27 11:22:26</wp:post_date>
		<wp:post_date_gmt>2009-02-27 11:22:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prototype-and-jquery-a-code-comparison</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sns网站开发经验总结：中国省份城市插件（一）</title>
		<link>http://railser.cn/blog/sns-notes-china-province-and-city-select-plugin</link>
		<pubDate>Sun, 03 May 2009 14:31:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=395</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

经过三个多月的共同努力，sns项目终于完成上线了。感谢众位合作兄弟的持续支持和热情投入。项目走过了开发，完善，再开发，再完善的过程。下面逐步将开发中的经验和大家分享。期待和大家共同交流，提高水平。谢谢！

今天首先介绍一个优秀的插件，city_helper。

代码：<a href="http://github.com/yzhang/city_helper/tree/master" target="_blank">http://github.com/yzhang/city_helper/tree/master</a>

网站：<a href="http://www.letrails.cn/archives/city-helper-a-plugin-provide-state-and-city-select" target="_blank">http://www.letrails.cn/archives/city-helper-a-plugin-provide-state-and-city-select</a>

功能：实现国内省份，城市的联动选择。

特点：这个省份城市联动选择功能，是sns网站必备的功能之一。我们不用反复的造轮子啦，感谢作者的分享。

修正：插件中有一点点小错误，已经在作者博客留言。使用的朋友会发现的。

1、CITIES，keys中广西应为广东
2、海南的城市没有加，我添加了两个 ‘海南’ =&gt; [’海口’, ‘三亚’],

还有一个太合适的设置，一是 state_and_city_select 方法初始化时，省份为北京，城市为所有城市，其中包括北京。研究了一下方法，将city_choices改为

def city_choices
"北京"
end

并且增加 了famous_select 方法，将几个重点城市放置其中，方便选择。

当然应用要根据需求定制，这个插件非常优秀的实现了联动选择，稍加修改，即可实现客户的需求。感谢开源，感谢作者。感谢众多辛苦工作，热心奉献的程序员们。

update:2009-6-3

又修正了一下，编辑所在地时，会列出所有城市的问题。

<a href="http://railser.cn/wp-content/uploads/2009/05/city_helper.rb">city_helper</a>

右键另存一下这个文件吧。修改的部分比较下就能看到了。

update:2009-6-30

补充一下页面上的引用。改插件在创建新纪录时，完全没问题。但是当加入到“我的资料”这样的版块，需要修改时，会出现城市列表中，包含全部城市。这里并没有初始化已有选择。下面做了一些改动。

在页面调用上，如下：


<%= state_and_city_select :user_detail, :province, :city, {:state=>{:include_blank => true}, :city=>{:include_blank => true}} %>

<script type="text/javascript">

  init_city_select('<%= @user_detail.province %>','<%= @user_detail.city %>');

</script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date>2009-05-03 14:31:30</wp:post_date>
		<wp:post_date_gmt>2009-05-03 14:31:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sns-notes-china-province-and-city-select-plugin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="sns"><![CDATA[sns]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5194</wp:comment_id>
			<wp:comment_author><![CDATA[Allen]]></wp:comment_author>
			<wp:comment_author_email>gaoming@acmr.com.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>211.103.185.194</wp:comment_author_IP>
			<wp:comment_date>2011-05-05 14:04:35</wp:comment_date>
			<wp:comment_date_gmt>2011-05-05 06:04:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[您这边现在接SNS的开发吗]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1304575475.88";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1305805226.56";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5239</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>hi@liwei.me</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>113.213.17.216</wp:comment_author_IP>
			<wp:comment_date>2011-05-19 19:41:07</wp:comment_date>
			<wp:comment_date_gmt>2011-05-19 11:41:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以啊]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1305805267.17";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>sns网站设计感想</title>
		<link>http://railser.cn/blog/2009-8-10</link>
		<pubDate>Mon, 10 Aug 2009 05:09:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=414</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: medium;">下午还要继续开发目前服务的某sns网站。为了活跃一下思维，写点感想之类东西。</span>

<span style="font-size: medium;">这半年多时间里碰到好多询问开发sns网站的事情，大体可分为：网站整体制作，sns的功能外包，app功能。本人并无十分能耐，多谢大家。对于sns的印象，还是技术细节。之前列出过一个sns开发中的功能列表，打算逐步写出来。但是今天看了下实在又没什么技术吸引力了。只要花些时间，都能解决的很好了。我也是从google上找的各种解决办法先参考，然后实现。</span>

<span style="font-size: medium;">这个过程中很吸引我的，是下面的两个：ui框架和元素设计。</span>

<span style="font-size: medium;">这两个都和Rails无关。</span>

<span style="font-size: medium;">ui框架，是整个css的框架，具体定义了每一个html元素的式样，和如何<span style="color: #ff0000;">复用</span>。这在中型网站里很重要。比如经常碰到的table的thead，tbody，th，td。管理界面的table，错误信息如何展示。提示信息的展示。整站按钮的颜色，动作按钮，信息链接。导航按钮。导航菜单。</span>

<span style="font-size: medium;">元素设计，我觉得是在ui框架上更进一步的展示设计。比如，一个“确定”按钮的大小，背景色，边框颜色。头像的外部边框和头像列表的式样。用户列表的操作按钮及其图标。设计的时候随手做出来的东西在事后检查，会发现太多值得商榷，尤其是看完<a href="http://union.dangdang.com/transfer/transfer.aspx?from=P-272054&amp;backurl=http://product.dangdang.com/product.aspx?product_id=20642344" target="_blank">《瞬间之美》这本书</a>。太随意缺乏规划的设计，无法称之为作品。这在后面的开发中会逐渐修正，做到有理有据。（客户也是需要说服的，一言堂的开发是很可怕的，尤其是客户无法做到事无巨细，当出现不明确和不确定的时候，选择起来很痛苦。有时候揣摩客户的心理占用的时间比设计一个功能还长。）。</span>

<span style="font-size: medium;">还有很多东西需要思考，sns的开发还在继续。。</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date>2009-08-10 05:09:03</wp:post_date>
		<wp:post_date_gmt>2009-08-10 05:09:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2009-8-10</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<category domain="post_tag" nicename="sbs"><![CDATA[sbs]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在Rails中使用批量插入和直接运行sql语句</title>
		<link>http://railser.cn/blog/batch-create-and-run-sql-directly-in-rails</link>
		<pubDate>Sat, 22 Aug 2009 01:43:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=418</guid>
		<description></description>
		<content:encoded><![CDATA[向所有加星用户发送消息，批量插入的sql

第一步：读取用户id，仅需要id
uids = User.find(:all, :select=&gt;"users.id")

第二步：生成语句，格式是

INSERT INTO `messages` (`updated_at`, `title`, `body`, `user_id`, `created_at`)
VALUES('2009-08-20 23:03:04', '来自系统管理员的消息', 'test', 1, '2009-08-20 23:03:04')

values = []
users.each do |user|
values &lt;&lt; "(NOW(), '来自系统管理员的消息', '#{content}', #{user.user_id}, NOW())"
end

第三步：执行

ActiveRecord::Base.connection.execute("INSERT INTO `messages` (`updated_at`, `title`, `body`, `user_id`, `created_at`) VALUES #{values.join(',')}")

不过这种写法还是欠妥，如何改进期待大家指点。谢谢

最新作品：<a href="http://www.shiguangzhaoxiang.com" target="_blank">长春时光转机摄影，专业拍摄大型团体合影，集体合影，专业转机旋转360度拍摄</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date>2009-08-22 01:43:35</wp:post_date>
		<wp:post_date_gmt>2009-08-22 01:43:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>batch-create-and-run-sql-directly-in-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[sql]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3888</wp:comment_id>
			<wp:comment_author><![CDATA[bitiliu]]></wp:comment_author>
			<wp:comment_author_email>liu@g.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.65.128.54</wp:comment_author_IP>
			<wp:comment_date>2010-10-19 15:27:21</wp:comment_date>
			<wp:comment_date_gmt>2010-10-19 07:27:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不用这么麻烦:
# Create an Array of new objects
  User.create([{ :first_name =&gt; 'Jamie' }, { :first_name =&gt; 'Jeremy' }])]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>新书推荐：《正在爆发的互联网革命》</title>
		<link>http://railser.cn/blog/sns-is-changing-internet</link>
		<pubDate>Wed, 23 Sep 2009 14:44:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=419</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://union.dangdang.com/transfer/transfer.aspx?from=P-272054&amp;backurl=http://product.dangdang.com/product.aspx?product_id=20680931"><img class="alignnone" title="正在爆发的互联网革命" src="http://img31.dangdang.com/29/3/20680931-1_b.jpg" alt="" width="200" height="200" /></a>

<a href="http://union.dangdang.com/transfer/transfer.aspx?from=P-272054&amp;backurl=http://product.dangdang.com/product.aspx?product_id=20680931" target="_blank">到当当购买这本书</a>

里克：总算看到一本关于互联网和sns的书，保存了我们这个时代的记忆，建议入选中学教科书，告诉大家一个真实的互联网。

30余位互联网大腕、100余家网站、报纸、杂志、电台、电视台鼎力推荐
全球网民正亲历SNS带来的巨大变革，只有洞悉先机，才能抓住革命的机遇，30余位互联网大腕、100余家网站和媒体一致推荐。
SNS火起来是有道理的：互联网是技术网络，SNS是社会网络，信息革命从技术网络发展到社会网络是必然的趋势。SNS进化的方向是为人人服务，让人人 开心。以人为本，是SNS的出发点和归宿。该书展开了一幅SNS时代的全景图，帮助SNS加速走向每个人，拨动每个人心中真实快乐的那根弦。
——姜奇平 中国社会科学院信息化研究中心秘书长/《互联网周刊》名誉主编
读完本书收获颇多，一个真正意义上的网民绝不能只会上网聊天、看新闻、用搜索，他还应该熟知SNS社会化网络，这样才能把握第三次次互联网革命带来的机遇。
——曾明发 中国网民文化节组委会执行主任/中国互联网大会组委会副秘书长
本书写得恰到好处。首先是时间恰到好处，中国互联网正需要这样一本书来系统阐释SNS的昨天、今天、明天，以及它的重要作用；其次是内容恰到好处，不仅 深刻而全面地分析了SNS对全球网民的重大意义，而且还探讨了SNS对整个互联网经济形态的影响。本书既包含大量丰富生动的故事，又融入了作者颇有见地的 思想。非常好，强烈推荐！
——庞升东 51.com CEO
SNS这个已存在许久，但直至2008年才 大规模爆发的互联网应用，是网民将生活映射到互联网的趋势的体现。一大批细分的、垂直的、富有特色和创新精神的SNS网站，正在给我们的生活带来前所未有 的精彩体验。中国的网民已达3.5亿之多，如雨后春笋般涌现的UCenter Home站点能满足他们的个性化需求，它们将对整个互联网产业的发展和繁荣写下浓重的、历史性的一笔。 本书能让所有互联网从业人士从中受益，郑重推荐！
——戴志康 康盛创想CEO
互联网是终端的网络，SNS是网民的网络，互联网革命改变着人们的生活，火爆的SNS丰富了人们的生活。本书既演绎了国内外SNS的发展历程，也从相关 行业和领域多方位地诠释了由此带来的重大变革，堪称网络版“SNS那点事儿”， 是本难得的SNS通俗化读本。网民是有国籍的，但是SNS所带来的机遇是没有国界的，希望读者能从书中受益，敢做SNS时代的潮人。
——郑志昊 QQ空间产品中心总经理
SNS是互联网从“机器与机器”、“人与机器”向“人与人”演进的关键标志，是“人的网络”的开端，也是互联网发展史上的第三次重大变革。这场“正在爆发的互联网革命”将逐渐改变我们的工作、生活、学习和娱乐的方式，也必将使电子商务发生巨变。
——梁春晓 阿里巴巴集团副总裁/研究中心高级研究员
本书讲述了大量真实、生动的案例和故事，深刻揭示了SNS对我们的工作、生活、学习、娱乐以及对整个互联网的影响，像我这样的所谓专业的互联网从业人士看完后也不禁赞叹不已，强烈推荐！
——邹岭 若邻网创始人兼CEO
这是一本值得推荐给爱情公寓2000万白领用户阅读的好书
——张家铭 爱情公寓创始人兼CEO
互联网出现的那一天，我们都不知道网络会对我们的生活产生什么样的影响，但今天我们已经看到，所谓真实的生活和虚拟的网络其实已经没有严格意义上的分别。SNS的兴起和发展，会将这场互联网的革命进行得更加彻底。
——横戈 博客大巴CEO
SNS的本质就是人，关系中的人，商业中的人，社会中的人，以及所有这一切的数字化呈现。
——keso 5Gme.com创始人/著名IT博客作家
心理的亲近正在迅速取代地理的接近而成为营造社区的关键驱动力。SNS掀起的新一轮互联网革命是人类心灵对地理的超越。
——胡泳 资深互联网专家/北京大学副教授/《数字化生存》译者
本书让我们对SNS有了更全面的认识和更深刻的体会。我们更应该清晰地认识到：莫做观望者，要做实践家。正如书名点睛，SNS，对互联网来说，是一场巨 变，是一个挑战，更是一种机遇。古人云“乱世出英雄”，英雄只有在乱世中才能不受约束，充分展示他的雄才谋略，勇于创新。现在，是SNS英雄出世的时代 了。我们相信，诸如UCenter Home这样的SNS专业建站产品，如同锋利的宝剑，定会助英雄一臂之力！
——李国德 康盛UCH创始人
SNS浪潮的兴起，为中国的网络社区注入了新的活力。分享和互动成为关键，尤其是Social Game让用户之间的交流变得更加有效和轻松，但SNS绝不只是一个娱乐的平台，作为工具的属性，它还有更多的价值有待发现，而这本书正在帮我们发现，足 以启人，因此我郑重推荐。
——韩笑 奇虎网络社区研究机构总经理
当我们惊叹互联网让我们足不出户就能无所不能的时候，社会化网络已经在悄然深入到我们的人际关系中。现在，社会化网络已经与你和我息息相关。本书非常全面地介绍和展望了社会化网络的过去、现在和未来，打开精彩的篇章，你将获益匪浅。
——曾登 CSDN副总经理
人类从未面临如此纷繁绚丽的世界，在不到20年的时间里，互联网给了我们一次又一次惊喜和震撼，它孕育了很多伟大的公司。接下来它又会给我们带来什么惊 喜呢？当SNS和开放平台被广泛接受和认可后，是不是又到了下一场革命爆发的时候？本书对SNS时代的互联网做了全新的诠释，作者从资深从业者的角度为我 们阐述和评点了昨天、今天、明天的互联网，非常值得品味。
——卢亮 淘宝网资深总监
一口气读完本书，感慨颇深。作为一名互联网从业人士，更深刻地意识到了SNS给我们的生活带来的巨大变化，小到身边好友的情感互动、种菜偷菜、停车贴条，大到奥巴马的当选，SNS都发挥着其巨大的作用。QQ空间也希望能够把握住革命的机遇，伴随中国互联网一起成长。
——梁柱 腾讯创新中心资深总监
对于SNS的认识和研究，最初是因为工作的需要，我从未看到有人像西门、马良和清华他们一样把SNS分析得如此透彻和完整。从过去和现在，再到未来，从 人与人的关系到与传统互联网的结合，再到SNS与未来科技的融合，一切都是如此的详尽。透过这本书，我们将看到互联网传奇史中更加充满魔力的一页。
——Dalson 好耶广告全国区执行创意总监
偷菜、抢车位、养鱼、逗宠物等应用为何能以病毒般的速度扩散至整个白领群体而成为时下最热门的网络游戏？这一切都是因为它的载体——SNS，它的意义比游戏本身更加深远。这是一本既专业又有趣的书，我们可以从中了解到SNS的本质以及它是如何改变大众网络生活的。
——蒲忠杰 雅虎口碑SNS产品总监
作为一个互联网从业者，从门户时代到Web 2.0时代，再到如今的SNS时代，一路走来，我深刻深地领悟到人在各个阶段所扮演的不同角色。SNS的本质是真实的人与人之间的联系，但是在中国它却成 了娱乐的代名词。无论是互联网从业者还是普通网民，都能通过本书重新认识SNS——它能在我们的生活和工作中发挥越来越重要的作用。当SNS与摄影结合， 当SNS与美食结合，这不正是众多网友聚集在POCO的原因吗？POCO上不再只有简单的网页游戏，它更多的是把我们的生活、兴趣、职业甚至收入结合在了 一起。在不久的将来，SNS必定会成为每个网民生活中的一部分，通过阅读本书，我们会发现，每个人的网络生活甚至是现实生活都会因SNS而改变。
——姚鸿 POCO.CN CEO
世界在不断的创变中验证很多东西，比如SNS的出现和迅猛发展就验证了这世上还有“一网打尽”这回事儿！中国的成语真的很奇妙，相信先人创作“一网打 尽”这一词儿的时候，压根就没预见过什么数字时代，更别提将改变整个互联网的SNS，本书能让我们将一言难尽的SNS看个究竟，探个明白！强烈推荐！
——陶为民 安瑞索思ECD
SNS为何会风靡全球互联网？为何它具有改变整个世界的能量？国内外知名SNS网站的发展历程和成功秘诀是什么？SNS在互联网中的地位为何如此重要？SNS对于全球网民的重大意义何在……这一切都可以在本书中找到答案。
——刘勇 国内第一波SNS网站亿友网创始人/SNS APP服务商热酷创始人
不了解SNS，就没法理解这个时代的互联网，而这本书里有你能想到的和想不到的关于SNS的一切。
——姬十三 科学作家/科学松鼠会创始人
SNS的流行绝非偶然。当论坛、博客让我们沉浸于结交更多素昧平生的新朋友的新奇时，SNS让我们重温了与多时未见的老友、老同学天天见面时的喜悦。 SNS的流行代表了互联网进化的趋势和方向。网名背后的虚假与不安，最终将回归实名下的真实与信赖。本书对这种流行与趋势进行了总结、分析和展望，融入了 作者的经验、智慧、以及作为资深网络从业者的敏锐与远见。我接触过很多互联网从业人士，也阅读了很多相关的著作，强烈推荐这本书。
——陆贤清 上汽乘用车媒介与互动营销高级经理
SNS的出现绝对是互联网发展史上的一次伟大变革，它不仅影响着我们的工作、生活和娱乐，而且更重要的是，它还在逐渐改变传统互联网的经济形态。本书对 SNS进行了全方位的阐释，无论你是普通网民还是资深的互联网从业者，都应该认真阅读本书，它必定能让你有所启发和收获。
——图王 中国最有声望的个人站长之一
“今天，你开心了吗？”似乎成了很多人见面时的问候语。虽然开心网等SNS社区现在异常火热，但SNS巨头Facebook在经过刚创立时的新鲜感后， 已经开始遭遇网民的口诛笔伐。国内大量“克隆”Facebook的本土化SNS网站如何度过信任危机？在一场更加激烈的SNS混战中能否找到自己的未来？ 本书的出版适逢其时，我们能从中找到答案。
——李琦 《IT时代周刊》/编委北京新闻中心主任
似乎， 我们还未完全意识到SNS即将风靡整个网络时，已顺势置身这股浪潮中。难得的，乐此不疲的“随波逐流”。SNS，人人也好，开心也罢，习惯了在这个社会中 疾步奔走的人们，是需要这样一个地方，养花种草颐养性情，争车位偷果实展颜一笑，会偶尔在这里遇到公事上打磨熟悉的面孔，在SNS这个用“欢腾”二字不足 为过的环境里，你、我或他，没有公事公办的正襟危坐，爱玲那句话怎讲？原来你也在这里！
这是一本极有趣的书，有悟空也有搁浅的鲸，旁征博引，深入浅出。在SNS上逗猫、遛狗、偷灵芝之余，我们不妨把此书也当作SNS的衍生服务，细品国内外知名SNS网站的前世今生，岂非美事一桩，且必有所得。
——张连会 《计世资讯》营销总监
古希腊戴尔菲神庙的入口有句名言：了解你自己。一个人需要广场也需要客厅，需要严肃也需要娱乐，需要虚拟也需要真实，需要归属也需要自由。SNS第一次 把个体作为社区聚合的中心，是多种诉求的平衡载体，它让生活更梦幻，让自我更真实。如果你想了解未来的社会和人生，就到SNS的入口来看看吧，带着这本 书。
——张静 《互联网周刊》专题组主任
当人们把大量的时间分配给SNS网站后，它就有了不可估量的营销价值。本书的价值在于，它将告诉你SNS网络如何改变了人们的生活方式和消费习惯，以及“如何让百万消费者主动成为你的促销员”的奥秘。
——王文正 《销售与市场》
对于我这样一个很少接触SNS社区的读者，本书激发了我强烈的兴趣，让我看到了SNS所带来的学习、工作、娱乐变革。身处互联网大潮，每一个人都应该了解SNS来应对这次互联网革命。
——李峥嵘 《北京晚报》
透过互联网看到整个世界，透过《正在爆发的互联网革命》看清互联网。
——马光 《沈阳晚报》

第1章　社会化网络理论变奏曲
第1节　社会化网络——未来的新入口
社会化网络圆了奥巴马的总统梦
什么是社会化网络
第2节　六度之内，玩转世界
社会化网络的前世今生
六度分隔理论与150定律
第3节　以人为本——社会化网络建立真实的社交文化
第4节　全球互联网为社会化网络而疯狂
第2章　社会化网络的三波浪潮
第1节　第一波浪潮：鼻祖Friendster和国内的追随者们
第2节　第二波浪潮：MySpace旋风与中国SNS风暴
第3节　第三波浪潮：Facebook神话与校内网的传奇
第4节　第三浪后续:开心网的盛行与国内互联网巨头们的窥探
第3章　社会化网络狂飙实录
第1节　Facebook猛进史——六年创奇迹
你方唱罢我登场——MySpace的失势和Facebook的得意
Facebook的名字的由来
同学录背后的社交蓝海
Facebook的创业历程
Facebook缘何成为资本的宠儿
Facebook的收购风波
第2节　开心网的崛起——创造中国互联网发展史话
揭秘开心网的发展历程
SocialGame——开心网不走寻常路
开心网的未来在哪里
“真假”开心网
第3节　Twitter——简单、开放改变世界
失败鲸
140个字符创造的奇迹
Twitter的发家史
Twitter成功的奥秘
Twitter成功背后的社会学意义、营销学意义和开放平台的意义
第4章　社会化网络改变我们的生活
第1节　社会化网络改变我们的生活
免费环游世界
“大鲨鱼”奥尼尔与Twitter的故事
寻人记
“助产士”的故事
第2节　要Happy，要SocialGame
第3节　SNS式美丽新世界
第4节　SNS达人的小众生活圈
第5章　社会化网络让求职变得更容易
第1节　社会化网络时代的求职新途径
求职新利器
虚拟世界里的真实招聘
社会化网络颠覆传统的招聘方式
第2节　弱链接、人脉与社会资本
“微弱关系”
网络社交人脉演进史
第3节　找工作，你准备好了吗
让工作主动发现你的优势
学会管理你的社交网络
打造职场的双赢通道
第6章　社会化网络营销——网络营销新时代
第1节　社会化媒体——网络营销新力量
什么是社会化媒体
传统网络营销的变革
社会化网络营销时代来临
第2节　社会化网络营销
娱乐的才是互动的
娱乐与社会化网络营销的完美结合
不能只有娱乐，而没有营销
第3节　创意驱动了你的眼球，也驱动了你的态度
第4节　超越社会化网络
第7章　蚂蚁有了扩音器——社会化网络与个人品牌建设
第1节　网络时代——草根也能建立自己的个人品牌
第2节　博客——打造个人品牌的利器
第3节　即时聊天——个人品牌如影随形
第4节　Twitter——创造个人品牌的新力量
第5节　社交网站——发现并建立你的个人品牌
第6节　播客/视频——每个人都可以当15分钟名人
第7节　张小盒，用社会化网络打造的品牌149
第8章　社会化网络代言人——奥巴马
第1节　没有社会化网络，就没有奥巴马
第2节　奥巴马的社会化网络营销启示录
网络视频传播——视频新媒体力量的运用
关键词购买——搜索引擎广告精准营销
游戏内置广告——新颖的互联网广告思路
网络口碑营销的最高境界——激发邮件病毒营销的传染力
博客营销——让每个人都有自己的媒体
第9章　社会化网络与长尾的开放平台
第1节　什么是开放平台
第2节　开放与繁荣
Google——将开放进行到底
Twitter——开放成就的社会化网络巨头
亚马逊——在开放中从容应对全球经济危机
淘宝——开放，与合作伙伴共建商业生态系统
腾讯——何时能走向开放
Facebook——开放平台，网聚开发者的力量
第3节　平台决定舞台
第4节　开放平台的长尾现象
第5节　开放平台标准之争
第10章　数字化生存与社会化网络的未来
第1节　数字化生存
第2节　拥抱3G，拥抱移动互联网的未来
第3节　社会化网络的神奇新变数
第4节　社会化网络的未来
后记]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2009-09-23 22:44:15</wp:post_date>
		<wp:post_date_gmt>2009-09-23 14:44:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sns-is-changing-internet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>生命之光网络工作室网站上线了！</title>
		<link>http://railser.cn/blog/welcome-to-zqcjr-org</link>
		<pubDate>Sat, 03 Oct 2009 13:03:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[最近的半个多月，一直在忙碌着工作室成立的事情。这也是开发任务间歇期，最重要完成的一项工作。

这个工作室，是和心语协会的于海波会长，共同主张成立的。几年前我们就在想办一个公司，提供网络服务，说白了就是给别人做网站。因为发现很多残疾人都有这个能力或者热情。大家都期望在互联网上寻求自己的价值。

可是，现实和理想是有很大差距的。

近期协会的电子商务培训班结束了第5期的课程，（明年还有5期的课程）。并且留下了几个打算从事网络工作的学员，于是，我们的想法再次可实现了。这次，是贴合实际情况的运作了。留下的几个人都有一定的基础，于是开始分别重点培训，前台工美1人，后台程序2人，业务2人。后来又遇到两个志同道合的朋友，加入进来，处理教育网的事务。这样7人的小团队搭建起来了。
<p style="text-align: center;"><img class="aligncenter size-full wp-image-423" title="viewfile" src="http://railser.cn/wp-content/uploads/viewfile.gif" alt="viewfile" width="190" height="40" /></p>
<p style="text-align: center;"><a href="http://www.zqcjr.org" target="_blank">www.zqcjr.org</a></p>

工作室业务内容：1、企业站开发，维护，2、威客任务，3、教育网视频教学平台，4、助残商城，5、生命之光系列网站运营

其中企业站和威客任务，是主要的盈利手段。经过两周多的培训，成员已经基本掌握了企业站的处理技巧，目前还是欠缺经验。

这就是本人两个多星期一直在忙碌的事情，目前看到事情在正常的进展，很高兴，看到我们的工作室网站上线了，在第一时间看到成品的时候，自己也小激动下。

前天和海波姐讨论工作室收支，发现这个小团队运营一年下来，压力也是不小的。但是我们有信心！

想说的话很多，发现今天是中秋，十一和中秋，跟我学习的学员都没有回家，还是在忙碌一个企业站（算是第一个企业站）。很感动大家的努力，相信我们会通过自己的努力，赚的一个未来的。

写在后面：

目前有三个学员，我要求他们学习外语，两个跟我学编程的在学习英语，前台美工的女孩在学习韩语。因为都是零基础，所以完全是从头开始，定位也摆脱了英语的束缚。如果有自愿帮助他们学习的朋友，欢迎和我联系：<a href="mailto:liwei@lol.org.cn">liwei@lol.org.cn</a>。学习方式：在线语音，时间可以安排，内容为辅导语言学习，帮助他们快速的掌握基本知识，能达到熟悉英语书写，识别语法。

<img class="aligncenter size-full wp-image-426" title="DSC_0015" src="http://railser.cn/wp-content/uploads/DSC_0015.jpg" alt="DSC_0015" width="400" height="266" />
<p style="text-align: center;">给成员讲东西，有点摆拍的意思，因为多数是单个讲的，很少对所有人讲。</p>

<img class="aligncenter size-full wp-image-428" title="DSC_0063" src="http://railser.cn/wp-content/uploads/DSC_0063.jpg" alt="DSC_0063" width="400" height="266" />
<p style="text-align: center;">中间讲话的就是心语协会于海波会长（还是叫海波姐吧，呵呵），她的资料可以查<a href="http://www.baidu.com/s?tn=monline_dg&amp;rn=50&amp;bs=%B3%A4%B4%BA+%D3%DA%BA%A3%B2%A8&amp;f=8&amp;wd=%D0%C4%D3%EF%D0%AD%BB%E1+%D3%DA%BA%A3%B2%A8" target="_blank">百度：心语协会 于海波</a>。在她身上能感受到，公益事业不是简单说说就可以的，我只能帮助几个人，她能帮助一大群需要帮助的人。在我们这，做的永远要比说的多很多。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2009-10-03 21:03:05</wp:post_date>
		<wp:post_date_gmt>2009-10-03 13:03:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>welcome-to-zqcjr-org</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>200</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.88.57.244</wp:comment_author_IP>
			<wp:comment_date>2009-10-10 15:23:25</wp:comment_date>
			<wp:comment_date_gmt>2009-10-10 07:23:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[已经安排了一个外教，辅导学员学习英语了。感谢大家的关注]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我们最近的很好，也很忙</title>
		<link>http://railser.cn/blog/i-am-fine-and-busy</link>
		<pubDate>Tue, 08 Dec 2009 12:54:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=432</guid>
		<description></description>
		<content:encoded><![CDATA[doubanclaim791386cc37af2534

最近很忙，在为工作室的未来设计，也在开发几个站点，有大有小。当然一直服务的sns社区开发也没停止。感谢来询问我进度的朋友，我的确牺牲了很多自己赚钱的时间，为这个工作室忙碌。2010年，我将和我的团队，带着我们的项目寻找合作，实现我们的公益创业目标。希望大家支持。
<pre id="line1">长春鑫泰佳宇广告传媒有限公司<span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; line-height: 19px; white-space: normal; font-size: 13px;">：<a href="http://www.10086online.net" target="_blank">www.10086online.net</a></span></pre>
<pre id="line1"><span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: small;"><span style="line-height: 19px; white-space: normal;">上一张团队合影吧，比较全了，但是还有几个成员没在里面。</span></span></pre>
<pre id="line1"><span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;"><span style="line-height: 19px; white-space: normal; font-size: small;"><img class="aligncenter size-full wp-image-433" title="参加联想青年公益创业计划比赛现场" src="http://railser.cn/wp-content/uploads/DSC_0332.jpg" alt="参加联想青年公益创业计划比赛现场" width="400" height="266" />
</span></span></pre>
第一排最左面是海波姐，我们给她做了专门介绍的网页：<a href="http://haibo.lol.org.cn" target="_blank">http://haibo.lol.org.cn</a>

下面的是我御用很多年的美工，雪儿，她处理图片和flash的技术很好，美工的感觉非常到位

<img class="aligncenter size-full wp-image-434" title="美工雪儿" src="http://railser.cn/wp-content/uploads/IMG0131A.jpg" alt="美工雪儿" width="400" height="300" />

但是她是一位重度的脑瘫患者，在这里写出来，是想告诉大家，在我们身边有太多惊奇，我们需要了解他们。她语言不清，行动有些困难，但是她的设计很好，很好学。她也是工作室的重要成员。目前负责教育网的工作。在我们这里，人人平等，只要你有能力，就能找到位置。

昨天买的书到了，用了几个小时把李开复自传的精彩部分读了一遍，启发很多，几乎每隔几页就能找到点感慨。剩下两本讲公益创业的，明年将开始这个全新的富有挑战的事业。当然，我还是做技术为主。

本来不想多写的，没想到写了这么多，09年最后一个月了，该总结点什么呢？？？下一篇再说吧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date>2009-12-08 20:54:12</wp:post_date>
		<wp:post_date_gmt>2009-12-08 12:54:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-am-fine-and-busy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>877</wp:comment_id>
			<wp:comment_author><![CDATA[devon]]></wp:comment_author>
			<wp:comment_author_email>devon@copeng.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.193.252.227</wp:comment_author_IP>
			<wp:comment_date>2009-12-08 21:11:53</wp:comment_date>
			<wp:comment_date_gmt>2009-12-08 13:11:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[加油，祝你们在2010年做得更好]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1012</wp:comment_id>
			<wp:comment_author><![CDATA[shuguo]]></wp:comment_author>
			<wp:comment_author_email>lishugo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.shuguo.org</wp:comment_author_url>
			<wp:comment_author_IP>213.100.27.234</wp:comment_author_IP>
			<wp:comment_date>2009-12-18 22:24:49</wp:comment_date>
			<wp:comment_date_gmt>2009-12-18 14:24:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great job.
通过搜索引擎过来的，看了你的介绍。太佩服了。
我以前也在长春上学，希望你的工作室越来越好！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1041</wp:comment_id>
			<wp:comment_author><![CDATA[zeroath]]></wp:comment_author>
			<wp:comment_author_email>zshuaibin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.96.244.119</wp:comment_author_IP>
			<wp:comment_date>2009-12-23 17:22:34</wp:comment_date>
			<wp:comment_date_gmt>2009-12-23 09:22:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看你的博客学到了不少知识。加油～～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1555</wp:comment_id>
			<wp:comment_author><![CDATA[可乐加糖]]></wp:comment_author>
			<wp:comment_author_email>black.angel.liu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.qcoke.com</wp:comment_author_url>
			<wp:comment_author_IP>118.249.152.59</wp:comment_author_IP>
			<wp:comment_date>2010-01-28 15:55:56</wp:comment_date>
			<wp:comment_date_gmt>2010-01-28 07:55:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看样子最近会比较忙..呵呵,小站点是有点烦人.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1856</wp:comment_id>
			<wp:comment_author><![CDATA[董一萌]]></wp:comment_author>
			<wp:comment_author_email>dongyimeng@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.yunchuanbo.com</wp:comment_author_url>
			<wp:comment_author_IP>123.122.91.233</wp:comment_author_IP>
			<wp:comment_date>2010-03-03 13:27:49</wp:comment_date>
			<wp:comment_date_gmt>2010-03-03 05:27:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[顶啊，兄弟，加油！！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>我开始mac啦！！</title>
		<link>http://railser.cn/blog/i-am-mac-now</link>
		<pubDate>Fri, 30 Apr 2010 07:31:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=440</guid>
		<description></description>
		<content:encoded><![CDATA[上周在淘宝的苹果福利社订购了一台mac mini mc238，发货后第二天就到了。兴奋啊。我终于开始mac了！！

<img class="aligncenter size-medium wp-image-443" title="T1HNBsXlxlXXXBc6_b_094607.jpg_310x310" src="http://railser.cn/wp-content/uploads/T1HNBsXlxlXXXBc6_b_094607.jpg_310x310-300x300.jpg" alt="T1HNBsXlxlXXXBc6_b_094607.jpg_310x310" width="300" height="300" />

下面分享一下这次的经历，当作日记，也是分享给大家一些经验吧。

这是宝贝的地址：<a href="http://item.taobao.com/auction/item_detail-0db2-f2a4a529ab80dd5712e8dce1d69e48df.htm">http://item.taobao.com/auction/item_detail-0db2-f2a4a529ab80dd5712e8dce1d69e48df.htm</a>

非广告，纯属友情连接。

东西拿到了，第一件事是连接上我的显示器。这里介绍两个事情：一是mac mini和自己的显示器连接，用的是dvi线，二是这个线需要自己买，价格在20元左右。线的样子是

<img class="aligncenter size-medium wp-image-442" title="T2hHJcXXRXXXXXXXXX_!!26761329.jpg_620x10000" src="http://railser.cn/wp-content/uploads/T2hHJcXXRXXXXXXXXX_26761329.jpg_620x10000-300x300.jpg" alt="T2hHJcXXRXXXXXXXXX_!!26761329.jpg_620x10000" width="300" height="300" />

注意的是，我的dvi接头是24＋1针脚的，一定要和显示器对应，还有另一种24＋5的，用途不太一样，具体详细介绍看这里：<a href="http://baike.baidu.com/view/1297324.htm?fr=ala0_1_1">http://baike.baidu.com/view/1297324.htm?fr=ala0_1_1</a>

千万不要因为看错了买来的线不可用。（我就是，别人代给我的，买的时候就没区分是＋1还是＋5的针脚，结果白跑一趟。）

dvi线如果网购的话可以看这里：<a href="http://item.taobao.com/item.htm?id=3812883078">http://item.taobao.com/item.htm?id=3812883078</a>

好了，到这里，连接好，就开始mac的旅程了。

这里想说的是，mac mini很适合上手，加上itouch，可算作是iphone开发的最节省开销了。（下个月买itouch，然后呢，本博就要以mac开发为主啦，会贴一些经验的总结，分享给需要的朋友。）

来，上张图吧，很兴奋，不过遗憾的是不能语音通话，因为没有麦克风，单买的话太贵，usb话筒效果说未必好。

<img class="aligncenter size-medium wp-image-445" title="screen" src="http://railser.cn/wp-content/uploads/screen-300x169.jpg" alt="screen" width="300" height="169" />

因为之前用过ubuntu，所以这次上手不算太陌生，不过好些东西还是不适应，比如快捷键。mac的三个键和win的不一样，需要在系统偏好里调整一下，当然不改也可，那就纯正的mac吧。

下一篇分享下折腾了两天的环境配制。

广告下，工作室目前定位在科技公司上，业务在网站制作和美工设计。我也算是带出来两个学员，一个做程序，一个做网络推广。后面会整理出来，看来Railser.cn该增加人员了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>440</wp:post_id>
		<wp:post_date>2010-04-30 15:31:00</wp:post_date>
		<wp:post_date_gmt>2010-04-30 07:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-am-mac-now</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2422</wp:comment_id>
			<wp:comment_author><![CDATA[xuanyan]]></wp:comment_author>
			<wp:comment_author_email>xuanyan1983@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.205.46.34</wp:comment_author_IP>
			<wp:comment_date>2010-05-02 11:33:39</wp:comment_date>
			<wp:comment_date_gmt>2010-05-02 03:33:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mini 是内建mic的吧~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2423</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>113.213.20.250</wp:comment_author_IP>
			<wp:comment_date>2010-05-02 13:14:08</wp:comment_date>
			<wp:comment_date_gmt>2010-05-02 05:14:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[没有。。mac本本是内置的。mini没有]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>mac mini到底有多mini？？</title>
		<link>http://railser.cn/blog/mac-mini%e5%88%b0%e5%ba%95%e6%9c%89%e5%a4%9amini%ef%bc%9f%ef%bc%9f</link>
		<pubDate>Fri, 30 Apr 2010 11:09:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[QQREADER02A20AA041D2E4B5

补张图，顺便认领博客。

<img class="aligncenter size-medium wp-image-448" title="DSC03408" src="http://railser.cn/wp-content/uploads/DSC03408-300x225.jpg" alt="DSC03408" width="300" height="225" />

<img class="aligncenter size-medium wp-image-449" title="DSC03405" src="http://railser.cn/wp-content/uploads/DSC03405-300x225.jpg" alt="DSC03405" width="300" height="225" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2010-04-30 19:09:43</wp:post_date>
		<wp:post_date_gmt>2010-04-30 11:09:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac-mini%e5%88%b0%e5%ba%95%e6%9c%89%e5%a4%9amini%ef%bc%9f%ef%bc%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[apple mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23376</wp:comment_id>
			<wp:comment_author><![CDATA[升级09款mac mini笔记 at 里克的自习室 - Rails学习与开发笔记]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn/blog/update-09-mac-mini</wp:comment_author_url>
			<wp:comment_author_IP>180.235.134.190</wp:comment_author_IP>
			<wp:comment_date>2012-10-27 12:27:18</wp:comment_date>
			<wp:comment_date_gmt>2012-10-27 04:27:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[gem] 这还是mini到手时候的得瑟贴。 [gem]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1352694060.4517";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>mac使用普通键盘的几个快捷键</title>
		<link>http://railser.cn/blog/mac-with-normal-keyboard</link>
		<pubDate>Sat, 01 May 2010 08:27:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=451</guid>
		<description></description>
		<content:encoded><![CDATA[mac的键盘都是专用的，上面有三个功能键，比windows下常见的ctrl和alt，多处一个中国结的键，呵呵，暂且这么叫吧。就是下图上的几个：

<img class="aligncenter size-full wp-image-453" title="mac short cut key" src="http://railser.cn/wp-content/uploads/mac-short-cut-key.png" alt="mac short cut key" width="306" height="134" />

他们对应的，Option就是alt键，Command就是win键，那个经常在网吧被人扣掉的很讨厌的按键。

当然，在我第一次进入mac时还是头晕，没搞明白键盘的多数按键，尤其是在键盘检测之前。所以，还是先看看偏好设置里的每一个项目吧。

键盘的按键在检测完之后，会出现下面的几个应用了。

win＋alt：切换输入法

win＋tab：切换任务窗口

ctrl＋tab：浏览器内标签切换

win+shift+3：屏幕截图，自动保存到桌面

win+shift+4：指定区域截图，跟qq截图一样。很爽，再也不用依赖qq了。

其实我前几天把ctrl和win键的功能给对换了，比较适合正常的习惯，不过刚才换了回来，希望能更接近真实的mac专用键盘的感觉吧。

<img class="aligncenter size-medium wp-image-454" title="mac keyboard" src="http://railser.cn/wp-content/uploads/mac-keyboard-300x144.png" alt="mac keyboard" width="300" height="144" />

另外，mac上的文件重命名很有意思，竟然是选中后，按enter，也就是会车键。这跟windows完全不一样。

好了。写道这里，继续研究下编程的事情。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2010-05-01 16:27:01</wp:post_date>
		<wp:post_date_gmt>2010-05-01 08:27:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac-with-normal-keyboard</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[apple mac]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2417</wp:comment_id>
			<wp:comment_author><![CDATA[colder]]></wp:comment_author>
			<wp:comment_author_email>cncolder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://vitarn.com</wp:comment_author_url>
			<wp:comment_author_IP>114.222.116.36</wp:comment_author_IP>
			<wp:comment_date>2010-05-01 18:54:39</wp:comment_date>
			<wp:comment_date_gmt>2010-05-01 10:54:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[command+w   关闭标签
command+q   退出程序
使用XCode开发程序的时候好多菜单项连同快捷键一起规定好了的, 所以mac上的软件快捷键比较统一.

control+space   Spotlight
这个可比win7的搜索强大得多呢. 基本上我打开应用程序都是通过它.

control+command+d   屏幕取词翻译
不必事先打开字典, 不过这要求你得先往系统内置的字典里多导入几个词典才行.

好玩的快捷键还有很多.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2439</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>222.169.241.211</wp:comment_author_IP>
			<wp:comment_date>2010-05-04 19:33:35</wp:comment_date>
			<wp:comment_date_gmt>2010-05-04 11:33:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://support.apple.com/kb/HT1343?viewlocale=zh_CN&locale=zh_CN

很全了。。。呼。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2453</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.4.146</wp:comment_author_IP>
			<wp:comment_date>2010-05-06 14:27:49</wp:comment_date>
			<wp:comment_date_gmt>2010-05-06 06:27:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mac chrome上的快捷键：http://www.google.com/support/chrome/bin/answer.py?hl=zh-CN&answer=95743&ctx=tip]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>在mac上配制Rails开发环境</title>
		<link>http://railser.cn/blog/rails-on-mac</link>
		<pubDate>Sun, 02 May 2010 06:24:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=457</guid>
		<description></description>
		<content:encoded><![CDATA[拿到mac后最重要的就是先把Rails开发环境装好。apple介绍上写的是，mac mini装的是server版本，这样开发环境应该是已经装好的。可我的不是，没有Rails环境，只有ruby 1.8.7。这样也好，体验一下配制开发环境的过程。

1、gem 安装Rails

这个没有问题，默认已经安装了2.2.2，只要再装上需要的几个版本就可以

2、装xcode

问题来了，rake的时候出错，按照ubuntu的经验，估计是缺少编译环境，ubuntu上是装了ruby－dev。

装上xcode，问题解决。（本人绝对新人，欢迎朋友们指教，更多资料大家google吧）

3、装MacPort

这是一个奇怪的感觉，没有apt-get感觉不太习惯，所以装上MacPort，继续装ImageMagick，这个竟然用了一个多小时，具体安装方法参考：<a href="http://rmagick.rubyforge.org/install-osx.html">http://rmagick.rubyforge.org/install-osx.html</a>

4、重点来了，mysql，apache，php环境

其实本想一个个装一下，但是看到了mamp，就试验一下，没想到很容易就搞定了。。

参考： <a href="http://www.mamp.info/en/downloads/index.html">http://www.mamp.info/en/downloads/index.html</a>

可是，问题没结束，gem install mysql的时候出现了问题，因为mysql是俗话讲的集成，免安装过来的，不是默认配制，所以，需要重新编译一下mamp的mysql部分，才能正常gem安装mysql驱动。

重点在：gem install<span style="color: #ff0000;"> -v=2.7</span> mysql -- --with-mysql-config=/Applications/MAMP/Library/bin/mysql_config

注意红色的部分，因为最新的2.8.1会提示“Virtual timer expired”。建议大家不要轻易升级gem，实在要升级，一定本地环境完全模拟一遍，包括各个gem版本，建议用rvm的朋友一定要多留意，rvm很好，一定要早入手熟悉。

具体参考：<a href="http://boonedocks.net/mike/archives/175-MAMP-and-the-Ruby-MySQL-Gem.html">http://boonedocks.net/mike/archives/175-MAMP-and-the-Ruby-MySQL-Gem.html</a>

进行到这里感觉很幸福，发现分享自己的经验原来可以帮人解决那么多问题，也节省时间。这也是我写这个笔记，分享经历的动力。

5、终于到textmate了

macx.cn的软件栏目里有下载，总算见到textmate的样子了，之前netbeans也只是模仿一点点样子而已。

更多的textmate使用见仁见智吧，不多说，目前很痴迷mac，好玩的东西都要用一下。

写到这，环境基本ok了，开始Rails的工作吧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2010-05-02 14:24:36</wp:post_date>
		<wp:post_date_gmt>2010-05-02 06:24:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-on-mac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[apple mac]]></category>
		<category domain="post_tag" nicename="mac-2"><![CDATA[mac]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2425</wp:comment_id>
			<wp:comment_author><![CDATA[colder]]></wp:comment_author>
			<wp:comment_author_email>cncolder@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>120.195.113.9</wp:comment_author_IP>
			<wp:comment_date>2010-05-02 15:52:15</wp:comment_date>
			<wp:comment_date_gmt>2010-05-02 07:52:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[只有那个最高配的mac mini才是预装server版
server版的光盘零售也要3999 安装带序列号的那种.

雪豹个人版的话, apache是有的, mysql没有.

还有, 我不喜欢MacPort, 它是个独立于系统的, 不管你系统里已经有多少, 它只管全新安装, 所以安装过程是挺抓狂的.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2433</wp:comment_id>
			<wp:comment_author><![CDATA[Hozaka]]></wp:comment_author>
			<wp:comment_author_email>hozaka@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://hozaka.com/</wp:comment_author_url>
			<wp:comment_author_IP>208.68.235.28</wp:comment_author_IP>
			<wp:comment_date>2010-05-03 21:06:36</wp:comment_date>
			<wp:comment_date_gmt>2010-05-03 13:06:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[MacPorts 可以用 Homebrew 来代替，好很多]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3630</wp:comment_id>
			<wp:comment_author><![CDATA[fire9]]></wp:comment_author>
			<wp:comment_author_email>fire9@me.com</wp:comment_author_email>
			<wp:comment_author_url>http://lazynotes.net</wp:comment_author_url>
			<wp:comment_author_IP>27.189.26.53</wp:comment_author_IP>
			<wp:comment_date>2010-08-12 23:45:38</wp:comment_date>
			<wp:comment_date_gmt>2010-08-12 15:45:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mac]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3631</wp:comment_id>
			<wp:comment_author><![CDATA[fire9]]></wp:comment_author>
			<wp:comment_author_email>fire9@me.com</wp:comment_author_email>
			<wp:comment_author_url>http://lazynotes.net</wp:comment_author_url>
			<wp:comment_author_IP>27.189.26.53</wp:comment_author_IP>
			<wp:comment_date>2010-08-12 23:47:10</wp:comment_date>
			<wp:comment_date_gmt>2010-08-12 15:47:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[macosX+TestMate应该算是开发ror的最好环境了。Homebrew的确比MacPorts好太多了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5384</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>hi@liwei.me</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>113.213.50.157</wp:comment_author_IP>
			<wp:comment_date>2011-06-20 08:42:43</wp:comment_date>
			<wp:comment_date_gmt>2011-06-20 00:42:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[今天调试出错了，mysql2.7安装不上，换个方法把。http://www.tmtm.org/en/mysql/ruby/ 的配置整好适合当前环境。安装完可以链接mysql，但是gem list没有该gem提示。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1308530563.75";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Rails如何不加载某插件？</title>
		<link>http://railser.cn/blog/rails-config-plugins-array</link>
		<pubDate>Fri, 25 Jun 2010 06:38:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=459</guid>
		<description></description>
		<content:encoded><![CDATA[在用paperclip的时候，碰到一个问题：

在windows上用的插件和linux或mac上的不同，但是两个又在同一个版本库里，同步到别的环境时，要区别调用，所以，需要针对linux做一个设置。因为插件很多，不可能一一指定，所以google到了这个。。（PS：书上或许有，可是总不用也不记得了）
<div id="_mcePaste">config.plugins = [ :all ]</div>
<div id="_mcePaste">config.plugins -= [ "paperclip-win" ]</div>
ok，继续写代码去！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date>2010-06-25 14:38:35</wp:post_date>
		<wp:post_date_gmt>2010-06-25 06:38:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-config-plugins-array</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>磁疗产品网站开发，php转到rails上，值吗？</title>
		<link>http://railser.cn/blog/php-to-rails</link>
		<pubDate>Fri, 16 Jul 2010 03:20:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=462</guid>
		<description></description>
		<content:encoded><![CDATA[客户要定制开发一套在线销售的功能，针对大批量的处理，目前php的站说不行，可是我也在犹豫是不是用Rails开发， Rails开发和维护成本很高，客户有比较xq，很难能把事情做完美。可是除了Rails，php又不是特别熟，尤其还要在dede上再加工。

客户站点：<a href="http://www.tjfkc.com" target="_blank">www.tjfkc.com</a>，主要做电子烟，远红外线和磁疗产品的生产加工。目前看是典型的讲php程序过渡到Rails上的案例。

在线订单和实时客户跟进的设计，是Rails重点解决的问题。

先写到这里，另外问一句，电子烟真的能戒烟吗？？我很好奇。

<a href="http://www.tjfkc.com/html/jingpin/20100407/173.html">http://www.tjfkc.com/html/jingpin/20100407/173.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>462</wp:post_id>
		<wp:post_date>2010-07-16 11:20:25</wp:post_date>
		<wp:post_date_gmt>2010-07-16 03:20:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-to-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="%e7%94%b5%e5%ad%90%e7%83%9f"><![CDATA[电子烟]]></category>
		<category domain="post_tag" nicename="%e7%a3%81%e7%96%97"><![CDATA[磁疗]]></category>
		<category domain="post_tag" nicename="%e7%a6%8f%e5%ba%b7"><![CDATA[福康]]></category>
		<category domain="post_tag" nicename="%e8%bf%9c%e7%ba%a2%e5%a4%96%e7%ba%bf"><![CDATA[远红外线]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3094</wp:comment_id>
			<wp:comment_author><![CDATA[rubyu2]]></wp:comment_author>
			<wp:comment_author_email>zhangyaning1985@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.192.140.48</wp:comment_author_IP>
			<wp:comment_date>2010-07-16 17:29:58</wp:comment_date>
			<wp:comment_date_gmt>2010-07-16 09:29:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[绝对的，不能戒烟。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>hash.invert的用法</title>
		<link>http://railser.cn/blog/hash-invert</link>
		<pubDate>Thu, 05 Aug 2010 03:15:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=464</guid>
		<description></description>
		<content:encoded><![CDATA[对于多数的model的select列表，我都会用model属性＋方法的形式，做一个列表，然后在form里显示。

很常见的，比如。

<a href="http://railser.cn/wp-content/uploads/1.png"><img class="aligncenter size-full wp-image-468" title="1" src="http://railser.cn/wp-content/uploads/1.png" alt="" width="485" height="74" /></a>

在form里，这样调用
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/3.png"><img class="aligncenter size-full wp-image-470" title="3" src="http://railser.cn/wp-content/uploads/3.png" alt="" width="445" height="43" /></a></p>
在一些list的地方，也会把这个值作为一个显示

<a href="http://railser.cn/wp-content/uploads/2.png"><img class="aligncenter size-full wp-image-469" title="2" src="http://railser.cn/wp-content/uploads/2.png" alt="" width="485" height="61" /></a>

调用的时候：

<a href="http://railser.cn/wp-content/uploads/4.png"><img class="aligncenter size-full wp-image-471" title="4" src="http://railser.cn/wp-content/uploads/4.png" alt="" width="379" height="20" /></a>

这里，做笔记的目的是告诉自己，invert命令很简洁，之前，呵呵，我会用map的方法把每一个item都处理一遍，写代码的朋友一定知道，那样是很常见的思路，但是很不ruby。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>464</wp:post_id>
		<wp:post_date>2010-08-05 11:15:06</wp:post_date>
		<wp:post_date_gmt>2010-08-05 03:15:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hash-invert</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3601</wp:comment_id>
			<wp:comment_author><![CDATA[lxyluu]]></wp:comment_author>
			<wp:comment_author_email>lxyluu@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.226.55.138</wp:comment_author_IP>
			<wp:comment_date>2010-08-11 17:16:27</wp:comment_date>
			<wp:comment_date_gmt>2010-08-11 09:16:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[model:
 def purchase_status_view
 end
view:
user.contact_status_view  
确定方法名字没拼错还是gem.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3726</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@in.com</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.9.70</wp:comment_author_IP>
			<wp:comment_date>2010-08-23 11:24:37</wp:comment_date>
			<wp:comment_date_gmt>2010-08-23 03:24:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[是写错了。还好意思没错，呵呵。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>3601</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>打开新表单，并弹出thickbox提示框</title>
		<link>http://railser.cn/blog/open-new-target-window-and-show-thickbox-frame</link>
		<pubDate>Mon, 27 Sep 2010 09:37:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=478</guid>
		<description></description>
		<content:encoded><![CDATA[在处理支付的时候，需要新打开支付页面完成流程，同时要在原页面提示后续处理链接。

这里用thickbox来显示，但是直接点击按钮打开thickbox后，无法弹出新窗口的，所以在提交按钮上加入了

onclick="tb_show('请选择下一步操作', '&lt;%= process_payment_path(:oid=&gt;@oid) %&gt;', '');"

一个解决办法，有更好请大家指点。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>478</wp:post_id>
		<wp:post_date>2010-09-27 17:37:09</wp:post_date>
		<wp:post_date_gmt>2010-09-27 09:37:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>open-new-target-window-and-show-thickbox-frame</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jquery"><![CDATA[jquery]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="thickbox"><![CDATA[thickbox]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3821</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@echangchun.net</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.46.200</wp:comment_author_IP>
			<wp:comment_date>2010-09-27 17:40:23</wp:comment_date>
			<wp:comment_date_gmt>2010-09-27 09:40:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哦，参考的这里，经常打不开，所以转过来了。
http://hobione.wordpress.com/2007/12/28/jquery-thickbox/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>网银钱包不能用了，郁闷</title>
		<link>http://railser.cn/blog/chinabank-qianbao</link>
		<pubDate>Wed, 29 Sep 2010 06:10:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=481</guid>
		<description></description>
		<content:encoded><![CDATA[刚才打电话给网银，确认一下，没想到网银钱包别的银行也不能加钱。测试起来好麻烦阿。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>481</wp:post_id>
		<wp:post_date>2010-09-29 14:10:16</wp:post_date>
		<wp:post_date_gmt>2010-09-29 06:10:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chinabank-qianbao</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>阅川工作室 Riverwatcher Studio 计划在 (北京) 地区招聘 ROR工程师两名</title>
		<link>http://railser.cn/blog/jobs-on-rails</link>
		<pubDate>Fri, 01 Oct 2010 14:24:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=487</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="_mcePaste">
<div id="_mcePaste">程序师技术要求：</div>
<div id="_mcePaste">招聘具有Ruby on Rails 背景的工程师。</div>
<div id="_mcePaste">工程师要求 半年到两年左右的RoR项目经验</div>
<div id="_mcePaste"></div>
<div id="_mcePaste">如果您有以下的背景将会被优先考虑:</div>
<div id="_mcePaste">PHP经验。</div>
<div id="_mcePaste">iphone开发经验。</div>
<div id="_mcePaste">计算机专业本科。</div>
<div id="_mcePaste">XHTML, JavaScript and AJAX technology。</div>
<div id="_mcePaste">UNIX such as Linux。</div>
<div id="_mcePaste">MVC 和其他设计模式。</div>
<div id="_mcePaste"></div>
<div>
<div id="_mcePaste">可以将您的背景资料和简历发送到</div>
<div id="_mcePaste">charles@riverwatcher.com</div>
<div></div>
</div>
<div id="_mcePaste">另外，我们将会比较看重工程师的智慧，诚实，解决问题的能力，对可能出现问题的估计和提前准备，对于运用新技术的渴望，和良好的工作道德。</div>
<div id="_mcePaste"></div>
<div id="_mcePaste">了解更多信息也可以发送邮件到： charles@riverwatcher.com</div>
<div id="_mcePaste">公司网站：www.riverwatcher.com</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>487</wp:post_id>
		<wp:post_date>2010-10-01 22:24:03</wp:post_date>
		<wp:post_date_gmt>2010-10-01 14:24:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jobs-on-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="jobs"><![CDATA[jobs]]></category>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails 中的try方法</title>
		<link>http://railser.cn/blog/try-method-in-rails</link>
		<pubDate>Mon, 04 Oct 2010 12:47:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=489</guid>
		<description></description>
		<content:encoded><![CDATA[在Rails2.3 等后续版本中可使用try方法，避免 nil 对象调用方法。

比如

user = User.find_by_id(0)

user.name

必然会引起异常了，所以用try方法加以避免

user.try(:name)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2010-10-04 20:47:46</wp:post_date>
		<wp:post_date_gmt>2010-10-04 12:47:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>try-method-in-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3854</wp:comment_id>
			<wp:comment_author><![CDATA[javy_liu]]></wp:comment_author>
			<wp:comment_author_email>javy_liu@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://hi.baidu.com/beyond_javy</wp:comment_author_url>
			<wp:comment_author_IP>114.251.179.130</wp:comment_author_IP>
			<wp:comment_date>2010-10-11 10:11:48</wp:comment_date>
			<wp:comment_date_gmt>2010-10-11 02:11:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[呵呵，以前一直用 &amp;&amp; 来得到
如：user &amp;&amp; user.name
try 更简单
不知是否支持以下写法
如以下模型：
class User
   has_one :profile
end

user.try(:profile).try(:nickname)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3856</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@echangchun.net</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.36.236</wp:comment_author_IP>
			<wp:comment_date>2010-10-11 10:35:50</wp:comment_date>
			<wp:comment_date_gmt>2010-10-11 02:35:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可以的。我用这段代码试了一下。

&gt;&gt; post = Post.first
=&gt; #gem.(can't display the code)
&gt;&gt; post.comment
=&gt; nil
&gt;&gt; post.try(:comment).try(:wahaha)
=&gt; nil

呵呵。的确很省事。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>3854</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3857</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>liwei@echangchun.net</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.36.236</wp:comment_author_IP>
			<wp:comment_date>2010-10-11 10:39:57</wp:comment_date>
			<wp:comment_date_gmt>2010-10-11 02:39:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://guides.rubyonrails.org/active_support_core_extensions.html

2.4 try 里介绍了一下]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>使用find_each提升批量发送效率</title>
		<link>http://railser.cn/blog/user-find_each-for-select-multiple-records</link>
		<pubDate>Mon, 04 Oct 2010 13:29:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=496</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

过去的两年一直从事sns的开发，目前已经正式上限运营了，所以工作也稍微的调整一下。没有了大量的新功能的开发，开始对新版本的Rails进行笔记，并且翻译一些文章。整个十月，如果没有大的变化，会有很多时间更新我的railser.cn了。

认领一下博客：QQREADERFFAB13389FAE8315

在开发的时候会碰到全表检索，逐条发送或根据返回更新状态（当然这里讲的是真的无法用批量操作的时候）。在2。3等后续版本里，提供了find_each方法。默认会逐条操作id升序排列的前1000条。
<pre lang="ruby">
User.find_each do |user|

NewsLetter.weekly_deliver(user)

end
</pre>
这里还可以增加两个参数，扩大应用的纪录集。1000的确有点小，10000或许有点大。对于邮件发送，更新订阅状态，生成动态，更新动态订阅和好友动态等操作，这个方法的确不错。
<pre lang="ruby">
﻿User.find_each(:batch_size =&gt; 5000, :start =&gt; 2000) do |user|

NewsLetter.weekly_deliver(user)

end
</pre>

参考：http://guides.rubyonrails.org/active_record_querying.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>496</wp:post_id>
		<wp:post_date>2010-10-04 21:29:08</wp:post_date>
		<wp:post_date_gmt>2010-10-04 13:29:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>user-find_each-for-select-multiple-records</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3855</wp:comment_id>
			<wp:comment_author><![CDATA[javy_liu]]></wp:comment_author>
			<wp:comment_author_email>javy_liu@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://hi.baidu.com/beyond_javy</wp:comment_author_url>
			<wp:comment_author_IP>114.251.179.130</wp:comment_author_IP>
			<wp:comment_date>2010-10-11 10:30:45</wp:comment_date>
			<wp:comment_date_gmt>2010-10-11 02:30:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[find_in_batches 这个方法也不错]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3896</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>hi@liwei.me</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.25.173</wp:comment_author_IP>
			<wp:comment_date>2010-10-20 14:59:12</wp:comment_date>
			<wp:comment_date_gmt>2010-10-20 06:59:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[遗憾的是我的项目还停留在2.1.2，哎。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Rails3：rails destroy scaffold Page</title>
		<link>http://railser.cn/blog/rails3%ef%bc%9arails-destroy-scaffold-page</link>
		<pubDate>Sat, 09 Oct 2010 15:53:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=512</guid>
		<description></description>
		<content:encoded><![CDATA[笔记一下，不常用的destroy命令，和generate相反。有时候写错了一个关键的地方，随手想删掉，就想到它了。比如刚才。。。
<div id="_mcePaste">liwei$ rails destroy --help</div>
<div id="_mcePaste">Usage: rails destroy GENERATOR [args] [options]</div>
<div id="_mcePaste">General options:</div>
<div id="_mcePaste">-h, [--help]     # Print generator's options and usage</div>
<div id="_mcePaste">-p, [--pretend]  # Run but do not make any changes</div>
<div id="_mcePaste">-f, [--force]    # Overwrite files that already exist</div>
<div id="_mcePaste">-s, [--skip]     # Skip files that already exist</div>
<div id="_mcePaste">-q, [--quiet]    # Suppress status output</div>
<div id="_mcePaste">Please choose a generator below.</div>
<div id="_mcePaste">Rails:</div>
<div id="_mcePaste">controller</div>
<div id="_mcePaste">generator</div>
<div id="_mcePaste">helper</div>
<div id="_mcePaste">integration_test</div>
<div id="_mcePaste">mailer</div>
<div id="_mcePaste">migration</div>
<div id="_mcePaste">model</div>
<div id="_mcePaste">observer</div>
<div id="_mcePaste">performance_test</div>
<div id="_mcePaste">plugin</div>
<div id="_mcePaste">resource</div>
<div id="_mcePaste">scaffold</div>
<div id="_mcePaste">scaffold_controller</div>
<div id="_mcePaste">session_migration</div>
<div id="_mcePaste">stylesheets</div>
<div id="_mcePaste">liwei$ rails destroy scaffold Page</div>
<div>gem</div>
<div></div>
<div>目前在学习Rails3，haml，scss和一些基础的东西。笔记比较零碎。对了，练习的代码都部署到heroku上了，我发现它真的好强大了。git还是不太熟，加油。</div>
<div></div>
<div>地址：<a href="http://blog-in-rails3.heroku.com" target="_blank">blog-in-rails3.heroku.com</a></div>
<div>git：http://github.com/liwei78/blog</div>
<div></div>
<div>欢迎加我的github：http://github.com/liwei78</div>
<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>512</wp:post_id>
		<wp:post_date>2010-10-09 23:53:17</wp:post_date>
		<wp:post_date_gmt>2010-10-09 15:53:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails3%ef%bc%9arails-destroy-scaffold-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="rails3"><![CDATA[rails3]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Flex build4 和Rails资源笔记</title>
		<link>http://railser.cn/blog/flex-build4-and-rails-note</link>
		<pubDate>Sat, 30 Oct 2010 04:54:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=521</guid>
		<description></description>
		<content:encoded><![CDATA[从infoq上看到了flex builder4的介绍。07年知道flex的时候就很关注它，也写了一点在这个博客上。那个时候还是测试版。现在已经发展到了4，并且flex的书越来越多。rails的新书貌似不多了。

在这里下载中文版：http://www.infoq.com/cn/vendorcontent/show.action?vcr=664

安装完看了一下，大概的思路还是懂的，然后写了个小测试，实现从 http://blog-in-rails3.heroku.com/ 获得members和posts数据。（这是一个Rails3的练习作品）

在github上看到了 http://github.com/danielwanja/flexonrails，这里有很多代码实例，看完一个，收益很多。

另外，http://www.manning.com/armstrong/ 有一些实例代码，可做参考。（有点老，书还是08年的，想想真是遥远阿，坎坷的08年。。。）
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>521</wp:post_id>
		<wp:post_date>2010-10-30 12:54:59</wp:post_date>
		<wp:post_date_gmt>2010-10-30 04:54:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>flex-build4-and-rails-note</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flex"><![CDATA[flex]]></category>
		<category domain="category" nicename="flexible-rails"><![CDATA[Flexible Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>有了ultraviolet，可是没有uv，怎么办？</title>
		<link>http://railser.cn/blog/gem-ultraviolet-set-lib-as-uv</link>
		<pubDate>Tue, 09 Nov 2010 13:32:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=527</guid>
		<description></description>
		<content:encoded><![CDATA[问题：
gem 'ultraviolet', '0.10.2'
bundle install 
代码highlight的时候，require 'uv' 失败。
提示：uninitialized constant PadsHelper::Uv

解决办法：gemfile中，改为

gem 'ultraviolet', '0.10.2', :require => "uv"

搞定。

最近在弄一个小项目，为程序员们提供一个简单舒适的代码经验管理工具。demo出来后希望大家支持。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>527</wp:post_id>
		<wp:post_date>2010-11-09 21:32:21</wp:post_date>
		<wp:post_date_gmt>2010-11-09 13:32:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gem-ultraviolet-set-lib-as-uv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Autotest and Growl</title>
		<link>http://railser.cn/blog/autotest-and-growl</link>
		<pubDate>Sat, 13 Nov 2010 02:16:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=533</guid>
		<description></description>
		<content:encoded><![CDATA[第一步安裝Growl 
http://growl.info/index.php 注意要安裝擴展中的 growlnotify。 growlnotify is a command-line tool to post Growl notifications.

第二步設置Growl 
Open the Growl Preference Panel (System > Growl) and activate "Listen for incoming notifications" and "Allow remote application registration" options on the Network tab. 

第三步安裝相關gem
1 gem install autotest
2 gem install ZenTest
3 gem install autotest-rails-pure
autotest 和 ZenTest 缺一不可，下面的gem不用安裝，不過這講了 autotest-rails-pure 的功用。
https://github.com/svoop/autotest-growl

4 gem install notifier  
https://github.com/fnando/notifier

5 gem install test_notifier
https://github.com/fnando/test_notifier

第四步配置 ~/.autotest 文件
添加如下 require "test_notifier/runner/autotest"

附1：如果使用RSpec 2 需要在 spec_helper.rb 文件中添加 require "test_notifier/runner/rspec"
附2：不要相信什麼autotest和ZenTest裝一個就可以的鬼話，我親身測試，缺一不可。另外即便你使用Rails3，也不需要在Gemfile進行配置了，因為它要操作Growl的，你再怎麼配置文件也沒辦法保證其它開發者和你一樣安裝了Growl並且設置好了它的屬性，所以讓別人玩蛋去吧～
附3：考慮到看文章的人有可能還是從Rails1.×的時代過來的，那麼加一句，現在執行 autotest 後面不用加那個 . 了

本文參考 http://exviva.posterous.com/running-autotest-with-rails-3]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>533</wp:post_id>
		<wp:post_date>2010-11-13 10:16:01</wp:post_date>
		<wp:post_date_gmt>2010-11-13 02:16:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>autotest-and-growl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_4db5545539e3451878fbbda340011fdb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3caeb481c71567733c301bd67d6b1650</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_03a54d66170810b9b396ef4edfa2165e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_30780088e47904d9acf98242921c83b2</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f80546cdf009f4c1af20a5af9808170d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_9b9354d3ff29139dd4a86cc5de872a8a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fef2e8fe884bf04957685237a562f7dd</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_73a964bb2af7e86619ac2b4df26a555c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_533d04d48f9de6f3425e19a02b68fcea</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>糟糕之极的豆瓣电台ui设计</title>
		<link>http://railser.cn/blog/bad-of-douban-fm-ui-design</link>
		<pubDate>Thu, 16 Dec 2010 05:51:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=561</guid>
		<description></description>
		<content:encoded><![CDATA[我再也忍受不了豆瓣电台的ui设计了，这是一个极其糟糕的设计和用户体验。我刚才又忘记哪个是暂停功能了。（这是一个新功能，之前只能是无奈的关闭播放功能）

有图有真相：

<a href="http://railser.cn/wp-content/uploads/bad.jpg"><img class="alignleft size-full wp-image-562" title="bad" src="http://railser.cn/wp-content/uploads/bad.jpg" alt="" width="417" height="271" /></a>

A：“换台”，功能。

B：暂停功能。

这种隐藏功能是需要你鼠标放上去看文字提示才会懂的东西，居然还放错了位置。当我想切换电台的时候，会去找一个抽象的图标，还是直接点击“欧美”来换台呢？我的下意识当然告诉我要点最直接的，这难道不正是dont make me think 的事情吗？可是，豆瓣电台的实事不会这样，真有点像和我儿子玩点头不算摇头算的游戏。

之后，B竟然是暂停，然后再点一下，才能恢复。如图：

<a href="http://railser.cn/wp-content/uploads/pause.png"><img class="alignleft size-full wp-image-563" title="pause" src="http://railser.cn/wp-content/uploads/pause.png" alt="" width="415" height="266" /></a>

也就是说：点击“欧美”，可以暂停的狗shi逻辑。

我受不了啦！如果想做的好，就不要给对手留下漏洞，“防守是门艺术”，送上此句。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>561</wp:post_id>
		<wp:post_date>2010-12-16 13:51:58</wp:post_date>
		<wp:post_date_gmt>2010-12-16 05:51:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bad-of-douban-fm-ui-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[so-bad-of-douban-fm-ui-design]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4499</wp:comment_id>
			<wp:comment_author><![CDATA[2013]]></wp:comment_author>
			<wp:comment_author_email>wjp2013@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.136.95.137</wp:comment_author_IP>
			<wp:comment_date>2010-12-16 19:41:27</wp:comment_date>
			<wp:comment_date_gmt>2010-12-16 11:41:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://blog.rollingcode.org/2010/06/20/fanradio-1/
祝你风火轮]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4500</wp:comment_id>
			<wp:comment_author><![CDATA[2013]]></wp:comment_author>
			<wp:comment_author_email>wjp2013@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.136.95.137</wp:comment_author_IP>
			<wp:comment_date>2010-12-16 19:49:32</wp:comment_date>
			<wp:comment_date_gmt>2010-12-16 11:49:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[当然更可以当作 widget 了 
http://cl.ly/1I0A2H2G2l2q1W1r133t

要学会使用系统功能哦～]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4582</wp:comment_id>
			<wp:comment_author><![CDATA[心吾]]></wp:comment_author>
			<wp:comment_author_email>kkxlkkxllb@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://heartme.heroku.com</wp:comment_author_url>
			<wp:comment_author_IP>116.225.166.72</wp:comment_author_IP>
			<wp:comment_date>2010-12-25 21:08:46</wp:comment_date>
			<wp:comment_date_gmt>2010-12-25 13:08:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈，豆瓣我不怎么玩的，这个设计确实很shit,不过我觉得ui设计真的很有挑战性]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1293282526.29";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1293612240.74";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4640</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>hi@liwei.me</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.45.97</wp:comment_author_IP>
			<wp:comment_date>2010-12-30 12:42:24</wp:comment_date>
			<wp:comment_date_gmt>2010-12-30 04:42:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[简单的总结一下我对豆瓣电台UI的观点：1、欧美MHz 按钮是个暂停按钮，这个设计很狗shi。2、A区的类似电压表的图标是换台功能，依旧很狗shi。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1293684144.45";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5062</wp:comment_id>
			<wp:comment_author><![CDATA[李伟]]></wp:comment_author>
			<wp:comment_author_email>hi@liwei.me</wp:comment_author_email>
			<wp:comment_author_url>http://liwei.me</wp:comment_author_url>
			<wp:comment_author_IP>175.30.22.3</wp:comment_author_IP>
			<wp:comment_date>2011-03-31 11:39:19</wp:comment_date>
			<wp:comment_date_gmt>2011-03-31 03:39:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我真的无语了，豆瓣电台的换台按钮竟然改成了一个“刷新中”的样子，我一下子真不知道它是干嘛的。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1301542759.92";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1301646465.47";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5931</wp:comment_id>
			<wp:comment_author><![CDATA[Sean]]></wp:comment_author>
			<wp:comment_author_email>zfool2@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.78.156.133</wp:comment_author_IP>
			<wp:comment_date>2011-09-26 23:15:03</wp:comment_date>
			<wp:comment_date_gmt>2011-09-26 15:15:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[很明显那个设UI的是学艺术的而非学设计的。那么隐晦的公共设计是想被炒鱿鱼的艺术表达嘛。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1317050103.43";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1319092086.77";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>如何安装TextMate的haml.tmbundle</title>
		<link>http://railser.cn/blog/install-haml-tmbundle-on-my-macmini</link>
		<pubDate>Wed, 29 Dec 2010 08:50:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=567</guid>
		<description></description>
		<content:encoded><![CDATA[网上的文章讲的都是在  ~/Library/"Application Support"/TextMate/Bundles/ 目录下，可我的偏偏不是，难道是。。。？

所以，笔记下我的安装方法：

cd /Applications/TextMate.app/Contents/SharedSupport/Bundles/

安装haml

git clone git://github.com/textmate/ruby-haml.tmbundle.git

安装sass

git clone git://github.com/charlesr/ruby-sass-tmbundle.git "Ruby Sass.tmbundle"

安装scss

git clone git://github.com/kuroir/SCSS.tmbundle.git "SCSS.tmbundle"]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date>2010-12-29 16:50:43</wp:post_date>
		<wp:post_date_gmt>2010-12-29 08:50:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-haml-tmbundle-on-my-macmini</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="textmate"><![CDATA[TextMate]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>heroku部署问题，是gem升级导致的这个问题</title>
		<link>http://railser.cn/blog/heroku-deploy-error-with-mail-2-2-13</link>
		<pubDate>Sun, 02 Jan 2011 13:18:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=572</guid>
		<description></description>
		<content:encoded><![CDATA[/Library/Ruby/Site/1.8/rubygems/remote_fetcher.rb:176:in `fetch_path': timed out (http://rubygems.org/quick/Marshal.4.8/mail-2.2.13.gemspec.rz) (Gem::RemoteFetcher::FetchError)

先把Gemfile.lock中的
<div id="_mcePaste">mail (2.2.6.1)</div>
<div id="_mcePaste">改成</div>
<div>
<div>mail (2.2.5)</div>
<div></div>
<div>然后bundle update 一下 （这是参照 http://stackoverflow.com/questions/4574176/heroku-push-rejected-failed-to-install-gems-via-bundler 的意见）</div>
<div></div>
<div>这时mail的一行已经改为</div>
<div>mail(2.2.13)</div>
<div></div>
<div>然后再次部署，搞定。yeah！！</div>
</div>
<div></div>
<div>ps：我的rails是3.0.0，这是一个<a href="http://moreappsweb.heroku.com/" target="_blank">小项目</a>，页面是客户设计的，很漂亮。为了保持磨沙的效果，png比较大，以后再去优化图片吧。</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>572</wp:post_id>
		<wp:post_date>2011-01-02 21:18:31</wp:post_date>
		<wp:post_date_gmt>2011-01-02 13:18:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>heroku-deploy-error-with-mail-2-2-13</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>paperclip上传后的原图大小</title>
		<link>http://railser.cn/blog/paperclip-original-file-size</link>
		<pubDate>Thu, 06 Jan 2011 05:09:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=575</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="_mcePaste">一时想不起来如何拼写了，写在这里作为笔记。</div>
<div></div>
<div>has_attached_file :icon,</div>
<div id="_mcePaste">:styles =&gt; <span style="color: #ff0000;">{ :original =&gt; "74x74" }</span>, # 将paperclip上传原图做大小限制</div>
<div id="_mcePaste">:url =&gt; "/:class/:attachment/:id/:style_:basename.:extension",</div>
<div id="_mcePaste">:path =&gt; ":rails_root/public/:class/:attachment/:id/:style_:basename.:extension",</div>
<div id="_mcePaste">:default_url =&gt; "/images/sample_icon.png"</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>575</wp:post_id>
		<wp:post_date>2011-01-06 13:09:27</wp:post_date>
		<wp:post_date_gmt>2011-01-06 05:09:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paperclip-original-file-size</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2011，让APP飞一会吧</title>
		<link>http://railser.cn/blog/myappblog-and-2011-new-wish</link>
		<pubDate>Thu, 24 Feb 2011 16:54:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=577</guid>
		<description></description>
		<content:encoded><![CDATA[2011，我有个惊奇的开始，我的iTouch有一天突然可以上网了，原因不明。紧接着几天，接触了一个开发项目，是做一个APP介绍的网站。可以用Rails。这一点实在让我暗地里欢喜：可算有得发挥了。接着，《让子弹飞》上映，那就让APP也跟着飞一会吧。

经过一个多月的敲敲打打，<a href="http://www.myappblog.net" target="_blank">www.myappblog.net</a> 正式上线了，这里把以往Rails2.x用过的技术，在Rails3.0平台上又加强了一遍，认真体会了一下Rails 3带来的变革。

MyAPPBlog网站是一个iPhone，iPad应用推荐，点评的网站，上面还增加了很多视频，<a href="http://www.myappblog.net/videos/9" target="_blank">讲解游戏的玩法</a>，看得我实在兴奋阿。对于不经常逛app store的我来说，没事看看MyAppBlog的资讯，能发现太多不知道的事情。MyAPPBlog就像一本App杂志，很方便，而且，它是我的又一个五星级的程序作品。（哈哈）

从MyAPPBlog的网站定位上，可以看到它的特点：一是信息分享，比如最新的资讯，免费的app，二是APP操作视频，强烈建议把怒鸟的攻略发布一下，因为某人。。。。

说说程序，MyAPPBlog用了haml和sass，这极大的提高了页面的可维护性。这不是一点点的改变，而是把页面结构，设定的更加规范，比如div class的设计

.title

= @app.title

这样就实现了一个div层的结构。sass我目前用到它三个特性，变量，命名空间和继承。

Rails3让MyAPPBlog的维护更加方便，尤其是之前很难受的fckeditor的附件处理，Rails3上可用的ckeditor gem，直接用了paperclip，图片文件上传省了很多代码。

后面的工作集中在app store的数据分析上，任务挑战很大，但应用前景非常看好。

这里稍微提一下，个人对工作的定义也有了一些改进，目前的工作应该叫技术支持。

大多数人理解的外包是拿钱走人的形式，所以，技术支持，就是一个长期的服务状态，在Rails的领域里进行不断的积累，将自身的成果分享给每一个客户。

写在最后：

夜深人静，32岁的人，已经没有了当年创业时候的冲动，也没有开发搜索引擎时候的韧劲。事情按部就班的继续，看着一群比自己小10岁的年轻人，他们是不是也在经历我过去10年所做过的事情呢？我现在做的，未来做的，是不是他们10年后也要来做的呢？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>577</wp:post_id>
		<wp:post_date>2011-02-25 00:54:41</wp:post_date>
		<wp:post_date_gmt>2011-02-24 16:54:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>myappblog-and-2011-new-wish</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="app"><![CDATA[app]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="haml"><![CDATA[haml]]></category>
		<category domain="post_tag" nicename="ipad"><![CDATA[ipad]]></category>
		<category domain="post_tag" nicename="iphone-2"><![CDATA[iphone]]></category>
		<category domain="post_tag" nicename="sass"><![CDATA[sass]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>errors.add_to_base和errors.add</title>
		<link>http://railser.cn/blog/add_to_base-and-add-in-rails-model-errors</link>
		<pubDate>Sun, 20 Mar 2011 14:13:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=583</guid>
		<description></description>
		<content:encoded><![CDATA[我们在页面上进行ajax校验属性的时候，有两种情况会碰到。

一种是，只要出错，就给一个提示。这个比较常见的就是“您填写的用户名或密码不正确”。因为这里可能做了三组判断，先判断用户名是否存在，然后是密码是否为空，三是两者能否检索出一条纪录。如果那个出现为空，就直接返回false，controller也就直接宣布了上面那句话。

第二种比较复杂，就是每个属性都会给一个详细的解释，甚至多个解释，比如邮件格式不正确，邮件不能为空，邮件应该以字母开头等等。因为ajax判断有时候不一定会把model实例传回来，而可能只给一个message，让view去针对该输入进行提示，比如那个经典的输入矿失去焦点时校验。

针对上面两种方法，我经常用到的就是 errors.add_to_base 和 errors.add 方法。这里做以笔记。内容来自rdoc
<pre lang="ruby">
def validate!
    errors.add(:name, "can not be nil") if name == nil
end
</pre>

<pre lang="ruby">
def validate!
    errors.add_to_base("can not be nil") if name == nil
end
</pre>

其实，它们是一样的
<pre lang="ruby">
def add_to_base(msg)
    add(:base, msg)
end
</pre>

做以笔记，因为有时候真的会忘记这些小代码。

补充几个方法：
<pre lang="ruby">
def Person.human_attribute_name(attr, options = {})
    attr
end
</pre>
它可以把名称更人性化的输出，比如“first_name” 输出为 "First name"。但是它是一个过时的方法，我们会得到一个提示："ActiveRecord::Errors#generate_message has been deprecated. Please use ActiveRecord::Error.new().to_s."


<pre lang="ruby">
    company = Company.create(:address => '123 First St.')
    company.errors.on(:name)      # => ["is too short (minimum is 5 characters)", "can't be blank"]
    company.errors.on(:email)     # => "can't be blank"
    company.errors.on(:address)   # => nil
</pre>
显而易见

<pre lang="ruby">
def on_base
    on(:base)
end
</pre>
对上面方法的一个补充。

我喜欢netbeans的一个很重要原因就是查看这些代码的doc很方便，有时候一个简单的方法附近的doc就能读上和体会一阵子。呵呵。

其他实用的方法欢迎各位补充。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>583</wp:post_id>
		<wp:post_date>2011-03-20 22:13:11</wp:post_date>
		<wp:post_date_gmt>2011-03-20 14:13:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>add_to_base-and-add-in-rails-model-errors</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>redmine插件开发心得</title>
		<link>http://railser.cn/blog/redmine-plugin-dev-note</link>
		<pubDate>Tue, 29 Mar 2011 06:13:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=591</guid>
		<description></description>
		<content:encoded><![CDATA[上上周经Q友介绍，接了一个redmine插件开发的小项目。我很感兴趣的是可以借此机会把redmine熟悉一下，所以没太考虑价钱就答应了下来。现在想想，这次开发学到的东西很多，也认识了专业的开发团队，很值得。下面把redmine插件开发的经验笔记一下。

先来截图：

<a href="http://railser.cn/wp-content/uploads/屏幕快照-2011-03-20-11.08.28.png"><img class="aligncenter size-medium wp-image-592" title="屏幕快照 2011-03-20 11.08.28" src="http://railser.cn/wp-content/uploads/屏幕快照-2011-03-20-11.08.28-300x193.png" alt="" width="300" height="193" /></a>

地址：<a href="http://www.cocos2d-x.org/projects/cocos2d-x/apps" target="_blank">http://www.cocos2d-x.org/projects/cocos2d-x/apps</a>

简单介绍下

cocos2d-x is a multi-platform, light weight &amp; developer-friendly C++ 2D mobile game engine, open source and released under MIT License. It is a child branch of the famous "cocos2d-iphone" project, and will keep the primary features sync with it.

更多细节请访问 <a href="http://www.cocos2d-x.org/projects/cocos2d-x/wiki" target="_blank">http://www.cocos2d-x.org/projects/cocos2d-x/wiki</a>

好了，说下这个插件实现的功能。

一是管理发布平台，比如iOS，Android，WoPhone，Windows，Other，未来它还会有其他的平台。

二是在这些平台分类里，上传app，比如时下最火的iOS app，android app等。当上传iOS app时，可自动采集该信息。
<h3>一、让我们开始</h3>
插件如何开发呢？下载其他插件的代码来研究是关键的第一步。因为之前对redmine插件开发一无所知，所以下面的笔记有点啰唆。

先看一下官方发布的插件开发文档，<a href="http://www.redmine.org/projects/redmine/wiki/Plugin_Tutorial" target="_blank">http://www.redmine.org/projects/redmine/wiki/Plugin_Tutorial</a>，请大概的了解一下。然后，我们去<a href="http://www.redmine.org/plugins" target="_blank">redmine插件列表</a>，下载两个很有代表性的插件，redmine_polls和redmine_bookmarks，把它们放到 vendor/plugins 里。选择这两个插件的原因是它们都是自主上传，填写内容的。

注意：在最新版本的redmine1.1中，polls会引起个异常。
<h3>二、如何管理插件</h3>
<a href="http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-10.10.25.png"><img class="aligncenter size-medium wp-image-595" title="屏幕快照 2011-03-29 10.10.25" src="http://railser.cn/wp-content/uploads/屏幕快照-2011-03-29-10.10.25-300x105.png" alt="" width="300" height="105" /></a>这是插件管理界面，如果你按照上面插件教程开发的话，你会发现缺少了Configure功能。如何加入这个功能，并且它可以做什么？可以完全的参考上面两个插件中的init.rb 和games插件里的写法。

&nbsp;
<pre lang="ruby">settings :default =&gt; {},
           :partial =&gt; 'platforms/manage'</pre>
&nbsp;

&nbsp;

这两行代码的作用，使得我们可以编辑一个页面，这个页面里，实现了games的platform管理。当然，你也可以在configure里增加apps的管理，丰富管理员功能。

这里要注意的是，权限如何分配了。
<h3>三、如何分配权限</h3>
按照文档的描述，我们可以很妥善的分配各个角色的权限。public =&gt; true，即可将所指定的action开放给所有人，如果想屏蔽掉未登录的账号访问，:require =&gt; :loggedin 即可。如果想对登录账号做区别，就需要针对每个action做以分别了。

权限设置的文档不够全，建议大家多参考别人的代码，和看源代码分析一些用法。
<h3>四、设置导航菜单</h3>
在插件的init.rb文件里，需要单独写一遍插件所使用的路由规则，为了是插件地址更没关，我们的做一些代码上的牺牲。

&nbsp;
<pre lang="ruby">ActionController::Routing::Routes.draw do |map|
  map.connect 'projects/:project_id/apps', :controller =&gt; "apps", :action =&gt; "index"
  map.connect 'projects/:project_id/apps/all', :controller =&gt; "apps", :action =&gt; "all"
  map.connect 'projects/:project_id/apps/:id', :controller =&gt; "apps", :action =&gt; "show"
  map.resources :apps,
    :member =&gt; {:recommend =&gt; :post, :delete_pic =&gt; :post, :snatching =&gt; :get, :doing =&gt; :post},
    :collection =&gt; {:all =&gt; :get}
end</pre>
&nbsp;

&nbsp;

&nbsp;

这是games里的设置，只是将三个方法做了前缀处理，这样可以和其他导航链接类似，都是 /projects/text_proj/apps/9 的形式。否则，按照resource的形式，将会是很难看（客户也不会接受的）/apps/9?project_id=text_proj
<h3>五、开发插件代码</h3>
这是我们最熟悉的部分了，此处省略一万字节。
<h3>六、使用js和css</h3>
这个地方有点麻烦，每次改动都得重启一下服务，因为每次重启才会将js代码和css文件同步到public下，当然我们可以在public下去写，收工前拿回到插件目录下，可是插件用的文件都不大，何况我都是production下开发，改哪个代码都得重启。（development下的执行速度你们是知道的）。
<h3>七、抓取app store</h3>
games插件有一个很重要的功能，就是到app store页面去采集app信息。代码在lib下的app_snatcher.rb，功能比较简单，仅做参考吧。
<h3>八、其他插件和gem</h3>
出于尝试的目的，我使用了will_paginate插件来实现分页，paperclip来保存app采集时候的icon和screenshot，在采集时使用了两个gem，请编辑你的environment.rb，增加
<pre lang="ruby">config.gem 'hpricot'
config.gem 'mechanize'</pre>
&nbsp;
<h3>九、总结</h3>
如果你觉得这个代码对你开发redmine插件又帮助，可以在这里下载它：https://github.com/liwei78/redmine-games 。

欢迎和各位交个朋友，我个人的博客：<a href="http://liwei.me" target="_blank">http://liwei.me</a>，目前正在设计新的界面，会把我的介绍，包括工作内容，都整理发布到上面。
<h3>十：广告一下</h3>
目前我还运营这另外两个博客，<a href="http://www.echangchun.net" target="_blank">电子长春</a> 和 <a href="http://top360buy.com" target="_blank">京东购物导航 </a>。

前者关注电子商务动态和IT业内新闻，后者为京东商城点评，购物推介点评。

&nbsp;

Update at 2011-6-15

升级了一下，0.0.1到0.0.2，增加了lightbox显示screenshots]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>591</wp:post_id>
		<wp:post_date>2011-03-29 14:13:47</wp:post_date>
		<wp:post_date_gmt>2011-03-29 06:13:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>redmine-plugin-dev-note</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="category" nicename="iphone"><![CDATA[iPhone]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[plugin]]></category>
		<category domain="post_tag" nicename="redmine"><![CDATA[redmine]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hello, Rails3.1 pre</title>
		<link>http://railser.cn/blog/hello-rails31-pre</link>
		<pubDate>Sat, 21 May 2011 07:08:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=601</guid>
		<description></description>
		<content:encoded><![CDATA[Rails3.1面世了，赶紧尝鲜吧。可是，第一个问题就出现了，更新失败。此处略过一堆字，直接笔记：安装rvm吧。

https://rvm.beginrescueend.com/rvm/install/

rvm简直是多版本ruby开发环境下的救世主。补充一下笔记：

在安装完rvm后，rails new rails31test 新建了一个测试项目，一切正常，可是bundle的时候出错，就连 gem list都出错。查了一下，原来我们要重新安装gem，也要重新装rails。

ps：各位是不是会觉得，我刚才安装了阿，为什么又要装一次？你是不是也看这个视频了？http://railscasts.com/episodes/265-rails-3-1-overview

一切都没错，只是rvm 1.9.2@railspre --create 是新建了一个gemsets，（此语法为简写）。这样我们还得安装一下bundler

rails31test liwei$ gem install bundler

rails31test liwei$ bundle

rails31test liwei$ rails g scaffold project name:string

gem gem

/Users/apple/.rvm/gems/ruby-1.9.2-p180/gems/actionpack-3.1.0.beta1/lib/sprockets/railtie.rb:37:in `block (2 levels) in &lt;class:Railtie&gt;': undefined method `context' for #&lt;Sprockets::Environment:0x0000010312c420&gt; (NoMethodError)

查到这个问题的解决办法：https://github.com/rails/rails/issues/453

在Gemfile里写：

gem 'sprockets', '2.0.0.beta.2'

原因：beta.2 is required by rails 3.1.0beta1

<span style="color: #ff0000;">注意：安装的时候，使用的是 gem 'sprockets', '2.0.0.beta.5'，所以还要 bundle update sprockets 降回到beta.2</span>

再次

rails31test liwei$ rails g scaffold project name:string

成功

未完待续吧gem gem]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>601</wp:post_id>
		<wp:post_date>2011-05-21 15:08:34</wp:post_date>
		<wp:post_date_gmt>2011-05-21 07:08:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-rails31-pre</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails31"><![CDATA[rails31]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_65aabeb7f5641db1f861759f58bccebf</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8f49790a21b10141cdd67e8e5e54ccc6</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hello, rails3.1 pre 第二部分</title>
		<link>http://railser.cn/blog/hello-rails31-pre-part2</link>
		<pubDate>Sun, 22 May 2011 07:05:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=605</guid>
		<description></description>
		<content:encoded><![CDATA[接着上一篇，问题继续。

rake db:migrate

&gt;&gt; rake aborted!

&gt;&gt; undefined method `task' for #&lt;Rails31test::Application:0x00000100de6a60&gt;

好吧，继续找答案，此处还是省略一些细节，<a href="http://community.engineyard.com/discussions/problems/1391-you-have-already-activated-rake-083-but-your-gemfile-requires-rake-087-consider-using-bundle-exec" target="_blank">直接看这里</a>吧。

&gt;&gt; bundle exec rake db:migrate

问题暂时解决。

至此，projects已经可以看到了，剩下的还在琢磨。

补充一些链接：

CoffeeScript  <a href="http://jashkenas.github.com/coffee-script/" target="_blank">http://jashkenas.github.com/coffee-script/</a>

RVM(Ruby Version Manager)  <a href="https://rvm.beginrescueend.com/" target="_blank">https://rvm.beginrescueend.com/</a>

SASS/SCSS  <a href="http://sass-lang.com/" target="_blank">http://sass-lang.com/</a>

Sprockets  <a href="http://getsprockets.org/" target="_blank">http://getsprockets.org/</a>

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>605</wp:post_id>
		<wp:post_date>2011-05-22 15:05:51</wp:post_date>
		<wp:post_date_gmt>2011-05-22 07:05:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-rails31-pre-part2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="rails31"><![CDATA[rails31]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5252</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>hi@liwei.me</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>175.30.52.244</wp:comment_author_IP>
			<wp:comment_date>2011-05-22 15:14:27</wp:comment_date>
			<wp:comment_date_gmt>2011-05-22 07:14:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[haml为什么没做为默认的模版引擎呢？？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1306048467.84";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>在CentOS5上部署Rails3应用</title>
		<link>http://railser.cn/blog/rails-on-centos-step-by-step</link>
		<pubDate>Mon, 06 Jun 2011 16:02:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=609</guid>
		<description></description>
		<content:encoded><![CDATA[1、安装rvm

安装rvm前，要先安装git。因为rvm的安装教程就是一个git的小脚本。

&gt;&gt;wget http://kernel.org/pub/software/scm/git/git-1.7.5.3.tar.bz2

Oop！这里有个问题，我tar不常用，这里tar xvfz git-gem 是会提出格式错误的，查了一下需要换一个命令：tar -xvjpf git-gem

之后，

make prefix=/usr/local all

make prefix=/usr/local install

看到git 版本后，安装rvm

git --version

剩下的，就是按照 https://rvm.beginrescueend.com/rvm/install/ 的讲解一步步安装吧，最后，阿？为什么
<pre>type rvm | head -1</pre>
会提示错误呢？我也被搞糊涂了，按照提示，我重新打开一个终端窗口，这下正常了。所以再看看文档吧。

接着，安装1.8.7

2、安装ruby 1.8.7和gem

rvm install 1.8.7

注：我又将用户切换回了root，而在进行到Load RVM into your shell sessions as a function的时候，我不得不切换回user。

rvm use 1.8.7

显示正常了。

安装gems

http://rubygems.org/pages/download

3、安装rails

gem install rails -v 3.0.7 --no-rdoc --no-ri

如果安装rdoc和ri，我出现了问题，具体的情况未明。

问题又来了，&gt;&gt; rails -v 找不到命令

翻看文章的过程中，有一句话很重要，“gem install rails     # 注意不要加sudo，否则会安到系统的ruby下，而不是rvm的ruby下”

这是在百度里查到的，可是不用root，rvm也没安装成功，还是我最开始忘记使用user，而在安装完rvm后，ruby也用了root权限安装。不知道这里的影响会有什么，总之，我犯了一个错误，版本搭配错误。

应该是 ruby1.9.2搭配rails3.0.7。

好吧，还好有rvm，安装ruby1.9.2，再 gem install rails，竟然没有出现第一次时候的 ri 错误。欣慰吧。

这里还有一些细节，不影响整体即可，现在 rails new testrails 成功创建了一个应用。

4、安装svn

曾经熟悉的svn页面，已经转移到 apache 下，地址在这，http://subversion.apache.org/ ，用户手册在 http://svnbook.red-bean.com/ 。

按照一些文章介绍，安装svn实在太复杂了，突然我想起来yum和apt-get。来试一下。

yum install subversion

成功了。

按照<a href="http://www.hostingrails.com/Subversion-Rails-Implement-Your-Own-Version-Control-System" target="_blank">这个文档</a>，我配置过两次，这里不再详述了，又需要的朋友看一下。

我每次都会参照它ignore的操作。

5、<span style="color: #ff0000;">ssh配置</span>

在我本地重新生成一个key，其实没必要的，我只是出于练习的目的。

&gt;&gt; ssh-keygen -t rsa

在服务器上

&gt;&gt; mkdir .ssh (其实没太大必要了，因为我的key不打算放到这里了)

然后传输这个key上去

&gt;&gt; scp ~/.ssh/id_rsa.pub loginname@hostdomain:.ssh/authorized_keys

这里把key命名为authorized_keys。按照一些教程的说明，综合起来简单笔记一下。

在/etc/ssh/&lt;username&gt;建立文件夹，将authorized_keys mv进来，并给予权限

&gt;&gt; chmod 755 &lt;username&gt;

&gt;&gt; chmod 644 &lt;username&gt;/authorized_keys

编辑/etc/ssh/sshd_config，改写这一行

AuthorizedKeysFile    /etc/ssh/%u/authorized_keys

并取消注释这两行

RSAAuthentication yes

PubkeyAuthentication yes

保存后，

&gt;&gt; /etc/init.d/sshd restart

启动另一个终端，登录时弹出一个窗口提示输入密码，其实就是刚才生成key时候的passphrase。确认后，就不用输入密码直接登录了。

这里有一个调试经验。

&gt;&gt; ssh -v name@domain

会输出交互信息，这里我发现它先校验key，如果不通过，就校验登录密码了。所以，如果上面的任何一个步骤有问题，比如权限不对或者写错字母，这里就会继续提示需要密码。

如果上面的都正确了，这时就不用再次输入密码直接登录了。

感谢<a href="https://help.ubuntu.com/community/SSH/OpenSSH/Keys" target="_blank">这篇文章</a>，让我节省了如此多的时间。感谢分享的精神。

接着需要提高一些安全性了，常见的有

PermitRootLogin no （禁止用root登录，这是默认的，当然有些时候会被其他的开发人员打开，检查一下是必要的）

StrictModes yes （也是默认的）

PasswordAuthentication no （禁用密码登录，加上这个安全性就足够了，当然还有其他，欢迎各位指点。）

&nbsp;

时间过去了一个星期，这期间我在调试一个Rails程序，打算下面部署到服务器上，而不是随便用个railstest应付了事。这里又温习了很多rails得技巧，不过时间好快，一下子就是8天的时间。

好了，我的Rails程序已经基本完成小样了，开始用capistrano设置。

6、Capistrano

这里稍微特殊一些的地方，是我用的svn+ssh（注意顺序，写反了不行）链接服务器并cap命令。这里没有办法证明一件事情，写出来供大家参考，就是私钥设置完，在服务器上也测试一下，比如

svn checkout -q  -r5 svn+ssh://domain.com/test/trunk tmp

这里会要求输入passphrase，或者添加host到know_host，都可能潜在的影响第一次cap的成功。当然，第一次cap失败可能是必然的，关键是下面分享一下我的deploy.rb给大家参考，减少一些查询的时间，当然很多东西还得看过说明才了解，建议看<a href="http://help.github.com/capistrano/" target="_blank">这篇文章</a>，很有帮助。

下面是我的代码

(略过)

在配置svn的时候，会有不同的权限设置，比如网站目录会放到/var/www/中，我觉得这是安全性的问题，超过这个笔记的范围，就不记述了。不过这其间还是看了一些文章，后面做安全调整的时候会用上的。

补充几个命令

cap -H 查看帮助

cap -T 查看任务，-vT查看更多任务

cap -e deploy:cold 查看deploy:cold 的说明

7、apapche，nginx和passenger

因为CentOS上的apache已经安装好了，所以这里只要安装一下passenger就可以了，安装起来竟然无比简单，缺少的lib按照提示yum一下就可以了。

&nbsp;

8、安装sqlite3-ruby的问题

google了一下发现很多人安装这个出现问题，yum install sqlite3-ruby 也不可以，这里很奇怪，yum竟然找不到这个包。

省去一些步骤，直接 yum search sqlite， 发现给出的包有：
<div>
<div>
<div>mono-data-sqlite.i386 : sqlite database connectivity for Mono</div>
<div>pdns-backend-sqlite.i386 : SQLite backend for pdns</div>
<div>php-pear-Log.noarch : Abstracted logging facility for PHP</div>
<div>python-sqlite.i386 : Python bindings for sqlite.</div>
<div>qt4-sqlite.i386 : SQLite drivers for Qt's SQL classes</div>
<div>sqlite.i386 : Library that implements an embeddable SQL database engine</div>
<div>sqlite-devel.i386 : Development tools for the sqlite3 embeddable SQL database engine.</div>
</div>
</div>
原来是包的名称不对，所以

yum install sqlite.i386

提示已经安装

yum install sqlite-devel.i386

安装成功，再次 gem install sqlite3，提示

sqlite3-ruby only supports sqlite3 versions 3.6.16+, please upgrade!

好，可算有了进展。下载 http://www.sqlite.org/download.html 最新版本的sqlite，安装后，再次 gem install sqlite3，成功了！！

回到rails目录，再次 bundle install。胜利完成。

9、rake任务出错，/lib/rake.rb:32: warning: already initialized constant RAKEVERSION

临时的解决办法，bundle exec rake RAILS_ENV=production  db:migrate

这不是最终解决办法，还在找，刚才心急一下给发布了，其实还没写完呢。。

问题发现了，是rake的问题，卸载之后重新安装rake 0.8.7，问题暂时解决。

10、No such file or directory - /tmp/mysql.sock

CentOS的位置和方法，在此备注，ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock

11、invalid packet: sequence number mismatch(3 != 1(expected))

说是ruby-mysql2.9.4的问题，暂时使用2.9.3。但是问题依旧。

gem 'mysql2', '0.2.7' 和gem 'mysql'的区别

最新版本的mysql2，是0.3.2，这是集成进rails3.1的，不适用于rails3.0.7，所以需要指定版本为0.2.7，环境可以为Raisl 3.0.x和mysql 5.x

gem 'ruby-mysql'和gem 'mysql-ruby'的区别：都不用了，直接用 gem 'mysql'

“invalid packet: sequence number mismatch”的问题已经解决，去掉ruby-mysql的gem，直接使用 gem 'mysql'

在我的版本环境里，gem 'mysql2'也不行，我的环境，rvm, ruby1.9.2p180, rails 3.0.7

12、rake 0.9.2和0.8.7，会被同时安装，也会因为0.9.2产生问题，建议删除0.9.2

&nbsp;

13、自动执行rake任务

看了一些介绍，其实总结起来是三个事情

（1）参照系统默认的crontab任务，这方面资料很多

（2）rails的好处是gem和实现方案很多，建议使用 <a href="https://github.com/javan/whenever" target="_blank">whenever</a> 来实现，它会直接提示代码如何写，粘贴到当前用户的crontab里就可以

（3）具体做法，

&gt;&gt; crontab -e   编辑当前用户的cron任务

&gt;&gt;  */30 * * * * /bin/bash -l -c 'cd /home/liwei/wwwroot/appflying.com &amp;&amp; RAILS_ENV=production rake autorss:work --silent'

其实这个文件就这一行就可以，我完整的代码是

SHELL=/bin/bash

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/rvm/gems/ruby-1.9.2-p180@global/bin

MAILTO=root

HOME=/home/liwei
*/30 * * * * /bin/bash -l -c 'cd /home/liwei/wwwroot/appflying.com &amp;&amp; RAILS_ENV=production rake autorss:work --silent'

&nbsp;

写在最后：算是大功告成？？其实我没感觉，但是总算把我想写的内容写完了。后面还会有一些笔记。这个笔记到此用了2周时间，留念。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>609</wp:post_id>
		<wp:post_date>2011-06-07 00:02:41</wp:post_date>
		<wp:post_date_gmt>2011-06-06 16:02:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-on-centos-step-by-step</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="advanced-rails"><![CDATA[Advanced Rails]]></category>
		<category domain="post_tag" nicename="capistrano"><![CDATA[capistrano]]></category>
		<category domain="post_tag" nicename="centos"><![CDATA[centos]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="nginx"><![CDATA[nginx]]></category>
		<category domain="post_tag" nicename="passenger"><![CDATA[passenger]]></category>
		<category domain="post_tag" nicename="rails"><![CDATA[rails]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="rvm"><![CDATA[rvm]]></category>
		<category domain="post_tag" nicename="ssh"><![CDATA[ssh]]></category>
		<category domain="post_tag" nicename="svn"><![CDATA[svn]]></category>
		<category domain="post_tag" nicename="whenever"><![CDATA[whenever]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ad547dd5b13b248052fc2031e3741019</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_075ec65f022a491d219713c0788c4493</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>readline load error的解决办法</title>
		<link>http://railser.cn/blog/readline-load-error-rails307</link>
		<pubDate>Mon, 20 Jun 2011 07:55:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=636</guid>
		<description></description>
		<content:encoded><![CDATA[服务器总算都调试完了，今天打算看一下一个app的具体信息，发现 rails c提示错误。

这是个常见的错误：`require': no such file to load -- readline (LoadError)

原因：缺少readline

解决办法：进入rvm ruby1.9.7的src，安装readline

具体：

&gt;&gt; which ruby

/usr/local/rvm/rubies/ruby-1.9.2-p180/bin/ruby

&gt;&gt; cd /usr/local/rvm/src/ruby-1.9.2-p180/ext/readline

&gt;&gt; ruby extconf.rb

&gt;&gt; make

&gt;&gt; make install

再次rails c，解决问题了。

笔记太有用了，都省去了回忆的时间。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>636</wp:post_id>
		<wp:post_date>2011-06-20 15:55:24</wp:post_date>
		<wp:post_date_gmt>2011-06-20 07:55:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>readline-load-error-rails307</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<category domain="post_tag" nicename="readline"><![CDATA[readline]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>crontab的写法误解</title>
		<link>http://railser.cn/blog/crontab</link>
		<pubDate>Mon, 20 Jun 2011 12:05:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=639</guid>
		<description></description>
		<content:encoded><![CDATA[crontab的标准写法参照这里，http://www.centos.org/docs/5/html/Deployment_Guide-en-US/ch-autotasks.html

那么，每阁特定小时运行命令如何写呢？

每隔30分钟，运行一次命令，可以写

*/30 * * * * /sbin/do_something

每隔4小时，可以写成

* */4 * * * /sbin/do

吗？不可以，这样会产生很严重的错误，导致我每分钟运行一次命令，直到某种情况下被中止。想到这我真心疼我的mysql和cpu。

这里正确的写法应该是

0 0,4,8,12,16,20 * * * /sbin/do (<a href="https://github.com/javan/whenever" target="_blank">whenever</a> 给出的写法)

或者

0 */4 * * * /sbin/do (我认为可行的写法，不过至今未确认，这个写法可以从保存时开始，每隔4小时执行一次)

两个写法，都要在第一个位置，指定执行开始的分钟数。

请各位指正，我也继续验证一下我的写法。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>639</wp:post_id>
		<wp:post_date>2011-06-20 20:05:25</wp:post_date>
		<wp:post_date_gmt>2011-06-20 12:05:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>crontab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="crontab"><![CDATA[crontab]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rails new 特定版本</title>
		<link>http://railser.cn/blog/rails-new-%e7%89%b9%e5%ae%9a%e7%89%88%e6%9c%ac</link>
		<pubDate>Sun, 26 Jun 2011 05:27:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=643</guid>
		<description></description>
		<content:encoded><![CDATA[rails _3.0.7_ new railstest

说明：安装多个版本，尤其安装了3.1.0 pre 后，使用Rails 3.0.7这个最新稳定版开发项目。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>643</wp:post_id>
		<wp:post_date>2011-06-26 13:27:30</wp:post_date>
		<wp:post_date_gmt>2011-06-26 05:27:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-new-%e7%89%b9%e5%ae%9a%e7%89%88%e6%9c%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>令人反感的discuz7.2论坛无提示音解决办法</title>
		<link>http://railser.cn/blog/discuz72-pm_sound</link>
		<pubDate>Tue, 23 Aug 2011 08:11:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=648</guid>
		<description></description>
		<content:encoded><![CDATA[最近的一个网站单子里，需要给客户用discuz7.2实现一个会员功能，dz是大品牌，何况康盛又被腾讯收购，质量应该可靠。所以反复衡量，dz成为首选了。（跟DZ和康盛的系列产品源渊太多了。）

客户提出的问题还算顺利的一一解决，客户最后提出一个要求，要对最新的消息有一个提示。这个实现很简单，给客户讲解了如何设定声音，可是问题来了，我这里怎么都听不到声音，客户那里也是如此。

怎么会这样，开始我以为是我浏览器的问题，但是几个浏览器测试都无声，这个是绝对不应该的。代码是官网下载的discuz7.2 utf8。什么情况？怎么办？

网上查了一下竟然很多人反馈了这个问题，可是没有几个提出解决办法的，有两篇的解决办法尝试了一下，没有解决问题。难道是我的特例？？

外包方式开发最可怕的是耽误进度和过多的向客户解释，为客户选择的产品，如果质量不过关，影响的绝对就是制作方的信誉。

现在问题来了，如何解决。

解决办法：

1、先参考官方提供的一个解决办法，仅做参考，因为它也没解决问题。所以我真不知道官方的维护是干什么吃的。

http://www.discuz.net/forum.php?mod=viewthread&amp;tid=1523437&amp;page=7#pid12811924

2、因为mp3,wav等格式均无效，我让合作的美工把声音文件转成了swf，可以在这里下载。

<a href="http://railser.cn/wp-content/uploads/pm_sound.zip" target="_blank">下载论坛提示音swf格式</a>

3、按照上面那篇提示文章，修改一下对应的文件，引用改成swf，并且简化swf的文件引用，因为那个player已经无用了，直接引用swf声音即可。下面是代码，希望能帮助一些朋友。

templates/default/memcp_profile.htm 499行

$('soundplayerlayer').innerHTML = AC_FL_RunContent('id', 'pmsoundplayer', 'name', 'pmsoundplayer', 'width', '0', 'height', '0', 'src', '{$boardurl}images/sound/pm_'+file+'.swf', 'menu', 'false',  'allowScriptAccess', 'sameDomain', 'swLiveConnect', 'true');							}

templates/default/pm_checknew.htm 可以不改动，因为在我的方案里它已经没用了，如果有尝试的朋友，可以对应替换这段代码

&lt;script type="text/javascript" reload="1"&gt;$('pmsound').innerHTML = AC_FL_RunContent('id', 'pmsoundplayer', 'name', 'pmsoundplayer', 'width', '0', 'height', '0', 'src', '{$boardurl}images/sound/pm_$pmsound.swf',  'menu', 'false',  'allowScriptAccess', 'sameDomain', 'swLiveConnect', 'true');&lt;/script&gt;

两段代码的含义是一样的，都是直接引用swf声音文件。

<span style="color: #ff0000;">templates/default/header.htm 在40行位置，增加</span>

<span style="color: #0000ff;">&lt;span id="pmsound"&gt;&lt;/span&gt;</span> &lt;!--{if $prompt}--&gt;&lt;script type="text/javascript" reload="1"&gt;$('pmsound').innerHTML = AC_FL_RunContent('id', 'pmsoundplayer', 'name', 'pmsoundplayer', 'width', '0', 'height', '0', 'src', '{$boardurl}images/sound/pm_$pmsound.swf',  'menu', 'false',  'allowScriptAccess', 'sameDomain', 'swLiveConnect', 'true');&lt;/script&gt;&lt;!--{/if}--&gt;

<span style="color: #ff0000;">此段是解决问题的关键，注意蓝色的部分，论坛代码里是缺失这个的，经检查，pm_checknew里的执行结果被插入到id="append_parent"的一个 div中，而且，里面的<span style="color: #0000ff;">&lt;!--{if $s}--&gt;是无效的</span>。</span>

4、到后台更新缓存，重新测试，声音提示成功。

从发现问题到解决问题经历了几天的时间，这里问题解决不了，终究不能卡住不前的。所以选择好的产品，使用正确的方法，实在太关键。康盛将太多的心思用到了一些花哨的功能上，代码质量一直未见提高，产品硬伤内伤依旧，一个画皮一样的产品，只能靠忽悠来支撑了。

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>648</wp:post_id>
		<wp:post_date>2011-08-23 16:11:11</wp:post_date>
		<wp:post_date_gmt>2011-08-23 08:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>discuz72-pm_sound</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="discuz"><![CDATA[discuz]]></category>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fd5772ae8d936cf2835a8a5191615af8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_12cea84f6724f31368610cbfec6838ad</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_7d9ce68a292ecb85463fccd124158fec</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0f3a9ffd67a58de8bdbb94f705a1634d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ce5a626322fa1c9a74b86fc2bf98d9d5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一个带BOM的utf-8文件引来的麻烦</title>
		<link>http://railser.cn/blog/bom-in-utf8-file</link>
		<pubDate>Thu, 20 Oct 2011 06:41:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=653</guid>
		<description></description>
		<content:encoded><![CDATA[很多朋友应该碰到过这句话吧：“Cannot modify header information - headers already sent bygem(php文件)”。

今天碰到了，起因是用ftp，在windows环境下，使用ftp的编辑功能，在线编辑了一个配置文件。然后就出现了这个提示。

不论是百度还是google，都会给出一堆解决办法，可是，那个最正中要害呢？毕竟我们不是在做学术研究，而且我们碰到的也都是一些常见问题。

好，找到了最关键的一句话：

“如果使用utf-8编码，一定要去掉UTF-8中的BOM，这都是因为utf-8编码文件含有的bom原因，而php4,5都是不支持bom的。去掉bom，可以用Notepad++打开转换一下。”

问题解决了。在此笔记一下。

这里有一篇文章讲了一下原理：<a href="http://blog.sina.com.cn/s/blog_570f6d940100h3vk.html">http://blog.sina.com.cn/s/blog_570f6d940100h3vk.html</a>

简单的说，utf-8不需要BOM，utf-16才需要它。

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>653</wp:post_id>
		<wp:post_date>2011-10-20 14:41:35</wp:post_date>
		<wp:post_date_gmt>2011-10-20 06:41:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bom-in-utf8-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e4%b8%80%e4%b8%aa%e5%b8%a6bom%e7%9a%84utf-8%e6%96%87%e4%bb%b6%e5%bc%95%e6%9d%a5%e7%9a%84%e9%ba%bb%e7%83%a6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2012，云</title>
		<link>http://railser.cn/blog/2012-cloud</link>
		<pubDate>Tue, 20 Dec 2011 11:47:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=657</guid>
		<description></description>
		<content:encoded><![CDATA[最近研究各种云平台，Amazon AWS，盛大云，阿里云。5月份设计的appflying.com，看来可以移到云平台上继续它的2012旅程了。在云上，还有好多想法可以去实施，而且价格也都不贵，看来，2012从云开始吧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>657</wp:post_id>
		<wp:post_date>2011-12-20 19:47:47</wp:post_date>
		<wp:post_date_gmt>2011-12-20 11:47:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2012-cloud</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cloud"><![CDATA[cloud]]></category>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2012，忙，忙，忙</title>
		<link>http://railser.cn/blog/2012-busy-busy-busy</link>
		<pubDate>Sun, 26 Feb 2012 12:20:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=661</guid>
		<description></description>
		<content:encoded><![CDATA[最近问我干嘛呢，我的回答都会是：忙。

忙Rails项目，忙客户的网站维护，忙各种小事情。

最近几个月对云平台的接触，让我内心的某个念头又开始“活动”了。基于云平台的企业网站管理架构，非常适合小作坊的管理。可是小作坊管理的代价，就是天天为电话担心，为Q留言担心，而最不想听到的，就是xxxx改一下，xxx访问不了了。。。

怎么办？

要想想如何解决小作坊管理的弊端，后面会一点点的写吧。（心里偷笑 :-P ，其实我知道如何写，就是太忙没时间。）

广告：http://www.nongyehu.com/yange/ebingfangzhi/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>661</wp:post_id>
		<wp:post_date>2012-02-26 20:20:51</wp:post_date>
		<wp:post_date_gmt>2012-02-26 12:20:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2012-busy-busy-busy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>走铁轨的人</title>
		<link>http://railser.cn/blog/man-on-rails</link>
		<pubDate>Mon, 04 Jun 2012 07:04:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=663</guid>
		<description></description>
		<content:encoded><![CDATA[Part I

这是一份2012年上半年的总结。

最近经历了一个失败项目，在这里写写心得。

项目是用Rails实现一个类pinterest的项目，具体形式和之美，葡萄，美丽说，蘑菇街等网站类似。

可是，这么一个目标明确的项目，为什么会失败呢。

Part II

Rails的开发貌似进入到一个淘汰期，3.0后的Rails，部署上是一个大难题，开发上面临更多的选择障碍。当然，一切一切，取决于经验。经过半年的折磨，笔记写了好多，最终还是会碰到各种编译问题，典型的是版本问题，部署问题。

在aws上部署rails是件很开心的事情，但是拿回国内的服务器部署，就完全是另一个样子，各种无法访问，只能 package 所有的gem，只是，没有用过的东西，在第一次用的时候总有障碍，当障碍多了以后，我们就像超级玛丽一样，虽然能到终点，但是总要蹦蹦跳跳的。

<a href="http://railser.cn/wp-content/uploads/01200000007181115881009551065.jpg"><img class="aligncenter size-full wp-image-668" title="01200000007181115881009551065" src="http://railser.cn/wp-content/uploads/01200000007181115881009551065.jpg" alt="" width="430" height="281" /></a>

Part III

好吧，整理思路，重新开始。

最近给别人的建议，都是能用php的，就不要用Rails，在部署上，开发人员的组合上，php可以有很好的团队和个人，可以有很现成的方案，甚至可以直接买到源代码，改一改就可以实现客户要求。

而Rails呢？

Part IV

Rails已经不再适合做外包开发，这个想法有几点理由，1、找不到代码合作者，2、和美工严重脱节，在没有一个明确的项目经理的情况下，效率很低，3、维护期很难进行功能外包，维护的费用低，而占用的时间长，如果以外包为生，就是无穷尽的修改。

当然，我讲的仅限于我自己，一个人的Rails开发者。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/1282236489274.jpg"><img class="aligncenter  wp-image-669" title="1282236489274" src="http://railser.cn/wp-content/uploads/1282236489274.jpg" alt="" width="300" height="361" /></a></p>
Part V

下一步，该怎么继续自己的Rails开发之路呢？

最近酝酿写一些cms的分析，包括几套Rails cms 的使用笔记，和服务器管理的经验分享。

现在想的，不是这个月要做什么，而是这个星期要做什么，然后把它做完。

ok，Let's move.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>663</wp:post_id>
		<wp:post_date>2012-06-04 15:04:12</wp:post_date>
		<wp:post_date_gmt>2012-06-04 07:04:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>man-on-rails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23340</wp:comment_id>
			<wp:comment_author><![CDATA[里克]]></wp:comment_author>
			<wp:comment_author_email>hi@liwei.me</wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn</wp:comment_author_url>
			<wp:comment_author_IP>118.88.51.4</wp:comment_author_IP>
			<wp:comment_date>2012-06-04 15:05:40</wp:comment_date>
			<wp:comment_date_gmt>2012-06-04 07:05:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[写的很水，从现在开始，感悟写作，学习文字的力量。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338793540.0577";s:7:"message";s:74:"Akismet 无法复查此条评论（回应：），将尽快自动重试。";s:5:"event";s:11:"check-error";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338879258.6304";s:7:"message";s:59:"Akismet 经自动重试后，认定它不是垃圾评论。";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338879258.6352";s:7:"message";s:59:"Akismet 经自动重试后，认定它不是垃圾评论。";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23349</wp:comment_id>
			<wp:comment_author><![CDATA[mobiwolf]]></wp:comment_author>
			<wp:comment_author_email>mobiwolf@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.39.34.41</wp:comment_author_IP>
			<wp:comment_date>2012-06-10 16:38:27</wp:comment_date>
			<wp:comment_date_gmt>2012-06-10 08:38:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1、找不到代码合作者，2、和美工严重脱节，在没有一个明确的项目经理的情况下，效率很低，3、维护期很难进行功能外包，维护的费用低，而占用的时间长，如果以外包为生，就是无穷尽的修改。

呵呵，不论哪个语言，想找到合适的合作者都挺难的，技术合作rails应该还没有那么难 。啥项目没有明确的项目经理，都很可怕，项目管理的目的是解决除代码之外的所有事情来保证项目推进，一个人既写代码又管理，肯定会有问题。后期维护难，我觉得是架构设计的问题，分离的更彻底一点。

其实任何外包都不好做，如果可以选择，那么不要做外包，想办法做产品。这样才是合适的，如果实在没产品，那么外包也是出路。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339317507.8724";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339326051.3136";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23375</wp:comment_id>
			<wp:comment_author><![CDATA[vincent]]></wp:comment_author>
			<wp:comment_author_email>tongwensong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.reai.us</wp:comment_author_url>
			<wp:comment_author_IP>61.135.152.211</wp:comment_author_IP>
			<wp:comment_date>2012-07-19 10:53:26</wp:comment_date>
			<wp:comment_date_gmt>2012-07-19 02:53:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我觉得应该不是rails的问题吧，我用rails不久，但是觉得部署起来还是很快的，使用也方便，开发也简单。加上ruby的特性，感觉很好。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342666406.6767";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342839597.5737";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>开放Rails小社区，大家互动下</title>
		<link>http://railser.cn/blog/rails-dev-board</link>
		<pubDate>Wed, 06 Jun 2012 03:25:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=674</guid>
		<description></description>
		<content:encoded><![CDATA[社区使用了最新开发的 redmine_boards 插件，可以方便的对redmine的板块做以划分区域，并且对帖子增加了分类显示。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-06-11.20.14.png"><img class="aligncenter  wp-image-675" title="屏幕快照 2012-06-06 11.20.14" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-06-11.20.14.png" alt="" width="600" /></a></p>
<p style="text-align: center;"><a href="http://work.liwei.me/projects/rails-dev/boards" target="_blank">进入Rails社区</a></p>
如果你有外包信息，可以在社区里发布，希望大家帮忙传播一下。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>674</wp:post_id>
		<wp:post_date>2012-06-06 11:25:32</wp:post_date>
		<wp:post_date_gmt>2012-06-06 03:25:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-dev-board</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<category domain="post_tag" nicename="%e7%a4%be%e5%8c%ba"><![CDATA[社区]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cms系列一：东风夜放花千树</title>
		<link>http://railser.cn/blog/cms-part-i</link>
		<pubDate>Sun, 10 Jun 2012 07:45:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=678</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

写东西有时候爱应景，比如心里高兴就写上“舌尖上的cms”，但是自己看完也觉得肉麻。可是，再这么平铺的写下去，没有点新鲜感，估计自己都不愿意看了。手里有一套《诗词曲赋文》集，从高中一直读到现在，就用宋词里的章句，作为每一篇的标题吧。

什么是cms

内容管理系统，缩写cms。这是本系列文章里要讨论的主角。它有很多面孔，每个cms都有各自的功能，各自的卖点。

作为网站的内容管理系统，cms要担当起多种管理任务。最简单和常见的，是它要管理文章，和文章内的图片等。再多一些要求，cms要管理管理员和其他角色权限。再多一些要求，它还要管理网站的模版，注册用户，评论信息等等。

这就是cms，一个网站的管理核心。

有了cms做核心，我们再为它换上不同的壳，去扮演不同的网站，学校，企业，购物，博客，社区，等等等等。

国内的cms

目前国内的cms，<a href="http://www.baidu.com/s?wd=cms" target="_blank">从百度的结果看</a>，有6个比较靠谱（不点名）。我个人常用的是dedecms，大大小小做了几十个网站，虽然不懂php，但是dede做网站也不用懂php，只要会用dede的各种功能，会html，css，jquery这几个基本技能，就可以搞定一个普通的企业站了。当然，还需要美工配合。剩下的，就是教客户如何使用他们。

“客户的要求，就是cms要达到的目的。”

cms要以客户为中心，以项目为中心，所以一套cms定天下是不科学的。每个cms有自身的发展史，有自身的界面特点，使用特点。为了满足各种客户需求，开发人员需要不断的调整自己的思路和代码实现。一个小小的文字改变，比如“广告管理”改成“内容块管理”，就让一些企业网站用户使用起来不那么意外了。

国外的cms

国外的cms中，有一些是博客类型的。在众多外包站点里，博客建站的成交量很大，也有着众多的专业团队来制作博客型的网站。一套博客程序完全可以承担企业网站，新闻网站，团队网站，产品网站的制作。wordpress，就是个典型。本系列将重点讨论的是Rails cms，但是也要学习其他各种类型的cms，做一个笔记总结。

有一篇文章，详细的列举了国外的12款rails cms，<a href="http://blog.arunace.com/12-ruby-on-rails-content-management-systems-cms/" target="_blank">点击这里查看</a>，<a href="http://www.iteye.com/news/23222" target="_blank">中文翻译在这里</a>。

国内cms特点

不敢大肆的讲自己的观点，我只是讲讲自己看到的特点，至于不周和不对的地方，请大家在留言里指出。

特点一：整站可静态化html

特点二：“友情链接”，“广告管理”等字样明显，对cms有很大的误导

特点三：适合国人操作，尤其适合企业用户。我关注的不是站长的想法。

特点四：可以抓取

上几个截图：
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-09.54.49.png"><img class="size-medium wp-image-681 aligncenter" title="屏幕快照 2012-06-05 09.54.49" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-09.54.49-300x180.png" alt="" width="300" height="180" /></a></p>
<p style="text-align: center;">phpcms的登陆界面，很多年没有变的布局</p>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-10.10.58.png"><img class="size-medium wp-image-682 aligncenter" title="屏幕快照 2012-06-05 10.10.58" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-05-10.10.58-300x155.png" alt="" width="300" height="155" /></a></p>
<p style="text-align: center;">清晰的页面布局，功能分配很明确</p>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.15.55.png"><img class="aligncenter size-medium wp-image-683" title="屏幕快照 2012-06-09 11.15.55" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.15.55-300x138.png" alt="" width="300" height="138" /></a></p>
<p style="text-align: center;">java的泽元cms</p>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.19.44.png"><img class="aligncenter size-medium wp-image-684" title="屏幕快照 2012-06-09 11.19.44" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.19.44-300x225.png" alt="" width="300" height="225" /></a></p>
<p style="text-align: center;">版本依旧是200909281030的帝国cms，失落的帝国</p>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.23.45.png"><img class="aligncenter size-medium wp-image-685" title="屏幕快照 2012-06-09 11.23.45" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.23.45-300x217.png" alt="" width="300" height="217" /></a></p>
<p style="text-align: center;">.net的siteserver，可以多站点发布，只是界面比较gem.咳咳</p>
<p style="text-align: left;"><span style="text-decoration: underline;">315时刻：百度某cms的产品时，发现其公司软件开发资质证书是假的，各位留神。</span></p>
<p style="text-align: left;"><span style="text-align: center;">特点五、国产的cms，在布局上都使用了frame嵌套，左右两部分，上方导航和左侧导航。整体框架无刷新，即可实现各种管理界面的切换。</span></p>
好了，接下来，逐个看看国外的Rails cms。

<a href="http://zenadmin.org/en" target="_blank">zena</a>
<p style="padding-left: 30px;">Zena是一个基于Rails框架开发的CMS内容管理系统，支持多语言，版本控制，基于组的权限控制，图片剪裁和大小调整，对开发者非常友好。</p>
zena的安装很简单，直接用gem安装，github上有器代码，非常有学习价值。http://zenadmin.org/en/features 这里讲了它的几个特性，吸引我的是它后台编辑的能力，一个数据库支持多个站点管理，在线模版编辑和模版预定义。

zena非常适合Rails的学习和教学，遗憾的是，它可怜的后台界面gem和它只能在ruby 1.8.7上运行。它的运行命令是 zena init。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.47.26.png"><img class="size-medium wp-image-686 aligncenter" title="屏幕快照 2012-06-09 11.47.26" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-09-11.47.26-300x136.png" alt="" width="300" height="136" /></a></p>
<p style="text-align: center;">真的可能大概或许，它只适合教学吧</p>
&nbsp;

好了，今天介绍了第12位的rails cms，明天按照上面提到的文章，介绍其他的cms。

最后送上一首宋词，给大家欣赏：

破阵子·为陈同甫赋壮词以寄之
<div> 　　醉里挑灯看剑，梦回吹角连营。八百里分麾下炙，五十弦翻塞外声。沙场秋点兵。</div>
<div> 　　马作的卢飞快，弓如霹雳弦惊。了却君王天下事，赢得生前身后名。可怜白发生！</div>
作者：辛弃疾，出生的时候，金已经占了北方，处在南宋和金对抗的时代。有郭靖那种人的性格特点，正统思想严重，一生都在战斗状态。

声明：本文属李玮原创作品，所引用的内容均来自互联网。转载请注明出处为“里克的自习室”，谢谢对Rails的支持。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date>2012-06-10 15:45:25</wp:post_date>
		<wp:post_date_gmt>2012-06-10 07:45:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cms-part-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cms"><![CDATA[cms]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23348</wp:comment_id>
			<wp:comment_author><![CDATA[mobiwolf]]></wp:comment_author>
			<wp:comment_author_email>mobiwolf@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.39.34.41</wp:comment_author_IP>
			<wp:comment_date>2012-06-10 16:22:05</wp:comment_date>
			<wp:comment_date_gmt>2012-06-10 08:22:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈，学习了。

不错，锁定企业级的CMS。

期待下一篇文字]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339316525.2708";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339326053.8248";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>cms系列二：塞下秋来风景异</title>
		<link>http://railser.cn/blog/cms-part-ii</link>
		<pubDate>Sun, 10 Jun 2012 11:58:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=692</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

标题来自范仲淹的《渔家傲》。古人的诗词里经常写到银河，可是现在的居住环境，连星星也只能看到最亮的那几颗了。

12款rails cms，<a href="http://blog.arunace.com/12-ruby-on-rails-content-management-systems-cms/" target="_blank">点击这里查看</a>，<a href="http://www.iteye.com/news/23222" target="_blank">中文翻译在这里</a>。继续按照它的罗列，来详细的分析下这些cms。当然，我不是个太规矩的人。

<a href="http://webiva.org/" target="_blank">webiva</a>

"Webiva是一个基于Rails开发的Web 2.0的开源网站构建系统，提供可扩展模块系统，允许轻松对功能进行扩展。"

每一款cms，都有它出生的来由，都有它服务的客户，这是它继续发展的动力。所以每个cms不是来解决cms面临的一切问题的。webiva就是这样，它界面很清新，或者叫卡通，管理上有比较清楚的按钮，这第一感觉，让它看起来更适合做学校，幼儿园的网站。

但是人家的目的不那么小家子气。它的几个特点，可视化编辑网站模版，快速的调整网站栏目结构和页面，支持更多的module，并且可以内建多个站点，并绑定各自的域名。按照它介绍里的说法，webiva是快速建站系统，而不是传统的cms。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/files5.png"><img class="size-medium wp-image-693 aligncenter" title="files5" src="http://railser.cn/wp-content/uploads/files5-300x210.png" alt="" width="300" height="210" /></a></p>
<p style="text-align: center;"><a href="http://webiva.org/screenshots" target="_blank">点击这里，还有大量的网站截图</a></p>
webiva的作者是典型的技术流家庭，老婆做设计，老公做代码，webiva的想法来自2006年的micro-cms，项目1.0使用的是Rails2.3.5，2.0或许已经迁移到了Rails3上。

如果各位想深入的使用webiva，可以到它的开发论坛上，跟作者交流下，地址：<a href="http://www.webiva.net/forum" target="_blank">http://www.webiva.net/forum</a>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-10-05.31.36.png"><img class="size-medium wp-image-694 aligncenter" title="屏幕快照 2012-06-10 05.31.36" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-10-05.31.36-300x194.png" alt="" width="300" height="194" /></a></p>
<p style="text-align: center;">不要着急，休息，休息一下</p>
&nbsp;

好，开始介绍下一个。

<a href="http://fdv.github.com/typo/" target="_blank">typo</a>

typo是一个强大的博客系统，从2005年至今，它可以算作是最古老的rails博客系统，它有自己的引擎，有很好的SEO优化，支持theme和插件扩展。

typo是很正统的博客系统，现在看上去就像是Rails里的wordpress，当然，wp越走越快。type 6.0使用的是Rails3.0.10，type6.1使用的是ruby1.9，并且是Rails3.0系列的最后一个。

typo的代码也是很值得仔细研究的，讲到这，想到了当时的另一套博客程序，<a href="http://www.mephistoblog.com/" target="_blank">mephistoblog</a>，它的代码也值得研究。但是现在看了一下它，还是停留在2011年的版本上，一年来没有什么改变，相比其他cms的活跃程度，mephisto真的是“长烟落日孤城闭”了。可能改叫大菠萝，或许会火吧。

typo和mephisto当时都提供了转移wp到自己平台的方法，也有很多Rails博客，至于用他们来制作企业级项目，我没有找到。可能他们只适合博客群体和Rails的Geek吧。

typo的demo在<a href="http://demo.typosphere.org/" target="_blank">这里</a>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/QQ截图20120610192321.png"><img class="aligncenter size-medium wp-image-699" title="QQ截图20120610192321" src="http://railser.cn/wp-content/uploads/QQ截图20120610192321-300x145.png" alt="" width="300" height="145" /></a></p>
<p style="text-align: center;"> 后台的模板，貌似5美元就可以买到</p>
&nbsp;

本篇介绍了两套cms，下一篇会有重量级Rails cms登场了。来，再为各位送上一首宋词：

姜夔，《扬州慢》

淳熙丙申正日，予过维扬。夜雪初霁，荠麦弥望。入其城则四壁萧条，寒水自碧，暮色渐起，戍角悲吟。予怀怆然，感慨今昔，因自度此曲。千岩老人以为有“黍离”之悲也。
<p style="padding-left: 30px;">淮左名都，竹西佳处，解鞍少驻初程。过春风十里，尽荠麦青青。自胡马窥江去后，废池乔木，犹厌言兵。渐黄昏，清角吹寒，都在空城。</p>
<p style="padding-left: 30px;">杜郎俊赏，算而今重到须惊。纵豆蔻词工，青楼梦好，难赋深情。二十四桥仍在，波心荡冷月无声。念桥边红药，年年知为谁生？</p>
评：

《白石道人歌曲》收词八十首，其中十七首带有曲谱。《扬州慢》、《杏花天影》、《姜凉犯》、《暗香》《疏影》、《徵招》、《角招》等十四首是他自创的词调和乐曲；三首是填词配曲的，内有一首填的是范成大的《玉梅令》。这十七首，每首定有宫调，并以宋代工尺字谱(与今流行的工尺谱有所不同)斜行注节，扣于字旁。

白石创制的词调《扬州慢》，是他成熟时期的代表作。孝宗淳熙三年(1176)冬，他二十二岁，自汉阳出游，途经金人两次蹂躏、惨遭兵燹的扬州，看到昔日繁华的商业都城，已是“市尘尽荠麦，号角吹宵寒”，更显得空荡凄凉。眼前的景象和爱国的情思，激起他强烈的感情，用警辟对比的词藻度成此曲，传为佳作。

姜白石一生困蹇，怀才不遇，他在饱经颠沛转徙的困顾生活后，嘉定元年（1208）病卒于临安(今杭州)水磨方氏馆旅邸。幸得友人捐助，始获就近安葬。

<span style="font-size: small;"><span style="line-height: normal;">
</span></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>692</wp:post_id>
		<wp:post_date>2012-06-10 19:58:05</wp:post_date>
		<wp:post_date_gmt>2012-06-10 11:58:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cms-part-ii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cms"><![CDATA[cms]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23351</wp:comment_id>
			<wp:comment_author><![CDATA[mobiwolf]]></wp:comment_author>
			<wp:comment_author_email>mobiwolf@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.18.66.10</wp:comment_author_IP>
			<wp:comment_date>2012-06-11 14:30:19</wp:comment_date>
			<wp:comment_date_gmt>2012-06-11 06:30:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗯， 不错哈。

文字很优雅]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339396219.0965";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1339405446.73";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>cms系列三：长安古道马迟迟</title>
		<link>http://railser.cn/blog/cms-part-iii</link>
		<pubDate>Wed, 13 Jun 2012 13:19:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=706</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：
<a href="http://baike.baidu.com/view/2134.htm" target="_blank">柳永的百科</a>里，讲了很多故事，有兴趣的朋友可以一看，“奉旨填词”一段，不知是真是假。

12款rails cms，<a href="http://blog.arunace.com/12-ruby-on-rails-content-management-systems-cms/" target="_blank">点击这里查看</a>，<a href="http://www.iteye.com/news/23222" target="_blank">中文翻译在这里</a>。

前两篇文章里，写了zena，webiva，type，内容有点少，今天多写一些吧。

<a href="http://slatecms.wvu.edu/" target="_blank">Slate</a>

Slate不能直接下载代码，需要WVU的开发者向官方申请，并且要说明使用的目的。slate的目标是快速的建立传统类型网站，这可能和它的团队背景，<a href="http://www.wvu.edu/" target="_blank">西弗吉尼亚大学</a>有关，当然，这是臆测，说传统类型网站，我第一个想到的是要给40-60岁客户使用的网站，并且要面临无数的要求。当然，客户要求的就是合理的，关键在于我们在开始的时候，如何做出选择，来应对这种改变，和改变带来的风险。

<a href="http://slatecms.wvu.edu/about" target="_blank">slate的fixtures</a>，看上去很适合企业应用，依照它的功能列表开发，省却很多功能思考的时间。

<a href="http://www.skylinecms.nl/" target="_blank">Skyline cms</a>

这是一个让我有点失望的cms，不是它不好，是它不适合我的审美。它进入后台，是可视化编辑所有页面。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-13-02.03.21.png"><img class="size-medium wp-image-712 aligncenter" title="屏幕快照 2012-06-13 02.03.21" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-13-02.03.21-300x177.png" alt="" width="300" height="177" /></a></p>
<p style="text-align: center;">来自荷兰的cms，<a href="http://www.skylinecms.nl/overview/live_demo" target="_blank">点击这里</a>进入它的演示入口。</p>
 skyline cms 符合seo优化要求，提供了外部数据接口，和基于solr的全文检索，所有的页面，内容和文件，都可以加入到索引中。缺点是，它不支持多站点。

接下来是三个经常被提到的cms了。

<a href="http://refinerycms.com/" target="_blank">Refinery cms</a> 和 <a href="http://radiantcms.org/" target="_blank">Radiant cms</a>

介绍上讲的“模块化、可扩展、设计灵活、支持多语言”，已经是众多cms的共同特点了，相比其他支持多站点的cms，refinery只支持单站点。

refinery的<a href="http://demo.refinerycms.com/" target="_blank">管理后台</a>界面是亮点。

radiant和refinery有太多的相似，而且同样不支持多站点。radiant的特性里，自定义模版语言是其亮点所在。

两者相比，refinery更老一些，也展示了更多的<a href="http://refinerycms.com/showcase" target="_blank">客户案例</a>，radiant就保守很多，2010年7月发布了0.9版本，目前的版本是1.0.0。官网上提供了一些扩展，但是跟refinery比起来，缺少showcase的支持，显得底气不足。

Rails本身是个优秀的产品，基于它的cms，无论是新人旧者，都是很好的学习对象，每一款都有自己的生存空间，驾驭好一款，都是对Rails的深造。所以各位看客，我只是从一个不客观的角度去看他们，因为，我要找一款合适的cms，为之投入我大量的时间和经历，为客户提供有质量的开发。仅此而已。

<a href="http://www.locomotivecms.com/" target="_blank">locomotive cms</a>

这是一款cms大作，使用MongoDB作为自己的数据库，支持快速部署到Heroku和Amazon ec2上，使用Liqid模版引擎。

打开locomotive的页面时间痛苦的事情，这里是它的<a href="https://github.com/locomotivecms/engine" target="_blank">github页面</a>。

能够使用Rails与Heroku的组合是无比幸福的，cms为企业站服务的时候，最重要的是要让客户先看到，先用到，节省一切可以节省的时间。

如果你打算用loco来开发一系列的企业站，就做好加入他们团队的准备吧。这是一个运营时间不长的项目，如果碰到致命的bug，就只能求救与开发团队了，如果他们有时间的话。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/ms_large.jpg"><img class="aligncenter size-medium wp-image-714" title="ms_large" src="http://railser.cn/wp-content/uploads/ms_large-300x202.jpg" alt="" width="300" height="202" /></a></p>
<p style="text-align: center;">它的后台页面还是挺精致的</p>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/ie_large.jpg"><img class="aligncenter size-medium wp-image-716" title="ie_large" src="http://railser.cn/wp-content/uploads/ie_large-300x175.jpg" alt="" width="300" height="175" /></a></p>
<p style="text-align: center;">可以在前台自主编辑</p>
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/cc_large.jpg"><img class="aligncenter size-medium wp-image-715" title="cc_large" src="http://railser.cn/wp-content/uploads/cc_large-288x300.jpg" alt="" width="288" height="300" /></a></p>
<p style="text-align: center;">表单很漂亮，都是外在美</p>
:-P 感谢朋友的信息，这里是locomotive的<a href="http://www.locomotivehq.com/" target="_blank">演示站点</a>，可以申请自己的站点。看得出来，locomotive是在朝着heroku的商用开发前进的，有了很好的hosting解决方案，locomotive需要做的就是为客户提供便捷的建站服务。

&nbsp;

写到这里，先做一个小结。cms不是万能的，每个cms都有自己设立时候的初衷，由此，而产生出它独特的特点。

最后，继续分享给大家一首柳永的词《蝶恋花》

伫倚危楼风细细，望极春愁，黯黯生天际。

草色烟光残照里，无言谁会凭阑意。

拟把疏狂图一醉，对酒当歌，强乐还无味。

衣带渐宽终不悔，为伊消得人憔悴。

声明：本文属李玮原创作品，所引用的内容均来自互联网。转载请注明出处为“里克的自习室”，谢谢您对Rails的支持。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>706</wp:post_id>
		<wp:post_date>2012-06-13 21:19:41</wp:post_date>
		<wp:post_date_gmt>2012-06-13 13:19:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cms-part-iii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cms"><![CDATA[cms]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cms系列四：输赢成败，又争由人算</title>
		<link>http://railser.cn/blog/cms-part-iv</link>
		<pubDate>Thu, 14 Jun 2012 07:47:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=722</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

今天的标题语，出自金庸《天龙八部》的《洞仙歌》。词的主旨是纠结，

12款rails cms，<a href="http://blog.arunace.com/12-ruby-on-rails-content-management-systems-cms/" target="_blank">点击这里查看</a>，<a href="http://www.iteye.com/news/23222" target="_blank">中文翻译在这里</a>。继续最后四个cms的介绍。

<a href="https://github.com/wtg/flagship_docs" target="_blank">Flagship Docs</a>

这是一个文档管理系统，有搜索功能，我并未调试它的代码，不多做评价。从github的记录看，2011年至今，它为更新过。

<a href="http://www.caseincms.com/" target="_blank">Casein</a>

Casein是个干净的系统，按照Install说明安装之后，可以看到它比较清新的后台界面。

Casein的用法也很简单，自己scaffold一个资源，然后在后台去管理，至于其他的设计，还是自己按照Rails的要求去设计，总体的看，Casein适合做一些典型企业站。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-14-02.20.34.png"><img class="aligncenter size-medium wp-image-728" title="屏幕快照 2012-06-14 02.20.34" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-06-14-02.20.34-300x151.png" alt="" width="300" height="151" /></a></p>
<p style="text-align: center;">点击看大图，网上没有例子，大家自己调试吧，会发现一个错误。哎。</p>
<a href="http://www.browsercms.org/" target="_blank">Browser CMS</a>

Browser CMS是为团队写作设计的，它使用了最新的Rails3.2运行环境，可以设置各种写作控制权限，按照workflow控制编写发布流程。

遗憾的是我gem没有安装成功它，提示连接错误，也没有google到它的demo。

<a href="https://github.com/svenfuchs/adva_cms" target="_blank">Adva cms</a>

Adva的特点没有多写，只有一个，它安装在vender里。这是一个不影响主体开发的设计，如果急需一个管理工具，可以试试Adva cms。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/adva_cms_admin.jpg"><img class="aligncenter size-medium wp-image-730" title="adva_cms_admin" src="http://railser.cn/wp-content/uploads/adva_cms_admin-300x188.jpg" alt="" width="300" height="188" /></a></p>
&nbsp;

到此，12款cms的介绍就结束了，可是我心中cms的设想还没结束。下一篇将继续讨论，我心中的cms。

最后，把《洞仙歌》的全文贴一下：

输赢成败，又争由人算？且自逍遥没人管。
奈天昏地暗、斗转星移。风骤紧、缥缈峰头云乱。
红颜弹指老、刹那芳华。
梦里真真语真幻。同一笑，到头万事俱空。
胡涂醉、情长计短。解不了、名缰系嗔贪。
却试问、几时把痴心断？

声明：本文属李玮原创作品，所引用的内容均来自互联网。转载请注明出处为“里克的自习室”，谢谢您对Rails的支持。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>722</wp:post_id>
		<wp:post_date>2012-06-14 15:47:23</wp:post_date>
		<wp:post_date_gmt>2012-06-14 07:47:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cms-part-iv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cms"><![CDATA[cms]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23354</wp:comment_id>
			<wp:comment_author><![CDATA[mobiwolf]]></wp:comment_author>
			<wp:comment_author_email>mobiwolf@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.18.236.214</wp:comment_author_IP>
			<wp:comment_date>2012-06-14 20:56:38</wp:comment_date>
			<wp:comment_date_gmt>2012-06-14 12:56:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈，拜读！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339678598.0396";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339681797.7119";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23355</wp:comment_id>
			<wp:comment_author><![CDATA[cms系列五：一饮东坡醒复醉 at 里克的自习室 - Rails学习与开发笔记]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://railser.cn/blog/cms-part-v</wp:comment_author_url>
			<wp:comment_author_IP>180.235.134.190</wp:comment_author_IP>
			<wp:comment_date>2012-06-14 23:45:47</wp:comment_date>
			<wp:comment_date_gmt>2012-06-14 15:45:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[gem] cms系列四：输赢成败，又争由人算 [gem]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339748883.0754";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>cms系列五：一饮东坡醒复醉</title>
		<link>http://railser.cn/blog/cms-part-v</link>
		<pubDate>Thu, 14 Jun 2012 15:45:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=734</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

前面写了四篇介绍Rails cms的文章，分别是
<ul>
	<li><a title="cms系列四：输赢成败，又争由人算" href="http://railser.cn/blog/cms-part-iv">cms系列四：输赢成败，又争由人算</a></li>
	<li><a title="cms系列三：长安古道马迟迟" href="http://railser.cn/blog/cms-part-iii">cms系列三：长安古道马迟迟</a></li>
	<li><a title="cms系列二：塞下秋来风景异" href="http://railser.cn/blog/cms-part-ii">cms系列二：塞下秋来风景异</a></li>
	<li><a title="cms系列一：东风夜放花千树" href="http://railser.cn/blog/cms-part-i">cms系列一：东风夜放花千树</a></li>
</ul>
里面涉及的cms来自《<a href="http://blog.arunace.com/12-ruby-on-rails-content-management-systems-cms/" target="_blank">12个基于Rails框架的CMS系统推荐</a>》，<a href="http://www.iteye.com/news/23222" target="_blank">中文翻译在这里</a> 。

<a href="http://railser.cn/wp-content/uploads/2008328153753877_2.jpg"><img class="aligncenter size-full wp-image-738" title="2008328153753877_2" src="http://railser.cn/wp-content/uploads/2008328153753877_2.jpg" alt="" width="500" height="333" /></a>

之前有个Q友问过我cms的事情，还发给过我他设计的cms结构。我看完之后只有2点意见，一是把“友情链接”改成“连接管理”，一是"广告管理"改成“展示单元管理”。

原因很简单，cms不能把功能写固定了。“友情链接”仅限于连接交换等，这个概念存在于至少十年以上，在很多人的概念里根深蒂固。但是，他不是cms的组成部分。“广告”也是如此，cms不是为友情和广告服务的。

cms是管理网站资源的。

网站的资源有哪些？A：文章，B：用户，C：图片，D：文件，E：评论，F：页面，这是到多选题，你选哪些作为cms的资源呢？

A：文章，入选。只要它有内容，即便没有标题，也是当做文章，进入Article表，作为管理的第一内容。

B：用户，不选。用户系统是单独的系统，不是吗？尤其加上OpenID之后，用户的管理更加的独立于cms。

C：图片，入选。

D：文件，入选。

E：评论，不选。它虽然附属到其他资源上，但是由于评论的审核，显示，性能等原因，它也应该独立出去。

F：页面，入选。

对于Rails cms，该如何管理所有的资源呢？plugin更适合去做B和E的管理。cms做好A，C，D，F的组织。

上面的描述，适合做小型网站，如果是一个大型站点，该如何进一步设计呢？
<p style="text-align: center;"> <a href="http://railser.cn/wp-content/uploads/2133640_101557004797_2.jpg"><img class="aligncenter  wp-image-739" title="2133640_101557004797_2" src="http://railser.cn/wp-content/uploads/2133640_101557004797_2.jpg" alt="" width="350" height="335" /></a></p>
问题一：目前的项目是一个综合门户网站，含有大量新闻资讯，文章，图片，视频（含连接）等。该如何用cms管理这个门户网站？

问题二：如果cms支持多站点，又该如何设计呢？

我的考虑：

1、全站html静态化。这个特点来自dede的长期使用，静态化的优点不用多说。

2、独立的评论模块。其实只要一个唯一的url，就可以显示它的评论了。评论的ajax加载，审核，添加，显示等要求，没必要交给cms去处理。评论的独立，也减少了垃圾评论攻击导致cms的性能下降。

3、独立的用户模块。sns热起来之后，很多人更加关注人与人，人与资源之间的互动。对于资源，用户需要做的是分享，对于人，用户需要关注。（关注后，用户需要得到关注资源的动态。）

4、plugin支持。最近研究redmine，现在研究cms，对plugin的使用更加有体会。

5、多站点与单站点。cms应该支持多站点，但是具体实现方案，如编辑器，图文混排，文件上传，模版编辑等，还可以作为单站点使用方案。

6、云平台部署。这是最深刻的一点，如何快速的利用云平台资源，如盛大云，将站点快速的让客户看到，使用到，是cms应该解决的。很多cms只卖代码，但是像locomotive cms，即卖代码，又提供hosting解决方案，是我个人倾向的模式。

7、私有代码库。我认为，对于一个服务型的项目，私有的代码库可以最大程度避免误操作，可以让代码人员不必关心业务部分，而直接升级主体代码，还可以让整体开发流程更易于控制。

8、开发者社区。开发者是容易孤独的群体，围绕cms，拥有一个活跃的开发者社区，会让参与的人快乐一点，不是吗？

9、开发者在线交易平台。作为开发者，任何一个开发出来的作品，只要符合开发标准，就可以在开放平台交易。这里需要解决的是，标准的制定。

10、教学平台。4月份的北京之行，让我更坚信这个教学平台的意义。

声明：以上观点，出于个人承接的项目对cms的需求，以及个人在工作中的经验思考，总结而来。仅作参考。
<p style="text-align: center;"><a href="http://railser.cn/wp-content/uploads/0140760085.jpg"><img class="aligncenter  wp-image-741" title="0140760085" src="http://railser.cn/wp-content/uploads/0140760085.jpg" alt="" width="360" height="360" /></a></p>
写到这里，对cms的想法差不多写完了。这5篇系列的文章，属于李玮个人原创，如有转载，请注明出处为“里克的自习室”。感谢您对Rails的支持。

最后再送给大家一首词，以供消遣。

秦观，《如梦令 》

莺嘴啄花红溜，燕尾点波绿皱。指冷玉笙寒，吹彻小梅春透。依旧，依旧，人与绿杨俱瘦。

李清照的《如梦令 》大家都熟悉，时间上，秦观去世的时候，李清照刚刚16岁。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>734</wp:post_id>
		<wp:post_date>2012-06-14 23:45:43</wp:post_date>
		<wp:post_date_gmt>2012-06-14 15:45:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cms-part-v</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cms"><![CDATA[cms]]></category>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23357</wp:comment_id>
			<wp:comment_author><![CDATA[mobiwolf]]></wp:comment_author>
			<wp:comment_author_email>mobiwolf@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.18.66.10</wp:comment_author_IP>
			<wp:comment_date>2012-06-15 10:10:09</wp:comment_date>
			<wp:comment_date_gmt>2012-06-15 02:10:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[质量不错，继续加油。

你也可以考虑将CMS开源出来，逐渐的发展社区机会。

让更多的人帮助你来完善，你就可以不断的汲取经验，然后做的更好。

而且框架和业务分离，对你的业务影响也不大。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339726209.3278";s:7:"message";s:32:"Akismet 检查通过了此评论";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1339748880.5677";s:7:"message";s:36:"admin 将评论状态改为 approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>历史分享：《风追司马》（上、下）</title>
		<link>http://railser.cn/blog/si-ma-qian</link>
		<pubDate>Sun, 17 Jun 2012 04:05:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=746</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

写完cms系列文章之后，做了几件事，1，整理书柜，把无用的清理掉，把书重新排列一下，2，看了一遍康震主讲的《李白》，下周计划看《李清照》，3，关注了一下Node.js的应用。

Node.js非常适合为Rails提供一个可靠地，可高并发的上传解决方案。

这里不多讲，等研究完并且有了好的实现，会在这里发布。感谢各位关注Rails，作为回赠，将《风追司马》的上下两集发布一下，以作调剂。

<object width="400" height="300" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://v.ifeng.com/include/exterior.swf?AutoPlay=false&amp;guid=9443930a-8ee0-4edc-a89a-e1009dae9e79" /><embed width="400" height="300" type="application/x-shockwave-flash" src="http://v.ifeng.com/include/exterior.swf?AutoPlay=false&amp;guid=9443930a-8ee0-4edc-a89a-e1009dae9e79" /></object>

&nbsp;

<object width="400" height="300" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://v.ifeng.com/include/exterior.swf?AutoPlay=false&amp;guid=f4da6ee4-74a4-4263-a56d-6a048513ffbc" /><embed width="400" height="300" type="application/x-shockwave-flash" src="http://v.ifeng.com/include/exterior.swf?AutoPlay=false&amp;guid=f4da6ee4-74a4-4263-a56d-6a048513ffbc" /></object>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>746</wp:post_id>
		<wp:post_date>2012-06-17 12:05:24</wp:post_date>
		<wp:post_date_gmt>2012-06-17 04:05:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>si-ma-qian</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<category domain="post_tag" nicename="%e5%8e%86%e5%8f%b2"><![CDATA[历史]]></category>
		<category domain="post_tag" nicename="%e5%8f%b8%e9%a9%ac%e8%bf%81"><![CDATA[司马迁]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[shi-ma-qian]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>无法安装icu4c的解决办法。</title>
		<link>http://railser.cn/blog/brew-install-icu4c</link>
		<pubDate>Sun, 15 Jul 2012 07:52:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=753</guid>
		<description></description>
		<content:encoded><![CDATA[网站无法连接，所以无法安装，解决办法是：

.

.

.

.

.

<del>brew install http://railser.cn/soft/icu4c-4_4_1-src.tgz

就可以了。

</del>

写错了，纠正下。按照提示，下载的是一个压缩包，里面有说明文件和源代码。解压后进入里面的source，在make &amp;&amp; make install，才能完成安装。

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>753</wp:post_id>
		<wp:post_date>2012-07-15 15:52:27</wp:post_date>
		<wp:post_date_gmt>2012-07-15 07:52:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>brew-install-icu4c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="icu4c"><![CDATA[icu4c]]></category>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails不要这么写查询了</title>
		<link>http://railser.cn/blog/donot-write-this-way-in-rails-query</link>
		<pubDate>Sun, 02 Sep 2012 07:30:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=765</guid>
		<description></description>
		<content:encoded><![CDATA[周末2天，升级客户程序的代码。这次升级要解决性能问题，因为项目用了很久，工作日期间mysql的cpu消耗率一直很高，log里已经出现miss cache 的提示。这次要彻底查出问题。

表面上看，sql的反复查询是个问题，如下：

这是未修正前的/users/5的查询

<a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.01.26.png"><img class="size-full wp-image-767" title="屏幕快照 2012-09-02 03.01.26" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.01.26.png" alt="" width="520" height="270" /></a>

之前我可以很无视这个cache，这不是rails的特点么，在我翻译的文章里，我觉得这是很酷的地方。可是，当mysql消耗掉cpu 90% 的性能时，这个cache真不让人乐观的以为它会起到作用。于是决定：去掉cache的部分。

如何去掉，就是用controller变量来取代实例查询，一次查询，整个page都引用它。

接着，运行全部的页面测试，看是否有遗漏。没有测试？好吧，我用了很久才把测试都加上。使用的是rails自己的测试。rake test:functionals

接下来一个问题，是这篇文章的关键。

<a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.16.01.png"><img class="alignleft size-full wp-image-768" title="屏幕快照 2012-09-02 03.16.01" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.16.01.png" alt="" width="1003" height="176" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

两个粉色的字体，同样的操作，这是重复的事情，却是如何出现的？

原来，答案在model里。

self.user_messages.present? ? self.user_messages.unread.count : 0

这种写法当然很rails，可是确造成了多余的浪费，对于大量浏览的user show页面，mysql的负载可想而知。

改成下面的写法
UserMessage.count(:conditions =&gt; ["user_id = ? and read = ?", self.id, false])

页面的sql查询终于达到我的期望了。如下

<a href="http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.22.54.png"><img class="alignleft size-full wp-image-770" title="屏幕快照 2012-09-02 03.22.54" src="http://railser.cn/wp-content/uploads/屏幕快照-2012-09-02-03.22.54.png" alt="" width="792" height="150" /></a>

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

一条用户查询，一条查询未读信息，一条分页显示。

这个笔记的目的是，提醒自己和开发Rails的朋友，不要太多依赖Rails的美感，关键页面，性能最重要。

最后，祝她工作顺利。

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>765</wp:post_id>
		<wp:post_date>2012-09-02 15:30:38</wp:post_date>
		<wp:post_date_gmt>2012-09-02 07:30:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>donot-write-this-way-in-rails-query</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mysql"><![CDATA[mysql]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>升级09款mac mini笔记</title>
		<link>http://railser.cn/blog/update-09-mac-mini</link>
		<pubDate>Sat, 27 Oct 2012 04:27:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=776</guid>
		<description></description>
		<content:encoded><![CDATA[今天凌晨，苹果发布了多款新的mac产品，最让我心动的是iMac，当然，还有价格又再降的mac mini。手里工作用的mac mini是09年款的，至今还在用着2G内存。因为最近工作经常要开虚拟机，所以我决定升级我的mini到8G。

网上有一篇帖子，讲述了如何给09年mini拆机。可是文章不是针对更换内存讲的，而且细节的部分还是不太到位，所以，来吧，我自己贴图讲解。

<a href="http://railser.cn/blog/mac-mini%E5%88%B0%E5%BA%95%E6%9C%89%E5%A4%9Amini%EF%BC%9F%EF%BC%9F" target="_blank">这还是mini到手时候的得瑟贴</a>。

首先，先拆开它的盖子。其实拆开它并没有网贴写的那么复杂，我是按照下图的方式打开它的。

<a href="http://railser.cn/wp-content/uploads/P241012_19.12.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_19.12-300x225.jpg" alt="" width="300" height="225" /></a><a href="http://railser.cn/wp-content/uploads/P241012_19.12.jpg">
</a>

我是从耳机的插孔上方，用小刀一点点撬开一个缝隙，然后，用咖啡勺，撬开的。

<a href="http://railser.cn/wp-content/uploads/P241012_19.11_01.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_19.11_01-300x225.jpg" alt="" width="300" height="225" /></a><a href="http://railser.cn/wp-content/uploads/P241012_19.11_01.jpg">
</a>

撬开一些后，只需要垂直上下的撬动，就可以把其他几个边带开，不用逐个边去撬。

<a href="http://railser.cn/wp-content/uploads/P241012_19.11.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_19.11-300x225.jpg" alt="" width="300" height="225" /></a><a href="http://railser.cn/wp-content/uploads/P241012_19.11.jpg">
</a>

所以，不要觉得里面暗扣很多，会很难撬。这个过程我还是很顺利的。里克自习室railser.cn。

<a href="http://railser.cn/wp-content/uploads/P241012_17.51_01.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_17.51_01-300x225.jpg" alt="" width="300" height="225" /></a><a href="http://railser.cn/wp-content/uploads/P241012_17.51_01.jpg">
</a>

打开后的第一个难点，是如何找到内存的位置。网上文章讲的，是需要拆掉6个螺丝，拿下来光驱，再拆开下面的底座。其实，不要拆掉光驱。换内存，只需要把四个角的螺丝去掉，拿下底座即可。

在掀起光驱和下面的框架（里面有硬盘）前，需要去掉3个天线，上边两个还是好去掉的，下边这个，按照我的手势，把底下的暗扣夹一下，就可以顺利取下了，千万别用蛮力。

<a href="http://railser.cn/wp-content/uploads/P241012_19.05.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_19.05-300x225.jpg" alt="" width="300" height="225" /></a><a href="http://railser.cn/wp-content/uploads/P241012_19.05.jpg">
</a>

下图是取下来的光驱，硬盘和风扇，他们是一个主体。

<a href="http://railser.cn/wp-content/uploads/P241012_17.55_02.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_17.55_02-300x225.jpg" alt="" width="300" height="225" /></a>

下面是另一部分主体，左下角就是内存。换掉它吧。里克自习室railser.cn。

<a href="http://railser.cn/wp-content/uploads/P241012_17.55.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_17.55-300x225.jpg" alt="" width="300" height="225" /></a>

这里有1个地方要注意，就是三个天线的连接点很容易掉，每次要检查一下，不要松动。另外，内存也要插牢。

主板上只有一个插槽，很容易和主体分开，如果觉得哪里卡住了，千万别用蛮力。里面只有四角的螺丝固定主体，整体就像一个拼接好的玩具，空间很紧密。

<a href="http://railser.cn/wp-content/uploads/P241012_17.55_01.jpg"><img title="S" src="http://railser.cn/wp-content/uploads/P241012_17.55_01-300x225.jpg" alt="" width="300" height="225" /></a><a href="http://railser.cn/wp-content/uploads/P241012_17.55_01.jpg">
</a>

到这里，重新开机测试，没问题，可以把盖子再装回去了。

讲讲最近的工作。8月底找了一份全职开发的工作，有Rails的部分，目前主要做OpenERP的维护和开发，用python和postgresql。希望大家多交流吧。

转载的时候请保留里克自习室的字样，谢谢观赏。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>776</wp:post_id>
		<wp:post_date>2012-10-27 12:27:14</wp:post_date>
		<wp:post_date_gmt>2012-10-27 04:27:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>update-09-mac-mini</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac"><![CDATA[apple mac]]></category>
		<category domain="post_tag" nicename="mini"><![CDATA[mini]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[update-mac-mini]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>我一直在用的香港云主机，推荐给大家</title>
		<link>http://railser.cn/blog/hk-vps</link>
		<pubDate>Thu, 06 Dec 2012 09:59:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=789</guid>
		<description></description>
		<content:encoded><![CDATA[地址：<a href="http://mya.vpshosting.com.hk/aff.php?aff=083" target="_blank">http://www.vpshosting.com.hk</a>

今年5月份买的云服务器，用到现在，大家都说挺快的，所以推荐给大家吧。如果有想放些个人网站，企业网站的，也可以联系我。我的服务器2G内存，还有不少空间。

我的配置php5.2.17 + zend + mysql.

谢谢各位。

博主最近几个月开始从事OpenERP的工作，目前在用ruby脚本完成一些期初建账的事情，有erp经验的朋友可以交流下。如果有靠谱的erp培训，可以提供给我，不胜感激。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>789</wp:post_id>
		<wp:post_date>2012-12-06 17:59:24</wp:post_date>
		<wp:post_date_gmt>2012-12-06 09:59:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hk-vps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[hk-vp]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2013</title>
		<link>http://railser.cn/blog/2013</link>
		<pubDate>Thu, 28 Feb 2013 05:44:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=794</guid>
		<description></description>
		<content:encoded><![CDATA[最近半年，一直在做OpenERP的全职开发，说是开发，也是用ruby来调用OE的api，还为真正进入到python的开发中。目前要尝试做一些python代码，加油。

这半年一直使用ubuntu开发，sublime text 2.0真是ubuntu上的好东西。

sublime最赞的是右侧的缩略图代替滚动条，找代码真是舒服呀，只是在打开log文件时候，缩略图没什么用了，显得定位也不准。但是对普通代码，少了它真不习惯。

分享个资源帖 http://www.qianduan.net/essential-to-sublime-the-text-2-plugins.html

目前已经不做rails开发，专心往ERP方向上发展了，加油加油。

10年前埋怨会计专业，十年后用它赚钱，生活说是无常，实则是我们没有领悟它的短暂。

liwei，2013年2月28日，2013第一帖]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>794</wp:post_id>
		<wp:post_date>2013-02-28 13:44:29</wp:post_date>
		<wp:post_date_gmt>2013-02-28 05:44:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2013</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="others"><![CDATA[others]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>openerp 7.0</title>
		<link>http://railser.cn/blog/openerp-7-0</link>
		<pubDate>Wed, 20 Mar 2013 05:46:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=797</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

最近半年一直在从事openerp的开发工作，这是一个新的挑战，还好十年前学的会计常识有一些帮助，初期的入门阶段已过，接下来就是不断的学习了。

下面是一些文章连接，发在这里是为了索取7.0的开发教程。虽然英文也可阅读，但是就财会经验上看，还是翻译一下的术语更容易理解。

&nbsp;

OpenERP 7.0版本发布: <a href="http://shine-it.net/index.php/topic,5807.msg14435.html#msg14435" target="_blank">http://shine-it.net/index.php/topic,5807.msg14435.html#msg14435</a>
对不起SAP，我要终结你！--OpenERP 7.0发布之前: <a href="http://www.openerpchina.org/forum.php?mod=viewthread&amp;tid=300" target="_blank">http://www.openerpchina.org/forum.php?mod=viewthread&amp;tid=300</a>
OpenERP进入中国大学课堂: <a href="http://shine-it.net/index.php/topic,5808.0.html" target="_blank">http://shine-it.net/index.php/topic,5808.0.html</a>
OpenERP 7.0成倍提高并发处理能力： <a href="http://shine-it.net/index.php/topic,5810.0.html" target="_blank">http://shine-it.net/index.php/topic,5810.0.html</a>

10万雪花银换来的开源ERP经验： <a href="http://shine-it.net/index.php/topic,4422.0.html" target="_blank">http://shine-it.net/index.php/topic,4422.0.html</a>
排名最前的6款开源ERP软件比较： <a href="http://bbs.erp100.com/thread-254957-1-1.html" target="_blank">http://bbs.erp100.com/thread-254957-1-1.html</a>
盘点世界排名最前的5款开源ERP软件： <a href="http://shine-it.net/index.php/topic,4425.0.html" target="_blank">http://shine-it.net/index.php/topic,4425.0.html</a>
OpenERP连获大奖： <a href="http://shine-it.net/index.php/topic,4392.0.html" target="_blank">http://shine-it.net/index.php/topic,4392.0.html</a>

OpenERP——下一代ERP： <a href="http://shine-it.net/index.php/topic,5809.0.html" target="_blank">http://shine-it.net/index.php/topic,5809.0.html</a>
OpenERP PK SAP： <a href="http://shine-it.net/index.php/topic,4421.0.html" target="_blank">http://shine-it.net/index.php/topic,4421.0.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>797</wp:post_id>
		<wp:post_date>2013-03-20 13:46:47</wp:post_date>
		<wp:post_date_gmt>2013-03-20 05:46:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>openerp-7-0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="openerp"><![CDATA[openerp]]></category>
		<category domain="post_tag" nicename="openerp"><![CDATA[openerp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在mac os 10.8.4 上安装 imagemagick</title>
		<link>http://railser.cn/blog/install-imagemagick-on-mac-os-10-8-4</link>
		<pubDate>Thu, 15 Aug 2013 17:06:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=804</guid>
		<description></description>
		<content:encoded><![CDATA[写在前面：

许久没有用Rails开发项目了，现在回想起来，已经有一年了。好的项目不可期，我们只有耐心的准备着。做程序就像是场耐力赛。

&nbsp;

我没有想到在10.8.4上安装imagemagick如此的麻烦，因为缺少的 Magick-config 总是无法找到，这个问题在 10.6.2 上是不存在的。当然，在ubuntu和centos上也没遇到过。

在10.6.2上只要安装magick-wand就可以解决，并顺利的安装imagemagick，但是到了10.8.4，就再也找不到合适的magick-wand了。

当然，我已经用了port，我不想让brew再次引起冲突，导致我大范围的重装。那是一场噩梦。

还好，我找到了magick-installer，fork之后修正了一个文件的地址，这次正常的安装成功了。

说起来简单，解决和测试它，竟然用了3个多小时。

地址：https://github.com/liwei78/magick-installer

liwei 2013-8-16

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>804</wp:post_id>
		<wp:post_date>2013-08-16 01:06:13</wp:post_date>
		<wp:post_date_gmt>2013-08-15 17:06:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>install-imagemagick-on-mac-os-10-8-4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="imagemagick"><![CDATA[imagemagick]]></category>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nil 不等于0</title>
		<link>http://railser.cn/blog/nil-not-equal-zero</link>
		<pubDate>Tue, 03 Sep 2013 14:00:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=825</guid>
		<description></description>
		<content:encoded><![CDATA[小提示：

&gt; nil == 0

false

那么，migrate的时候，integer的column就要给一个 default: 0的限制，这样，你查询时候的幸福指数会提升很多。

否则，user.read_count

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>825</wp:post_id>
		<wp:post_date>2013-09-03 22:00:51</wp:post_date>
		<wp:post_date_gmt>2013-09-03 14:00:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nil-not-equal-zero</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[RailsNote]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>if a&#124;&#124; b 的重构</title>
		<link>http://railser.cn/blog/refactoring-if-a-or-b</link>
		<pubDate>Sat, 07 Sep 2013 09:08:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://railser.cn/?p=828</guid>
		<description></description>
		<content:encoded><![CDATA[当遇到 if a || b 的时候，我们要先看一下，a 和 b 到底是不是可以用区间来覆盖。

初中老师会让我们算，a &lt; 3 或 a &gt; 5 的那些整数。那么a一定是在这2个区间了，所以，if 中的那个，一定是两个区间中的一个。

这次我见到的代码是，
if !a || a.user.name.nil?

这就不合符or的区间判断，or两边就不是一回事！！

写代码的小伙伴们，这是种坏习惯。

建议：

先从区间上看，再从条件上看，这不是一个or查询，而是一个嵌套的if判断。

我们先改动如下：

<code>
if a.nil?
    gem
else
    if a.user.name.nil?
        gem
    end
end
</code>

但是既然写到重构板块，那么我们应该从测试的角度，再做一次优化。

<code>
if a.nil?
    gem
else
    a_new_method
end

def a_new_method(aa)

    if aa.user.name.nil?
        gem
    end

end
</code>

这样，我们就可以测试a_new_method，是否完成了一个单元功能，再测试if是否完成了条件判断。

以上是一次很典型的重构加测试的实践。

里克，2013-9-7]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>828</wp:post_id>
		<wp:post_date>2013-09-07 17:08:41</wp:post_date>
		<wp:post_date_gmt>2013-09-07 09:08:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>refactoring-if-a-or-b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="%e9%87%8d%e6%9e%84"><![CDATA[重构]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
